{"ast":null,"code":"var _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/home/Home.jsx\";\nimport React, { useEffect } from 'react';\nimport { fetchContentList } from \"data/redux/action/content\";\nimport { useDispatch } from \"react-redux\";\nimport DesktopHome from \"components/home/DesktopHome\";\nimport MobileHome from \"components/home/MobileHome\";\nimport queryString from 'query-string';\nimport { useMobile } from \"components/common/layout/WindowDimensions\";\nimport { useLocation, useParams } from \"react-router\";\nimport { fetchChannel } from \"data/redux/action/channel\";\nimport { forceCleanMarkerClusterer, loadingMapFinished, loadingMapStarted, resetMapCenterChange } from \"data/redux/action/map\";\nimport { buildMoobeMapBounds } from \"data/util\";\nimport { fetchLocation, resetLocationData } from \"data/redux/action/location\";\n\nconst MoobeHome = () => {\n  const _useParams = useParams(),\n        channelId = _useParams.channelId,\n        contentId = _useParams.contentId;\n\n  const _queryString$parse = queryString.parse(useLocation().search),\n        query = _queryString$parse.query,\n        searchType = _queryString$parse.searchType,\n        page = _queryString$parse.page,\n        swLat = _queryString$parse.swLat,\n        swLng = _queryString$parse.swLng,\n        neLat = _queryString$parse.neLat,\n        neLng = _queryString$parse.neLng,\n        k = _queryString$parse.k; // k for force refresh\n\n\n  const mapBounds = buildMoobeMapBounds(swLat, swLng, neLat, neLng);\n  const mobile = useMobile();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchChannel(channelId));\n    dispatch(fetchLocation(channelId, query, searchType, mapBounds));\n    setTimeout(() => {\n      dispatch(loadingMapFinished());\n    }, 1100);\n    return () => {\n      dispatch(loadingMapStarted());\n      dispatch(forceCleanMarkerClusterer());\n      dispatch(resetLocationData());\n    };\n  }, [channelId, query, searchType, swLat, swLng, neLat, neLng, k]);\n  useEffect(() => {\n    dispatch(fetchContentList(channelId, query, searchType, mapBounds, page, false, fetchContentCallback));\n  }, [channelId, query, searchType, swLat, swLng, neLat, neLng, page, k]);\n\n  const fetchContentCallback = (channelId, contentId) => {\n    dispatch(resetMapCenterChange());\n  };\n\n  return React.createElement(React.Fragment, null, !mobile ? React.createElement(DesktopHome, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }) : React.createElement(MobileHome, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n\nexport default MoobeHome;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/home/Home.jsx"],"names":["React","useEffect","fetchContentList","useDispatch","DesktopHome","MobileHome","queryString","useMobile","useLocation","useParams","fetchChannel","forceCleanMarkerClusterer","loadingMapFinished","loadingMapStarted","resetMapCenterChange","buildMoobeMapBounds","fetchLocation","resetLocationData","MoobeHome","channelId","contentId","parse","search","query","searchType","page","swLat","swLng","neLat","neLng","k","mapBounds","mobile","dispatch","setTimeout","fetchContentCallback"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {fetchContentList} from \"data/redux/action/content\";\nimport {useDispatch} from \"react-redux\";\nimport DesktopHome from \"components/home/DesktopHome\";\nimport MobileHome from \"components/home/MobileHome\";\nimport queryString from 'query-string'\nimport {useMobile} from \"components/common/layout/WindowDimensions\";\nimport {useLocation, useParams} from \"react-router\";\nimport {fetchChannel} from \"data/redux/action/channel\";\nimport {\n    forceCleanMarkerClusterer,\n    loadingMapFinished,\n    loadingMapStarted,\n    resetMapCenterChange\n} from \"data/redux/action/map\";\nimport {buildMoobeMapBounds} from \"data/util\";\nimport {fetchLocation, resetLocationData} from \"data/redux/action/location\";\n\nconst MoobeHome = () => {\n    const {channelId, contentId} = useParams();\n    const {query, searchType, page, swLat, swLng, neLat, neLng, k} = queryString.parse(useLocation().search); // k for force refresh\n    const mapBounds = buildMoobeMapBounds(swLat, swLng, neLat, neLng);\n    const mobile = useMobile();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchChannel(channelId));\n        dispatch(fetchLocation(channelId, query, searchType, mapBounds));\n        setTimeout(() => {\n            dispatch(loadingMapFinished());\n        }, 1100)\n        return () => {\n            dispatch(loadingMapStarted());\n            dispatch(forceCleanMarkerClusterer());\n            dispatch(resetLocationData())\n        }\n    }, [channelId, query, searchType, swLat, swLng, neLat, neLng, k]);\n\n    useEffect(() => {\n        dispatch(fetchContentList(channelId, query, searchType, mapBounds, page, false, fetchContentCallback));\n    }, [channelId, query, searchType, swLat, swLng, neLat, neLng, page, k])\n\n    const fetchContentCallback = (channelId, contentId) => {\n        dispatch(resetMapCenterChange());\n    };\n\n    return (\n        <>\n            {!mobile ? <DesktopHome /> : <MobileHome />}\n        </>\n    )\n};\n\nexport default MoobeHome;"]},"metadata":{},"sourceType":"module"}