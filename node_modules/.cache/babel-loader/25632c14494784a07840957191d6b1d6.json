{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/mobile/store/Store.jsx\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as fasStar } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useHistory, useParams } from \"react-router\";\nimport { toString as _toString } from \"lodash\";\nimport { buildContentPath } from \"data/util\";\nimport { STORE_LIKED } from \"assets/styles/colors\";\nimport { requireUser } from \"data/redux/action/user\";\nimport { fetchUpdateContentLike } from \"data/redux/action/content\";\n\nconst Store = ({\n  content,\n  originLiked = false\n}) => {\n  const _useState = useState(originLiked),\n        _useState2 = _slicedToArray(_useState, 2),\n        liked = _useState2[0],\n        setLiked = _useState2[1];\n\n  const _useSelector = useSelector(state => state.channel),\n        activeChannel = _useSelector.activeChannel;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const _useParams = useParams(),\n        contentId = _useParams.contentId;\n\n  const updateActiveContent = content => {\n    if (contentId !== _toString(content.id)) {\n      history.push({\n        pathname: buildContentPath(activeChannel, content),\n        search: location.search\n      });\n    }\n  };\n\n  const updateLike = () => {\n    let origin = liked;\n    let updated = !liked;\n    dispatch(requireUser(user => {\n      setLiked(updated);\n      dispatch(fetchUpdateContentLike(user.email, content.id, updated, () => setLiked(updated), () => setLiked(origin)));\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"video media has-padding-top-15 has-padding-bottom-15 is-marginless \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"media-left\",\n    onClick: () => updateActiveContent(content),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"image is-120x68\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"image thumbnail\",\n    src: content.thumbnailUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"media-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: liked ? faStar : fasStar,\n    className: \"video-like-btn clickable\",\n    color: liked ? STORE_LIKED : \"\",\n    size: '1x',\n    onClick: updateLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content\",\n    onClick: () => updateActiveContent(content),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    className: \"has-cursor-pointer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, content.store.name)), React.createElement(\"p\", {\n    className: \"has-text-grey-light is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    className: \"has-text-weight-semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, content.store.address1))))));\n};\n\nexport default Store;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/mobile/store/Store.jsx"],"names":["React","useState","useDispatch","useSelector","faStar","fasStar","FontAwesomeIcon","useHistory","useParams","toString","_toString","buildContentPath","STORE_LIKED","requireUser","fetchUpdateContentLike","Store","content","originLiked","liked","setLiked","state","channel","activeChannel","dispatch","history","contentId","updateActiveContent","id","push","pathname","search","location","updateLike","origin","updated","user","email","thumbnailUrl","store","name","address1"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {faStar} from \"@fortawesome/free-solid-svg-icons\";\nimport {faStar as fasStar} from \"@fortawesome/free-regular-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {useHistory, useParams} from \"react-router\";\nimport {toString as _toString} from \"lodash\";\nimport {buildContentPath} from \"data/util\";\nimport {STORE_LIKED} from \"assets/styles/colors\";\nimport {requireUser} from \"data/redux/action/user\";\nimport {fetchUpdateContentLike} from \"data/redux/action/content\";\n\nconst Store = ({content, originLiked=false}) => {\n    const [liked, setLiked] = useState(originLiked);\n    const {activeChannel} = useSelector(state => state.channel);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const {contentId} = useParams();\n    const updateActiveContent = (content) => {\n        if (contentId !== _toString(content.id)) {\n            history.push({\n                pathname: buildContentPath(activeChannel, content),\n                search: location.search\n            });\n        }\n    };\n\n    const updateLike = () => {\n        let origin = liked;\n        let updated = !liked;\n        dispatch(requireUser((user) => {\n            setLiked(updated);\n            dispatch(fetchUpdateContentLike(user.email, content.id, updated,() => setLiked(updated),() => setLiked(origin)));\n        }));\n    }\n    return (\n        <>\n            <div className=\"video media has-padding-top-15 has-padding-bottom-15 is-marginless \">\n                <figure className=\"media-left\" onClick={() => updateActiveContent(content)}>\n                    <p className=\"image is-120x68\">\n                        <img className=\"image thumbnail\" src={content.thumbnailUrl} />\n                    </p>\n                </figure>\n                <div className=\"media-content\">\n                    <FontAwesomeIcon\n                        icon={liked ? faStar : fasStar}\n                        className=\"video-like-btn clickable\"\n                        color={liked ? STORE_LIKED : \"\"}\n                        size={'1x'}\n                        onClick={updateLike} />\n                    <div className=\"content\"  onClick={() => updateActiveContent(content)}>\n                        <p className=\"is-marginless\">\n                            <strong className=\"has-cursor-pointer\" >{content.store.name}</strong>\n                        </p>\n                        <p className=\"has-text-grey-light is-marginless\">\n                            <small className=\"has-text-weight-semibold\">{content.store.address1}</small>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};\nexport default Store;"]},"metadata":{},"sourceType":"module"}