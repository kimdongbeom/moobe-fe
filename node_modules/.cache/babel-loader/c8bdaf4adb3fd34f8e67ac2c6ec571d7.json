{"ast":null,"code":"import { getContent, getContents, searchContents, updateContentLike } from \"data/api\";\nimport { isEmpty as _isEmpty } from \"lodash\";\nimport ApiResponse from \"data/redux/model/ApiResponse\";\nexport const CONTENT_DETAIL_RESET_CONTENT_DATA = 'CONTENT_DETAIL/RESET_CONTENT_DATA';\nexport const CONTENT_DETAIL_SET_CONTENT_LOADING = 'CONTENT_DETAIL/SET_CONTENT_LOADING';\nexport const CONTENT_DETAIL_SET_SHOW_OVERLAY_CONTENT_DETAIL = 'CONTENT_DETAIL/SET_SHOW_OVERLAY_CONTENT_DETAIL';\nexport const CONTENT_DETAIL_FETCH_CONTENT_STARTED = 'CONTENT_DETAIL/FETCH_CONTENT_STARTED';\nexport const CONTENT_DETAIL_FETCH_CONTENT_FINISHED = 'CONTENT_DETAIL/FETCH_CONTENT_FINISHED';\nexport const CONTENT_DETAIL_FETCH_CONTENT_SUCCESS = 'CONTENT_DETAIL/FETCH_CONTENT_SUCCESS';\nexport const CONTENT_DETAIL_FETCH_CONTENT_ERROR = 'CONTENT_DETAIL/FETCH_CONTENT_ERROR';\nexport const CONTENT_DETAIL_UPDATE_CONTENT_UPDATED = 'CONTENT_DETAIL/UPDATE_CONTENT_UPDATED';\nexport const fetchContentDetail = (channelId, contentId) => {\n  if (!contentId) {\n    return dispatch => {\n      /*do Nothing*/\n    };\n  }\n\n  return dispatch => {\n    dispatch(fetchContentDetailStarted()); //TODO set active channel to get content\n\n    return getContent(contentId, channelId).then(response => {\n      dispatch(fetchContentDetailSuccess({\n        data: response.data\n      }));\n    }).catch(error => {\n      dispatch(fetchContentDetailFail(error));\n    }).finally(() => {\n      dispatch(fetchContentDetailFinished());\n    });\n  };\n};\nexport const resetContentDetailData = () => {\n  return {\n    type: CONTENT_DETAIL_RESET_CONTENT_DATA\n  };\n};\nexport const setContentDetailLoading = contentDetailLoading => {\n  return {\n    type: CONTENT_DETAIL_SET_CONTENT_LOADING,\n    contentDetailLoading\n  };\n};\nexport const setShowOverlayContentDetail = showOverlayContentDetail => {\n  return {\n    type: CONTENT_DETAIL_SET_SHOW_OVERLAY_CONTENT_DETAIL,\n    showOverlayContentDetail\n  };\n};\nexport const fetchContentDetailStarted = () => {\n  return {\n    type: CONTENT_DETAIL_FETCH_CONTENT_STARTED\n  };\n};\nexport const fetchContentDetailFinished = () => {\n  return {\n    type: CONTENT_DETAIL_FETCH_CONTENT_FINISHED\n  };\n};\nexport const fetchContentDetailSuccess = data => {\n  return {\n    type: CONTENT_DETAIL_FETCH_CONTENT_SUCCESS,\n    data\n  };\n};\nexport const fetchContentDetailFail = err => {\n  return {\n    type: CONTENT_DETAIL_FETCH_CONTENT_ERROR,\n    err\n  };\n};\nexport const updateContentDetail = data => {\n  return {\n    type: CONTENT_DETAIL_UPDATE_CONTENT_UPDATED,\n    data\n  };\n};","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/action/contentDetail.js"],"names":["getContent","getContents","searchContents","updateContentLike","isEmpty","_isEmpty","ApiResponse","CONTENT_DETAIL_RESET_CONTENT_DATA","CONTENT_DETAIL_SET_CONTENT_LOADING","CONTENT_DETAIL_SET_SHOW_OVERLAY_CONTENT_DETAIL","CONTENT_DETAIL_FETCH_CONTENT_STARTED","CONTENT_DETAIL_FETCH_CONTENT_FINISHED","CONTENT_DETAIL_FETCH_CONTENT_SUCCESS","CONTENT_DETAIL_FETCH_CONTENT_ERROR","CONTENT_DETAIL_UPDATE_CONTENT_UPDATED","fetchContentDetail","channelId","contentId","dispatch","fetchContentDetailStarted","then","response","fetchContentDetailSuccess","data","catch","error","fetchContentDetailFail","finally","fetchContentDetailFinished","resetContentDetailData","type","setContentDetailLoading","contentDetailLoading","setShowOverlayContentDetail","showOverlayContentDetail","err","updateContentDetail"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,WAApB,EAAiCC,cAAjC,EAAiDC,iBAAjD,QAAyE,UAAzE;AACA,SAAQC,OAAO,IAAIC,QAAnB,QAAkC,QAAlC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAO,MAAMC,iCAAiC,GAAG,mCAA1C;AACP,OAAO,MAAMC,kCAAkC,GAAG,oCAA3C;AACP,OAAO,MAAMC,8CAA8C,GAAG,gDAAvD;AACP,OAAO,MAAMC,oCAAoC,GAAG,sCAA7C;AACP,OAAO,MAAMC,qCAAqC,GAAG,uCAA9C;AACP,OAAO,MAAMC,oCAAoC,GAAG,sCAA7C;AACP,OAAO,MAAMC,kCAAkC,GAAG,oCAA3C;AACP,OAAO,MAAMC,qCAAqC,GAAG,uCAA9C;AAEP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACxD,MAAI,CAACA,SAAL,EAAgB;AACZ,WAAQC,QAAD,IAAc;AAAC;AAAe,KAArC;AACH;;AACD,SAAQA,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACC,yBAAyB,EAA1B,CAAR,CADiB,CAEjB;;AACA,WAAOnB,UAAU,CAACiB,SAAD,EAAYD,SAAZ,CAAV,CAAiCI,IAAjC,CAAsCC,QAAQ,IAAI;AACrDH,MAAAA,QAAQ,CAACI,yBAAyB,CAAC;AAACC,QAAAA,IAAI,EAAEF,QAAQ,CAACE;AAAhB,OAAD,CAA1B,CAAR;AACH,KAFM,EAEJC,KAFI,CAEGC,KAAD,IAAY;AACjBP,MAAAA,QAAQ,CAACQ,sBAAsB,CAACD,KAAD,CAAvB,CAAR;AACH,KAJM,EAIJE,OAJI,CAII,MAAM;AACbT,MAAAA,QAAQ,CAACU,0BAA0B,EAA3B,CAAR;AACH,KANM,CAAP;AAOH,GAVD;AAWH,CAfM;AAiBP,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAEvB;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMwB,uBAAuB,GAAIC,oBAAD,IAA0B;AAC7D,SAAO;AACHF,IAAAA,IAAI,EAAEtB,kCADH;AAEHwB,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,2BAA2B,GAAIC,wBAAD,IAA8B;AACrE,SAAO;AACHJ,IAAAA,IAAI,EAAErB,8CADH;AAEHyB,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMf,yBAAyB,GAAG,MAAM;AAC3C,SAAO;AACHW,IAAAA,IAAI,EAAEpB;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMkB,0BAA0B,GAAG,MAAM;AAC5C,SAAO;AACHE,IAAAA,IAAI,EAAEnB;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMW,yBAAyB,GAAIC,IAAD,IAAU;AAC/C,SAAO;AACHO,IAAAA,IAAI,EAAElB,oCADH;AAEHW,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,sBAAsB,GAAIS,GAAD,IAAS;AAC3C,SAAO;AACHL,IAAAA,IAAI,EAAEjB,kCADH;AAEHsB,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,mBAAmB,GAAIb,IAAD,IAAU;AACzC,SAAO;AACHO,IAAAA,IAAI,EAAEhB,qCADH;AAEHS,IAAAA;AAFG,GAAP;AAIH,CALM","sourcesContent":["import {getContent, getContents, searchContents, updateContentLike} from \"data/api\";\nimport {isEmpty as _isEmpty} from \"lodash\";\nimport ApiResponse from \"data/redux/model/ApiResponse\";\n\nexport const CONTENT_DETAIL_RESET_CONTENT_DATA = 'CONTENT_DETAIL/RESET_CONTENT_DATA';\nexport const CONTENT_DETAIL_SET_CONTENT_LOADING = 'CONTENT_DETAIL/SET_CONTENT_LOADING';\nexport const CONTENT_DETAIL_SET_SHOW_OVERLAY_CONTENT_DETAIL = 'CONTENT_DETAIL/SET_SHOW_OVERLAY_CONTENT_DETAIL';\nexport const CONTENT_DETAIL_FETCH_CONTENT_STARTED = 'CONTENT_DETAIL/FETCH_CONTENT_STARTED';\nexport const CONTENT_DETAIL_FETCH_CONTENT_FINISHED = 'CONTENT_DETAIL/FETCH_CONTENT_FINISHED';\nexport const CONTENT_DETAIL_FETCH_CONTENT_SUCCESS = 'CONTENT_DETAIL/FETCH_CONTENT_SUCCESS';\nexport const CONTENT_DETAIL_FETCH_CONTENT_ERROR = 'CONTENT_DETAIL/FETCH_CONTENT_ERROR';\nexport const CONTENT_DETAIL_UPDATE_CONTENT_UPDATED = 'CONTENT_DETAIL/UPDATE_CONTENT_UPDATED';\n\nexport const fetchContentDetail = (channelId, contentId) => {\n    if (!contentId) {\n        return (dispatch) => {/*do Nothing*/};\n    }\n    return (dispatch) => {\n        dispatch(fetchContentDetailStarted());\n        //TODO set active channel to get content\n        return getContent(contentId, channelId).then(response => {\n            dispatch(fetchContentDetailSuccess({data: response.data}))\n        }).catch((error)  => {\n            dispatch(fetchContentDetailFail(error))\n        }).finally(() => {\n            dispatch(fetchContentDetailFinished())\n        });\n    }\n}\n\nexport const resetContentDetailData = () => {\n    return {\n        type: CONTENT_DETAIL_RESET_CONTENT_DATA\n    }\n};\n\nexport const setContentDetailLoading = (contentDetailLoading) => {\n    return {\n        type: CONTENT_DETAIL_SET_CONTENT_LOADING,\n        contentDetailLoading\n    }\n};\n\nexport const setShowOverlayContentDetail = (showOverlayContentDetail) => {\n    return {\n        type: CONTENT_DETAIL_SET_SHOW_OVERLAY_CONTENT_DETAIL,\n        showOverlayContentDetail\n    }\n}\n\nexport const fetchContentDetailStarted = () => {\n    return {\n        type: CONTENT_DETAIL_FETCH_CONTENT_STARTED\n    }\n};\n\nexport const fetchContentDetailFinished = () => {\n    return {\n        type: CONTENT_DETAIL_FETCH_CONTENT_FINISHED\n    }\n};\n\nexport const fetchContentDetailSuccess = (data) => {\n    return {\n        type: CONTENT_DETAIL_FETCH_CONTENT_SUCCESS,\n        data\n    }\n};\n\nexport const fetchContentDetailFail = (err) => {\n    return {\n        type: CONTENT_DETAIL_FETCH_CONTENT_ERROR,\n        err\n    }\n};\n\nexport const updateContentDetail = (data) => {\n    return {\n        type: CONTENT_DETAIL_UPDATE_CONTENT_UPDATED,\n        data\n    }\n}\n"]},"metadata":{},"sourceType":"module"}