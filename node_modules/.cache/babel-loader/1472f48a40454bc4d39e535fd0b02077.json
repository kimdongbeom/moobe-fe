{"ast":null,"code":"var _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/youtube/Numbers.jsx\";\nimport React from 'react';\nimport NumericLabel from \"react-pretty-numbers\";\n\nconst Numbers = props => {\n  let prefix = props.prefix;\n  let postfix = props.postfix;\n  let value = +props.children;\n  let shortenNumber = value;\n  let numberLetter = '';\n  let shortenPrecision = props.shortenPrecision || 1;\n\n  if (props.shorten) {\n    let sn = shortFormatter(value, props.shortFormatMinValue || 0);\n    shortenNumber = Number(sn.number.toFixed(shortenPrecision)) || 0;\n    numberLetter = sn.letter || '';\n  }\n\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, prefix, props.shorten ? shortenNumber.toString() + numberLetter : React.createElement(NumericLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, Number(value) || 0), postfix);\n};\n\nconst shortFormatter = (num, minValue) => {\n  if (!num || !+num || typeof +num !== 'number') {\n    return {\n      number: num\n    };\n  }\n\n  var num = +num;\n  var minValue = minValue || 0;\n  var si = [{\n    value: 1E20,\n    symbol: \"해\"\n  }, {\n    value: 1E16,\n    symbol: \"경\"\n  }, {\n    value: 1E12,\n    symbol: \"조\"\n  }, {\n    value: 1E8,\n    symbol: \"억\"\n  }, {\n    value: 1E4,\n    symbol: \"만\"\n  }, {\n    value: 1E3,\n    symbol: \"천\"\n  }],\n      rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/,\n      i;\n\n  if (typeof num === 'number' && num >= minValue) {\n    for (i = 0; i < si.length; i++) {\n      if (num >= si[i].value) {\n        return {\n          number: num / si[i].value,\n          letter: si[i].symbol\n        };\n      }\n    }\n  }\n\n  return {\n    number: num\n  };\n};\n\nexport default Numbers;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/youtube/Numbers.jsx"],"names":["React","NumericLabel","Numbers","props","prefix","postfix","value","children","shortenNumber","numberLetter","shortenPrecision","shorten","sn","shortFormatter","shortFormatMinValue","Number","number","toFixed","letter","toString","num","minValue","si","symbol","rx","i","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACA,MAAIC,OAAO,GAAGF,KAAK,CAACE,OAApB;AACA,MAAIC,KAAK,GAAG,CAACH,KAAK,CAACI,QAAnB;AACA,MAAIC,aAAa,GAAGF,KAApB;AACA,MAAIG,YAAY,GAAG,EAAnB;AACA,MAAIC,gBAAgB,GAAGP,KAAK,CAACO,gBAAN,IAA0B,CAAjD;;AAEA,MAAIP,KAAK,CAACQ,OAAV,EAAmB;AACf,QAAIC,EAAE,GAAGC,cAAc,CAACP,KAAD,EAAQH,KAAK,CAACW,mBAAN,IAA6B,CAArC,CAAvB;AACAN,IAAAA,aAAa,GAAGO,MAAM,CAACH,EAAE,CAACI,MAAH,CAAUC,OAAV,CAAkBP,gBAAlB,CAAD,CAAN,IAA+C,CAA/D;AACAD,IAAAA,YAAY,GAAGG,EAAE,CAACM,MAAH,IAAa,EAA5B;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,MADL,EAEKD,KAAK,CAACQ,OAAN,GACKH,aAAa,CAACW,QAAd,KAA2BV,YADhC,GAEM,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeM,MAAM,CAACT,KAAD,CAAN,IAAiB,CAAhC,CAJX,EAKKD,OALL,CADJ;AASH,CAtBD;;AAwBA,MAAMQ,cAAc,GAAG,CAACO,GAAD,EAAMC,QAAN,KAAmB;AACtC,MAAI,CAACD,GAAD,IAAQ,CAAC,CAACA,GAAV,IAAiB,OAAO,CAACA,GAAR,KAAgB,QAArC,EAA+C;AAC3C,WAAO;AACHJ,MAAAA,MAAM,EAAEI;AADL,KAAP;AAGH;;AAED,MAAIA,GAAG,GAAG,CAACA,GAAX;AACA,MAAIC,QAAQ,GAAGA,QAAQ,IAAI,CAA3B;AACA,MAAIC,EAAE,GAAG,CAAC;AAAEhB,IAAAA,KAAK,EAAE,IAAT;AAAeiB,IAAAA,MAAM,EAAE;AAAvB,GAAD,EACH;AAAEjB,IAAAA,KAAK,EAAE,IAAT;AAAeiB,IAAAA,MAAM,EAAE;AAAvB,GADG,EAEH;AAAEjB,IAAAA,KAAK,EAAE,IAAT;AAAeiB,IAAAA,MAAM,EAAE;AAAvB,GAFG,EAGH;AAAEjB,IAAAA,KAAK,EAAE,GAAT;AAAciB,IAAAA,MAAM,EAAE;AAAtB,GAHG,EAIH;AAAEjB,IAAAA,KAAK,EAAE,GAAT;AAAciB,IAAAA,MAAM,EAAE;AAAtB,GAJG,EAKH;AAAEjB,IAAAA,KAAK,EAAE,GAAT;AAAciB,IAAAA,MAAM,EAAE;AAAtB,GALG,CAAT;AAAA,MAMIC,EAAE,GAAG,0BANT;AAAA,MAOIC,CAPJ;;AASA,MAAI,OAAOL,GAAP,KAAe,QAAf,IAA2BA,GAAG,IAAIC,QAAtC,EAAgD;AAC5C,SAAKI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,EAAE,CAACI,MAAnB,EAA2BD,CAAC,EAA5B,EAAgC;AAC5B,UAAIL,GAAG,IAAIE,EAAE,CAACG,CAAD,CAAF,CAAMnB,KAAjB,EAAwB;AACpB,eAAO;AACHU,UAAAA,MAAM,EAAEI,GAAG,GAAGE,EAAE,CAACG,CAAD,CAAF,CAAMnB,KADjB;AAEHY,UAAAA,MAAM,EAAEI,EAAE,CAACG,CAAD,CAAF,CAAMF;AAFX,SAAP;AAIH;AACJ;AACJ;;AACD,SAAO;AACHP,IAAAA,MAAM,EAAEI;AADL,GAAP;AAGH,CA/BD;;AAiCA,eAAelB,OAAf","sourcesContent":["import React from 'react';\nimport NumericLabel from \"react-pretty-numbers\";\n\nconst Numbers = props => {\n    let prefix = props.prefix\n    let postfix = props.postfix\n    let value = +props.children\n    let shortenNumber = value;\n    let numberLetter = '';\n    let shortenPrecision = props.shortenPrecision || 1\n\n    if (props.shorten) {\n        let sn = shortFormatter(value, props.shortFormatMinValue || 0);\n        shortenNumber = Number(sn.number.toFixed(shortenPrecision)) || 0;\n        numberLetter = sn.letter || '';\n    }\n    return (\n        <span>\n            {prefix}\n            {props.shorten\n                ? shortenNumber.toString() + numberLetter\n                : (<NumericLabel>{Number(value) || 0}</NumericLabel>)}\n            {postfix}\n        </span>\n    )\n}\n\nconst shortFormatter = (num, minValue) => {\n    if (!num || !+num || typeof +num !== 'number') {\n        return {\n            number: num\n        };\n    }\n\n    var num = +num;\n    var minValue = minValue || 0;\n    var si = [{ value: 1E20, symbol: \"해\" }\n        , { value: 1E16, symbol: \"경\" }\n        , { value: 1E12, symbol: \"조\" }\n        , { value: 1E8, symbol: \"억\" }\n        , { value: 1E4, symbol: \"만\" }\n        , { value: 1E3, symbol: \"천\" }],\n        rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/,\n        i;\n\n    if (typeof num === 'number' && num >= minValue) {\n        for (i = 0; i < si.length; i++) {\n            if (num >= si[i].value) {\n                return {\n                    number: num / si[i].value,\n                    letter: si[i].symbol\n                };\n            }\n        }\n    }\n    return {\n        number: num\n    };\n};\n\nexport default Numbers;"]},"metadata":{},"sourceType":"module"}