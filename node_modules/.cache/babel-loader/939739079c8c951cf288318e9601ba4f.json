{"ast":null,"code":"import { isMatch as _isMatch, isObjectLike as _isObjectLike, split as _split, tail as _tail, isEmpty as _isEmpty, forEach as _forEach, map as _map, pickBy as _pickBy, isNil as _isNil } from \"lodash\";\nconst CHANNEL_PATH = \"channels\";\nconst CONTENT_PATH = \"contents\";\nexport function updateObject(oldObject, newValues) {\n  return Object.assign({}, oldObject, newValues);\n}\nexport function buildMoobeMapBounds(swLat, swLng, neLat, neLng) {\n  if (_isNil(swLat) || _isNil(swLng) || _isNil(neLat) || _isNil(neLng)) {\n    return null;\n  }\n\n  return {\n    sw: {\n      lat: swLat,\n      lng: swLng\n    },\n    ne: {\n      lat: neLat,\n      lng: neLng\n    }\n  };\n}\nexport function unpackMoobeMapBounds(mapBounds) {\n  if (_isNil(mapBounds) || _isNil(mapBounds.sw) || _isNil(mapBounds.sw.lat) || _isNil(mapBounds.sw.lng) || _isNil(mapBounds.ne) || _isNil(mapBounds.ne.lat) || _isNil(mapBounds.ne.lng)) {\n    return null;\n  }\n\n  return {\n    swLat: mapBounds.sw.lat,\n    swLng: mapBounds.sw.lng,\n    neLat: mapBounds.ne.lat,\n    neLng: mapBounds.ne.lng\n  };\n}\nexport function isEqualBounds(b1, b2) {\n  if (_isNil(b1) || _isNil(b2)) {\n    return b1 === b2;\n  }\n\n  return b1.sw.lat === b2.sw.lat && b1.sw.lng === b2.sw.lng && b1.ne.lat === b2.ne.lat && b1.ne.lng === b2.ne.lng;\n}\nexport function buildChannelPath(channel) {\n  if (channel == null) {\n    return '';\n  } else {\n    return '/' + [CHANNEL_PATH, channel.id].join(\"/\");\n  }\n}\nexport function buildContentPath(channel, content) {\n  let channelPath = buildChannelPath(channel);\n\n  if (content !== null) {\n    return [channelPath, CONTENT_PATH, content.id].join(\"/\");\n  } else {\n    return _isEmpty(channelPath) ? \"/\" : channelPath;\n  }\n}\nexport function buildUrl(path) {\n  return process.env.REACT_APP_API_URL + path;\n}\nexport function expandUrl(path, variable, query = null) {\n  _forEach(variable, (v, k) => {\n    path = path.replace(\"{{\" + k + \"}}\", v);\n  });\n\n  if (query) {\n    return path + \"?\" + query;\n  } else {\n    return path;\n  }\n}\nexport function buildQuery(values) {\n  return _map(_pickBy(values, (v, k) => !_isNil(v)), (v, k) => k + \"=\" + v).join(\"&\");\n}\nexport function deepCompareSetState(state, updateState) {\n  if (updateState && _isObjectLike(state)) {\n    updateState(originState => {\n      if (originState && _isMatch(originState, state)) {\n        return originState;\n      }\n\n      return state;\n    });\n  }\n}\nexport function fixedFlotingPoint(v, limit = 4) {\n  if (!v) return v;\n  let denom = Math.pow(10, limit);\n  return Math.floor(v * denom) / denom;\n}\nexport function isSimilarLocation(latlng1, latlng2, accuracy = 3) {\n  if (_isNil(latlng1) || _isNil(latlng1.lat) || _isNil(latlng1.lng) || _isNil(latlng2) || _isNil(latlng2.lat) || _isNil(latlng2.lng)) {\n    return false;\n  }\n\n  return fixedFlotingPoint(latlng1.lat, 3) === fixedFlotingPoint(latlng2.lat, 3) && fixedFlotingPoint(latlng1.lng, 3) === fixedFlotingPoint(latlng2.lng, 3);\n}","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/util.js"],"names":["isMatch","_isMatch","isObjectLike","_isObjectLike","split","_split","tail","_tail","isEmpty","_isEmpty","forEach","_forEach","map","_map","pickBy","_pickBy","isNil","_isNil","CHANNEL_PATH","CONTENT_PATH","updateObject","oldObject","newValues","Object","assign","buildMoobeMapBounds","swLat","swLng","neLat","neLng","sw","lat","lng","ne","unpackMoobeMapBounds","mapBounds","isEqualBounds","b1","b2","buildChannelPath","channel","id","join","buildContentPath","content","channelPath","buildUrl","path","process","env","REACT_APP_API_URL","expandUrl","variable","query","v","k","replace","buildQuery","values","deepCompareSetState","state","updateState","originState","fixedFlotingPoint","limit","denom","Math","pow","floor","isSimilarLocation","latlng1","latlng2","accuracy"],"mappings":"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","sourcesContent":["import {\n    isMatch as _isMatch,\n    isObjectLike as _isObjectLike,\n    split as _split,\n    tail as _tail,\n    isEmpty as _isEmpty,\n    forEach as _forEach, map as _map, pickBy as _pickBy, isNil as _isNil\n} from \"lodash\";\n\nconst CHANNEL_PATH = \"channels\"\nconst CONTENT_PATH =  \"contents\"\n\nexport function updateObject(oldObject, newValues) {\n    return Object.assign({}, oldObject, newValues);\n}\n\nexport function buildMoobeMapBounds(swLat, swLng, neLat, neLng) {\n    if (_isNil(swLat) || _isNil(swLng) || _isNil(neLat) || _isNil(neLng)) {\n        return null;\n    }\n    return {\n        sw: {\n            lat: swLat,\n            lng: swLng\n        },\n        ne: {\n            lat: neLat,\n            lng: neLng\n        }\n    }\n}\n\nexport function unpackMoobeMapBounds(mapBounds) {\n    if (_isNil(mapBounds)\n        || _isNil(mapBounds.sw)\n        || _isNil(mapBounds.sw.lat)\n        || _isNil(mapBounds.sw.lng)\n        || _isNil(mapBounds.ne)\n        || _isNil(mapBounds.ne.lat)\n        || _isNil(mapBounds.ne.lng)) {\n        return null;\n    }\n    return {\n        swLat: mapBounds.sw.lat,\n        swLng: mapBounds.sw.lng,\n        neLat: mapBounds.ne.lat,\n        neLng: mapBounds.ne.lng\n    }\n}\n\nexport function isEqualBounds(b1, b2) {\n    if (_isNil(b1) || _isNil(b2)) {\n        return b1 === b2;\n    }\n    return (b1.sw.lat === b2.sw.lat\n            && b1.sw.lng === b2.sw.lng\n            && b1.ne.lat === b2.ne.lat\n            && b1.ne.lng === b2.ne.lng)\n}\n\nexport function buildChannelPath(channel) {\n    if (channel == null) {\n        return '';\n    } else {\n        return '/' + [CHANNEL_PATH, channel.id].join(\"/\")\n    }\n}\n\nexport function buildContentPath(channel, content) {\n    let channelPath = buildChannelPath(channel);\n    if (content !== null) {\n        return [channelPath, CONTENT_PATH, content.id].join(\"/\")\n    } else {\n        return _isEmpty(channelPath) ? \"/\" : channelPath;\n    }\n}\n\nexport function buildUrl(path) {\n    return process.env.REACT_APP_API_URL + path;\n}\n\nexport function expandUrl(path, variable, query=null) {\n    _forEach(variable, (v, k) => {\n        path = path.replace(\"{{\" + k + \"}}\", v)\n    });\n    if (query) {\n        return path + \"?\" + query;\n    } else {\n        return path;\n    }\n\n}\n\nexport function buildQuery(values) {\n    return _map(_pickBy(values, (v, k) => !_isNil(v)), (v, k) => k + \"=\" + v).join(\"&\")\n}\n\nexport function deepCompareSetState(state, updateState) {\n    if(updateState && _isObjectLike(state)) {\n        updateState((originState) => {\n            if (originState && _isMatch(originState, state)) {\n                return originState;\n            }\n            return state\n        })\n    }\n}\n\nexport function fixedFlotingPoint(v, limit=4) {\n    if (!v) return v;\n    let denom = Math.pow(10, limit);\n    return Math.floor(v * denom) / denom;\n}\n\nexport function isSimilarLocation(latlng1, latlng2, accuracy=3) {\n    if (_isNil(latlng1) || _isNil(latlng1.lat) || _isNil(latlng1.lng)\n    || _isNil(latlng2) || _isNil(latlng2.lat) || _isNil(latlng2.lng)) {\n        return false;\n    }\n    return fixedFlotingPoint(latlng1.lat, 3) === fixedFlotingPoint(latlng2.lat, 3)\n        && fixedFlotingPoint(latlng1.lng, 3) === fixedFlotingPoint(latlng2.lng, 3);\n}"]},"metadata":{},"sourceType":"module"}