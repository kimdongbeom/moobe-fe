{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/search/Search.jsx\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty as _isEmpty } from \"lodash\";\nconst SEARCH_TYPE_TOTAL = \"SEARCH_TYPE_TOTAL\";\nconst SEARCH_TYPE_TITLE = \"SEARCH_TYPE_TITLE\";\nconst SEARCH_TYPE_PLACE = \"SEARCH_TYPE_PLACE\";\nconst SEARCH_TYPE_STORE = \"SEARCH_TYPE_STORE\";\nconst SEARCH_TYPE_TAG = \"SEARCH_TYPE_TAG\";\n\nconst SearchBar = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchText = _useState2[0],\n        setSearchText = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isDropdownActive = _useState4[0],\n        setIsDropdownActive = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        focusedIndex = _useState6[0],\n        setFocusedIndex = _useState6[1];\n\n  const searchType = [{\n    \"title\": \"전체\",\n    \"type\": SEARCH_TYPE_TOTAL\n  }, {\n    \"title\": \"제목\",\n    \"type\": SEARCH_TYPE_TITLE\n  }, {\n    \"title\": \"장소\",\n    \"type\": SEARCH_TYPE_PLACE\n  }, {\n    \"title\": \"가게 이름\",\n    \"type\": SEARCH_TYPE_STORE\n  }, {\n    \"title\": \"태그\",\n    \"type\": SEARCH_TYPE_TAG\n  }];\n\n  const handleKeyDown = e => {\n    // down 40 up 38 enter 13\n    if (e.keyCode == 40) {\n      setFocusedIndex((focusedIndex + 1) % 5);\n      e.preventDefault();\n    } else if (e.keyCode == 38) {\n      setFocusedIndex((focusedIndex + 5 - 1) % 5);\n      e.preventDefault();\n    } else if (e.keyCode == 13) {\n      search(focusedIndex);\n      e.preventDefault();\n    }\n  };\n\n  const handleChange = e => {\n    setSearchText(e.target.value);\n\n    if (_isEmpty(e.target.value)) {\n      setIsDropdownActive(false);\n    }\n\n    if (e.target.value.length >= 2) {\n      setIsDropdownActive(true);\n    }\n  };\n\n  const handleBlur = e => {\n    setTimeout(() => {\n      setFocusedIndex(0);\n      setIsDropdownActive(false);\n    }, 200);\n  };\n\n  const handleDropdownClick = idx => {\n    search(idx);\n  };\n\n  const search = idx => {\n    console.log(\"search \", searchType[idx].title, searchText);\n    setFocusedIndex(0);\n    setIsDropdownActive(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"dropdown is-right searchbar-dropdown \" + (isDropdownActive ? \"is-active\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(SearchBarText, {\n    className: \"is-flex dropdown-trigger\",\n    onChange: handleChange,\n    onKeyDown: handleKeyDown,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"dropdown-menu is-full-width is-paddingless\",\n    id: \"dropdown-menu\",\n    role: \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dropdown-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, searchType.map((type, idx) => {\n    return React.createElement(\"div\", {\n      key: type.type,\n      className: \"dropdown-item searchbar-dropdown-item text-overflow-ellipsis \" + (focusedIndex === idx ? \"is-active\" : \"\"),\n      onClick: () => handleDropdownClick(idx),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"search-content-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, type.title, \" \"), \":\\xA0\", React.createElement(\"span\", {\n      className: \"has-text-link has-text-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, searchText));\n  }))));\n};\n\nconst SearchBarText = ({\n  className,\n  onChange,\n  onKeyDown,\n  onBlur\n}) => {\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        value = _useState8[0],\n        setValue = _useState8[1];\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    if (onChange) onChange(e);\n  };\n\n  const handleKeyDown = e => {\n    if (onKeyDown) onKeyDown(e);\n  };\n\n  const handleBlur = e => {\n    if (onBlur) onBlur(e);\n  };\n\n  return React.createElement(\"div\", {\n    className: className ? className : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(SearchBarTextChannelAddon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"input is-medium\",\n    type: \"search\",\n    value: value,\n    placeholder: \"\\uC74C\\uC2DD, \\uD0DC\\uADF8, \\uC9C0\\uC5ED...\",\n    onChange: handleChange,\n    onKeyDown: handleKeyDown,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })));\n};\n\nconst SearchBarTextChannelAddon = () => {\n  const _useSelector = useSelector(state => state.channel),\n        activeChannel = _useSelector.activeChannel;\n\n  return React.createElement(React.Fragment, null, activeChannel ? React.createElement(\"p\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"button is-static is-medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"image has-min-height-32 has-min-width-32 is-32x32 is-rounded\",\n    src: activeChannel.channelImageUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))) : null);\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/search/Search.jsx"],"names":["React","useState","useSelector","isEmpty","_isEmpty","SEARCH_TYPE_TOTAL","SEARCH_TYPE_TITLE","SEARCH_TYPE_PLACE","SEARCH_TYPE_STORE","SEARCH_TYPE_TAG","SearchBar","searchText","setSearchText","isDropdownActive","setIsDropdownActive","focusedIndex","setFocusedIndex","searchType","handleKeyDown","e","keyCode","preventDefault","search","handleChange","target","value","length","handleBlur","setTimeout","handleDropdownClick","idx","console","log","title","map","type","SearchBarText","className","onChange","onKeyDown","onBlur","setValue","SearchBarTextChannelAddon","state","channel","activeChannel","channelImageUrl"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {isEmpty as _isEmpty} from \"lodash\";\n\nconst SEARCH_TYPE_TOTAL = \"SEARCH_TYPE_TOTAL\"\nconst SEARCH_TYPE_TITLE = \"SEARCH_TYPE_TITLE\"\nconst SEARCH_TYPE_PLACE = \"SEARCH_TYPE_PLACE\"\nconst SEARCH_TYPE_STORE = \"SEARCH_TYPE_STORE\"\nconst SEARCH_TYPE_TAG = \"SEARCH_TYPE_TAG\"\n\nconst SearchBar = () => {\n    const [searchText, setSearchText] = useState(\"\");\n    const [isDropdownActive, setIsDropdownActive] = useState(false);\n    const [focusedIndex, setFocusedIndex] = useState(0);\n\n    const searchType = [\n        { \"title\": \"전체\", \"type\": SEARCH_TYPE_TOTAL },\n        { \"title\": \"제목\", \"type\": SEARCH_TYPE_TITLE },\n        { \"title\": \"장소\", \"type\": SEARCH_TYPE_PLACE },\n        { \"title\": \"가게 이름\", \"type\": SEARCH_TYPE_STORE },\n        { \"title\": \"태그\", \"type\": SEARCH_TYPE_TAG },\n    ]\n\n    const handleKeyDown = (e) => {\n        // down 40 up 38 enter 13\n        if (e.keyCode == 40) {\n            setFocusedIndex((focusedIndex + 1) % 5);\n            e.preventDefault()\n        } else if (e.keyCode == 38) {\n            setFocusedIndex((focusedIndex + 5 - 1) % 5);\n            e.preventDefault()\n        } else if (e.keyCode == 13) {\n            search(focusedIndex);\n            e.preventDefault()\n        }\n    };\n\n    const handleChange = (e) => {\n        setSearchText(e.target.value)\n        if (_isEmpty(e.target.value)) {\n            setIsDropdownActive(false)\n        }\n        if (e.target.value.length >= 2) {\n            setIsDropdownActive(true)\n        }\n    }\n\n    const handleBlur = (e) => {\n        setTimeout(() => {\n            setFocusedIndex(0);\n            setIsDropdownActive(false)\n        }, 200)\n    }\n\n    const handleDropdownClick = (idx) => {\n        search(idx);\n    }\n\n    const search = (idx) => {\n        console.log(\"search \", searchType[idx].title, searchText);\n        setFocusedIndex(0);\n        setIsDropdownActive(false)\n    }\n\n\n    return (\n        <div className={\"dropdown is-right searchbar-dropdown \" + (isDropdownActive ? \"is-active\" : \"\")}>\n            <SearchBarText className=\"is-flex dropdown-trigger\" onChange={handleChange} onKeyDown={handleKeyDown} onBlur={handleBlur} />\n            <div className=\"dropdown-menu is-full-width is-paddingless\" id=\"dropdown-menu\" role=\"menu\">\n                <div className=\"dropdown-content\">\n                    {searchType.map((type, idx) => {\n                        return (\n                            <div key={type.type}\n                                 className={\"dropdown-item searchbar-dropdown-item text-overflow-ellipsis \" + (focusedIndex === idx ? \"is-active\" : \"\")}\n                                 onClick={() => handleDropdownClick(idx)} >\n                                <span className=\"search-content-header\">{type.title} </span>\n                                :&nbsp;\n                                <span className=\"has-text-link has-text-weight-bold\">{searchText}</span>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst SearchBarText = ({className, onChange, onKeyDown, onBlur}) => {\n    const [value, setValue] = useState(\"\");\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n        if (onChange) onChange(e);\n    };\n    const handleKeyDown = (e) => {\n        if (onKeyDown) onKeyDown(e)\n    }\n    const handleBlur = (e) => {\n        if (onBlur) onBlur(e)\n    }\n    return (\n        <div className={className ? className : \"\"}>\n            <SearchBarTextChannelAddon/>\n            <p className=\"control\">\n                <input className=\"input is-medium\" type=\"search\" value={value}\n                       placeholder=\"음식, 태그, 지역...\"\n                       onChange={handleChange}\n                       onKeyDown={handleKeyDown}\n                       onBlur={handleBlur} />\n            </p>\n        </div>\n    )\n};\n\nconst SearchBarTextChannelAddon = () => {\n    const {activeChannel} = useSelector(state => state.channel);\n    return (\n        <>\n            {activeChannel\n                ? <p className=\"control\">\n                    <a className=\"button is-static is-medium\">\n                        <img className=\"image has-min-height-32 has-min-width-32 is-32x32 is-rounded\"\n                             src={activeChannel.channelImageUrl}/>\n                    </a>\n                </p>\n                : null}\n        </>\n    )\n};\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}