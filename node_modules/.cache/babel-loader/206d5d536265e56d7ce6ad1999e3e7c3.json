{"ast":null,"code":"import axios from 'axios';\nimport { getContent, getContents, updateContentLike } from \"data/api\";\nexport const CONTENT_RESET_CONTENT_DATA = 'CONTENT/RESET_CONTENT_DATA';\nexport const CONTENT_SET_ACTIVE_CONTENT = 'CONTENT/SET_ACTIVE_CONTENT';\nexport const CONTENT_SET_CONTENT_LOADING = 'CONTENT/SET_CONTENT_LOADING';\nexport const CONTENT_SHOW_OVERLAY_CONTENT = 'CONTENT/SHOW_OVERLAY_CONTENT';\nexport const CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF = 'CONTENT/SHOW_OVERLAY_CONTENT_WITH_DIFF';\nexport const CONTENT_SET_FOCUSED_CONTENT = 'CONTENT/SET_FOCUSED_CONTENT';\nexport const CONTENT_FETCH_CONTENT_STARTED = 'CONTENT/FETCH_CONTENT_STARTED';\nexport const CONTENT_FETCH_CONTENT_FINISHED = 'CONTENT/FETCH_CONTENT_FINISHED';\nexport const CONTENT_FETCH_CONTENT_SUCCESS = 'CONTENT/FETCH_CONTENT_SUCCESS';\nexport const CONTENT_FETCH_CONTENT_ERROR = 'CONTENT/FETCH_CONTENT_ERROR';\nexport const CONTENT_FETCH_CONTENT_LIKE_STARTED = 'CONTENT/FETCH_CONTENT_LIKE_STARTED';\nexport const CONTENT_FETCH_CONTENT_LIKE_FINISHED = 'CONTENT/FETCH_CONTENT_LIKE_FINISHED';\nexport const CONTENT_FETCH_CONTENT_LIKE_SUCCESS = 'CONTENT/FETCH_CONTENT_LIKE_SUCCESS';\nexport const CONTENT_FETCH_CONTENT_LIKE_ERROR = 'CONTENT/FETCH_CONTENT_LIKE_ERROR';\nexport const CONTENT_SET_PAGE_NUM = 'CONTENT/SET_PAGE_NUM';\nexport const fetchContentList = (channelId, activeContentId, mapBounds = null, pageNum = 1, isAppend = false, callback = null) => {\n  return dispatch => {\n    if (!isAppend) {\n      dispatch(resetContentData());\n    }\n\n    dispatch(fetchContentStarted());\n    return getContents(channelId, mapBounds, pageNum).then(response => {\n      dispatch(fetchContentSuccess({\n        data: response.data,\n        activeContentId: activeContentId,\n        pageNum: pageNum,\n        isAppend: isAppend\n      }));\n      dispatch(fetchContent(channelId, activeContentId));\n    }).catch(error => {\n      dispatch(fetchContentFail(error));\n    }).finally(() => {\n      dispatch(fetchContentFinished());\n      if (callback) callback(channelId, activeContentId);\n    });\n  };\n};\nexport const fetchContent = (channelId, contentId) => {\n  if (!contentId) {\n    return dispatch => {\n      /*do Nothing*/\n    };\n  }\n\n  return dispatch => {\n    dispatch(fetchContentStarted()); //TODO set active channel to get content\n\n    return getContent(contentId, channelId).then(response => {\n      dispatch(fetchContentSuccess({\n        data: response.data,\n        activeContentId: contentId,\n        isAppend: true,\n        isUnit: true\n      }));\n    }).catch(error => {\n      dispatch(fetchContentFail(error));\n    }).finally(() => {\n      dispatch(fetchContentFinished());\n    });\n  };\n};\nexport const fetchUpdateContentLike = (email, contentId, like, successCallback, failedCallback) => {\n  return dispatch => {\n    dispatch(fetchContentLikeStarted());\n    return updateContentLike(email, contentId, like).then(response => {\n      //TODO check response data\n      dispatch(fetchContentLikeSuccess());\n\n      if (successCallback) {\n        successCallback();\n      }\n    }).catch(error => {\n      dispatch(fetchContentLikeFail());\n\n      if (failedCallback) {\n        failedCallback();\n      }\n    }).finally(() => {\n      dispatch(fetchContentLikeFinished());\n    });\n  };\n};\nexport const resetContentData = () => {\n  return {\n    type: CONTENT_RESET_CONTENT_DATA\n  };\n};\nexport const setContentLoading = contentLoading => {\n  return {\n    type: CONTENT_SET_CONTENT_LOADING,\n    contentLoading\n  };\n};\nexport const fetchContentStarted = () => {\n  return {\n    type: CONTENT_FETCH_CONTENT_STARTED\n  };\n};\nexport const fetchContentFinished = () => {\n  return {\n    type: CONTENT_FETCH_CONTENT_FINISHED\n  };\n};\nexport const fetchContentSuccess = data => {\n  return {\n    type: CONTENT_FETCH_CONTENT_SUCCESS,\n    data\n  };\n};\nexport const fetchContentFail = err => {\n  return {\n    type: CONTENT_FETCH_CONTENT_ERROR,\n    err\n  };\n};\nexport const fetchContentLikeStarted = () => {\n  return {\n    type: CONTENT_FETCH_CONTENT_LIKE_STARTED\n  };\n};\nexport const fetchContentLikeFinished = () => {\n  return {\n    type: CONTENT_FETCH_CONTENT_LIKE_FINISHED\n  };\n};\nexport const fetchContentLikeSuccess = data => {\n  return {\n    type: CONTENT_FETCH_CONTENT_LIKE_SUCCESS,\n    data\n  };\n};\nexport const fetchContentLikeFail = err => {\n  return {\n    type: CONTENT_FETCH_CONTENT_LIKE_ERROR,\n    err\n  };\n};\nexport const setActiveContent = content => {\n  return {\n    type: CONTENT_SET_ACTIVE_CONTENT,\n    content\n  };\n};\nexport const showOverlayContent = content => {\n  return {\n    type: CONTENT_SHOW_OVERLAY_CONTENT,\n    content\n  };\n};\nexport const showOverlayContentWithDiff = content => {\n  return {\n    type: CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF,\n    content\n  };\n};\nexport const setFocusedContent = content => {\n  return {\n    type: CONTENT_SET_FOCUSED_CONTENT,\n    content\n  };\n};\nexport const setPageNum = pageNum => {\n  return {\n    type: CONTENT_SET_PAGE_NUM,\n    pageNum\n  };\n};","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/action/content.js"],"names":["axios","getContent","getContents","updateContentLike","CONTENT_RESET_CONTENT_DATA","CONTENT_SET_ACTIVE_CONTENT","CONTENT_SET_CONTENT_LOADING","CONTENT_SHOW_OVERLAY_CONTENT","CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF","CONTENT_SET_FOCUSED_CONTENT","CONTENT_FETCH_CONTENT_STARTED","CONTENT_FETCH_CONTENT_FINISHED","CONTENT_FETCH_CONTENT_SUCCESS","CONTENT_FETCH_CONTENT_ERROR","CONTENT_FETCH_CONTENT_LIKE_STARTED","CONTENT_FETCH_CONTENT_LIKE_FINISHED","CONTENT_FETCH_CONTENT_LIKE_SUCCESS","CONTENT_FETCH_CONTENT_LIKE_ERROR","CONTENT_SET_PAGE_NUM","fetchContentList","channelId","activeContentId","mapBounds","pageNum","isAppend","callback","dispatch","resetContentData","fetchContentStarted","then","response","fetchContentSuccess","data","fetchContent","catch","error","fetchContentFail","finally","fetchContentFinished","contentId","isUnit","fetchUpdateContentLike","email","like","successCallback","failedCallback","fetchContentLikeStarted","fetchContentLikeSuccess","fetchContentLikeFail","fetchContentLikeFinished","type","setContentLoading","contentLoading","err","setActiveContent","content","showOverlayContent","showOverlayContentWithDiff","setFocusedContent","setPageNum"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {getContent, getContents, updateContentLike} from \"data/api\";\n\nexport const CONTENT_RESET_CONTENT_DATA = 'CONTENT/RESET_CONTENT_DATA';\nexport const CONTENT_SET_ACTIVE_CONTENT = 'CONTENT/SET_ACTIVE_CONTENT';\nexport const CONTENT_SET_CONTENT_LOADING = 'CONTENT/SET_CONTENT_LOADING';\nexport const CONTENT_SHOW_OVERLAY_CONTENT = 'CONTENT/SHOW_OVERLAY_CONTENT';\nexport const CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF = 'CONTENT/SHOW_OVERLAY_CONTENT_WITH_DIFF';\nexport const CONTENT_SET_FOCUSED_CONTENT = 'CONTENT/SET_FOCUSED_CONTENT';\nexport const CONTENT_FETCH_CONTENT_STARTED = 'CONTENT/FETCH_CONTENT_STARTED';\nexport const CONTENT_FETCH_CONTENT_FINISHED = 'CONTENT/FETCH_CONTENT_FINISHED';\nexport const CONTENT_FETCH_CONTENT_SUCCESS = 'CONTENT/FETCH_CONTENT_SUCCESS';\nexport const CONTENT_FETCH_CONTENT_ERROR = 'CONTENT/FETCH_CONTENT_ERROR';\nexport const CONTENT_FETCH_CONTENT_LIKE_STARTED = 'CONTENT/FETCH_CONTENT_LIKE_STARTED';\nexport const CONTENT_FETCH_CONTENT_LIKE_FINISHED = 'CONTENT/FETCH_CONTENT_LIKE_FINISHED';\nexport const CONTENT_FETCH_CONTENT_LIKE_SUCCESS = 'CONTENT/FETCH_CONTENT_LIKE_SUCCESS';\nexport const CONTENT_FETCH_CONTENT_LIKE_ERROR = 'CONTENT/FETCH_CONTENT_LIKE_ERROR';\nexport const CONTENT_SET_PAGE_NUM = 'CONTENT/SET_PAGE_NUM';\n\nexport const fetchContentList = (channelId, activeContentId, mapBounds=null, pageNum=1, isAppend=false, callback=null) => {\n    return (dispatch) => {\n        if (!isAppend) {\n            dispatch(resetContentData());\n        }\n        dispatch(fetchContentStarted());\n        return getContents(channelId, mapBounds, pageNum).then(response => {\n                dispatch(fetchContentSuccess({data: response.data, activeContentId: activeContentId, pageNum: pageNum, isAppend: isAppend}))\n                dispatch(fetchContent(channelId, activeContentId))\n            }).catch((error)  => {\n                dispatch(fetchContentFail(error))\n            }).finally(() => {\n                dispatch(fetchContentFinished());\n                if(callback) callback(channelId, activeContentId);\n        });\n    }\n};\n\nexport const fetchContent = (channelId, contentId) => {\n    if (!contentId) {\n        return (dispatch) => {/*do Nothing*/};\n    }\n    return (dispatch) => {\n        dispatch(fetchContentStarted());\n        //TODO set active channel to get content\n        return getContent(contentId, channelId).then(response => {\n            dispatch(fetchContentSuccess({data: response.data, activeContentId: contentId, isAppend: true, isUnit: true}))\n        }).catch((error)  => {\n            dispatch(fetchContentFail(error))\n        }).finally(() => {\n            dispatch(fetchContentFinished())\n        });\n    }\n}\n\nexport const fetchUpdateContentLike = (email, contentId, like, successCallback, failedCallback) => {\n    return (dispatch) => {\n        dispatch(fetchContentLikeStarted());\n        return updateContentLike(email, contentId, like).then(response => {\n            //TODO check response data\n            dispatch(fetchContentLikeSuccess());\n            if (successCallback) {\n                successCallback()\n            }\n        }).catch((error) => {\n            dispatch(fetchContentLikeFail());\n            if (failedCallback) {\n                failedCallback()\n            }\n        }).finally(() => {\n            dispatch(fetchContentLikeFinished());\n        })\n    }\n};\n\nexport const resetContentData = () => {\n    return {\n        type: CONTENT_RESET_CONTENT_DATA\n    }\n};\n\nexport const setContentLoading = (contentLoading) => {\n    return {\n        type: CONTENT_SET_CONTENT_LOADING,\n        contentLoading\n    }\n};\n\nexport const fetchContentStarted = () => {\n    return {\n        type: CONTENT_FETCH_CONTENT_STARTED\n    }\n};\n\nexport const fetchContentFinished = () => {\n    return {\n        type: CONTENT_FETCH_CONTENT_FINISHED\n    }\n};\n\nexport const fetchContentSuccess = (data) => {\n    return {\n        type: CONTENT_FETCH_CONTENT_SUCCESS,\n        data\n    }\n};\n\nexport const fetchContentFail = (err) => {\n    return {\n        type: CONTENT_FETCH_CONTENT_ERROR,\n        err\n    }\n};\n\nexport const fetchContentLikeStarted = () => {\n    return {\n        type: CONTENT_FETCH_CONTENT_LIKE_STARTED\n    }\n};\n\nexport const fetchContentLikeFinished = () => {\n    return {\n        type: CONTENT_FETCH_CONTENT_LIKE_FINISHED\n    }\n};\n\nexport const fetchContentLikeSuccess = (data) => {\n    return {\n        type: CONTENT_FETCH_CONTENT_LIKE_SUCCESS,\n        data\n    }\n};\n\nexport const fetchContentLikeFail = (err) => {\n    return {\n        type: CONTENT_FETCH_CONTENT_LIKE_ERROR,\n        err\n    }\n};\n\nexport const setActiveContent = (content) => {\n    return {\n        type: CONTENT_SET_ACTIVE_CONTENT,\n        content\n    }\n};\n\nexport const showOverlayContent = (content) => {\n    return {\n        type: CONTENT_SHOW_OVERLAY_CONTENT,\n        content\n    }\n};\n\nexport const showOverlayContentWithDiff = (content) => {\n    return {\n        type: CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF,\n        content\n    }\n};\n\nexport const setFocusedContent = (content) => {\n    return {\n        type: CONTENT_SET_FOCUSED_CONTENT,\n        content\n    }\n};\n\nexport const setPageNum = (pageNum) => {\n    return {\n        type: CONTENT_SET_PAGE_NUM,\n        pageNum\n    }\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}