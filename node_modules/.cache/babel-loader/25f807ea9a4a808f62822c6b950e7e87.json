{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/home/MobileHome.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { faArrowUp, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MobileKakaoMap from \"components/mobile/map/MobileKakaoMap\";\nimport { animated, useSpring } from \"react-spring\";\nimport MobileStoreList from \"components/mobile/store/MobileStoreList\";\nimport StoreDetailAnimate from \"components/mobile/store/StoreDetail\";\nimport { MOBILE_CONTENT_LIST_BAR, MOBILE_CONTENT_LIST_LOADING } from \"assets/styles/colors\";\nimport { fetchContentDetail, resetContentDetailData } from \"data/redux/action/contentDetail\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport { isEmpty as _isEmpty, isNil as _isNil } from 'lodash';\nimport { useLastLocation } from \"react-router-last-location\";\nimport { LoadingSpinner } from \"components/common/layout/PresentUtil\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport queryString from \"query-string\";\nimport { buildChannelPath, buildQuery } from \"data/util\";\nimport { setFocusedLocation } from \"data/redux/action/location\";\n\nconst MobileHome = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showMoreList = _useState2[0],\n        setShowMoreList = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fullList = _useState4[0],\n        setFullList = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isHideList = _useState6[0],\n        setIsHideList = _useState6[1];\n\n  const storeListRef = useRef(null);\n\n  const _useParams = useParams(),\n        channelId = _useParams.channelId,\n        contentId = _useParams.contentId;\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const _queryString$parse = queryString.parse(location.search),\n        query = _queryString$parse.query,\n        searchType = _queryString$parse.searchType,\n        page = _queryString$parse.page,\n        focused = _queryString$parse.focused,\n        swLat = _queryString$parse.swLat,\n        swLng = _queryString$parse.swLng,\n        neLat = _queryString$parse.neLat,\n        neLng = _queryString$parse.neLng;\n\n  const _useSelector = useSelector(state => state.content),\n        totalCount = _useSelector.totalCount,\n        contentLoading = _useSelector.contentLoading;\n\n  const _useSelector2 = useSelector(state => state.mapLocation),\n        focusedMapLocation = _useSelector2.focusedMapLocation;\n\n  const _useSelector3 = useSelector(state => state.channel),\n        channelLoading = _useSelector3.channelLoading;\n\n  const _useSelector4 = useSelector(state => state.contentDetail),\n        contentDetail = _useSelector4.contentDetail,\n        contentDetailLoading = _useSelector4.contentDetailLoading;\n\n  const _useSpring = useSpring({\n    h: showMoreList ? fullList ? 1 : 0.8 : 0,\n    overflow: showMoreList || fullList ? \"scroll\" : \"hidden\",\n    width: fullList ? \"100%\" : \"95%\",\n    bottom: fullList ? \"0\" : \"calc(2vh)\",\n    config: {\n      clamp: true,\n      duration: 200\n    }\n  }),\n        h = _useSpring.h,\n        overflow = _useSpring.overflow,\n        width = _useSpring.width,\n        bottom = _useSpring.bottom;\n\n  const toggleShowList = e => {\n    if (fullList) {\n      setShowMoreList(false);\n      setFullList(false);\n    } else if (showMoreList) {\n      setFullList(true);\n    } else {\n      setShowMoreList(true);\n    }\n  };\n\n  useEffect(() => {\n    setShowMoreList(false);\n    setFullList(false);\n  }, [query, searchType, swLat, swLng, neLat, neLng]);\n\n  const closeList = e => {\n    setShowMoreList(false);\n    setFullList(false);\n  };\n\n  const slidingHeight = h.interpolate(h => h * window.innerHeight < 53 ? '53px' : `${h * window.innerHeight}px`);\n\n  const storeListScrollTop = e => {\n    storeListRef.current.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  useEffect(() => {\n    if (!showMoreList && storeListRef != null && storeListRef.current != null) {\n      storeListRef.current.scrollTo(0, 0, 2000);\n    }\n  }, [showMoreList]);\n  useEffect(() => {\n    if (!_isNil(focusedMapLocation)) {\n      setShowMoreList(false);\n      setFullList(false);\n      history.push({\n        pathname: location.pathname,\n        search: buildQuery(Object.assign(queryString.parse(location.search), {\n          focused: focusedMapLocation.id\n        }))\n      });\n    }\n  }, [focusedMapLocation]);\n  useEffect(() => {\n    if (_isNil(focused)) {\n      dispatch(setFocusedLocation(null));\n    }\n  }, [focused]);\n  useEffect(() => {\n    if (contentId) {\n      dispatch(fetchContentDetail(channelId, contentId));\n    } else {\n      dispatch(resetContentDetailData());\n    }\n  }, [contentId]);\n  const history = useHistory();\n  const lastLocation = useLastLocation();\n\n  const backToStoreList = () => {\n    if (_isNil(lastLocation)) {\n      history.push({\n        pathname: buildChannelPath({\n          id: channelId\n        }),\n        search: location.search\n      });\n    } else {\n      history.goBack(1);\n    }\n  };\n\n  const showMoreCallback = h => {\n    if (h == 0) {\n      setIsHideList(true);\n    } else {\n      setIsHideList(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"column is-paddingless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(StoreDetailAnimate, {\n    visible: !_isEmpty(contentDetail) || contentDetailLoading,\n    contentDetail: contentDetail,\n    onClickBack: backToStoreList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"modal modal-background mobile-modal-background-color \" + (isHideList ? \"\" : \"is-active\"),\n    onClick: closeList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(animated.div, {\n    ref: storeListRef,\n    style: {\n      width: width,\n      bottom: bottom,\n      height: slidingHeight,\n      overflowY: overflow,\n      callback: h.interpolate(showMoreCallback)\n    },\n    className: \"mobile-video-list box is-paddingless is-bottom-marginless is-bottom-borderless has-text-centered has-cursor-pointer\" + (showMoreList || fullList ? \" active\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(LoadingOverlay, {\n    className: \"store-loading-overlay\",\n    active: channelLoading || contentLoading,\n    spinner: React.createElement(LoadingSpinner, {\n      color: MOBILE_CONTENT_LIST_LOADING,\n      loading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: toggleShowList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"show-more-rule-icon is-paddingless\",\n    icon: faMinus,\n    transform: !fullList ? \"rotate-155\" : \"rotate-205\",\n    size: '1x',\n    color: MOBILE_CONTENT_LIST_BAR,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(FontAwesomeIcon, {\n    className: \"show-more-rule-icon is-paddingless\",\n    icon: faMinus,\n    transform: !fullList ? \"rotate-25\" : \"rotate-335\",\n    size: '1x',\n    color: MOBILE_CONTENT_LIST_BAR,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"has-margin-bottom-15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, `목록으로 보기 (${totalCount})`)), React.createElement(\"hr\", {\n    className: \"is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))), React.createElement(MobileStoreList, {\n    isListVisible: !isHideList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"button go-top-button is-rounded is-48x48\" + (fullList ? \"\" : \" is-hidden\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faArrowUp,\n    size: \"lg\",\n    onClick: storeListScrollTop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))), React.createElement(MobileKakaoMap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }));\n};\n\nconst handleDrag = (dragState, h, maxHeight, initValueRange, dragRange, stateChangeRange, currentState, stateChangeFunc) => {\n  // example\n  // const bind = useDrag((state) => {\n  //     if (isClick(state)) {\n  //         toggleShowList();\n  //     } else {\n  //         handleDrag(state, h, modalHeight(), [0, 1], [0.15, 0.5], [0.12, 0.8], showMoreList, setShowMoreList)\n  //     }\n  //\n  // });\n  // dragState is state from useDrag\n  // h is useSpring target value\n  // maxHeight is target max height\n  // initValueRange is init value for h ex) [0, 1]\n  // dragRange is draggable position for h. can not over initValueRange.\n  //      ex) [0.15, 0.7] => 0~0.15, 0.7~1 is draggable position.\n  //      when drag is active, h can not over 0.15(currentState is false), h can not under 0.7(currentState is true)\n  // stateChangeRange is the position will be change the state when drag ended. can not over dragRange\n  //      ex) [0.12, 0.8] => the position is over 0.12(currentState is false) or under 0.8(currentState is true), the state will be changed.\n  // currentState. true or false. true mean h is initValue[1], false mean h is initValue[0]\n  // stateChangeFunc is function for chage state.\n  const _dragState$delta = _slicedToArray(dragState.delta, 2),\n        mx = _dragState$delta[0],\n        my = _dragState$delta[1];\n\n  const _initValueRange = _slicedToArray(initValueRange, 2),\n        initValueUnder = _initValueRange[0],\n        initValueOver = _initValueRange[1];\n\n  const _dragRange = _slicedToArray(dragRange, 2),\n        dragUnder = _dragRange[0],\n        dragOver = _dragRange[1];\n\n  const _stateChangeRange = _slicedToArray(stateChangeRange, 2),\n        stateChangeUnder = _stateChangeRange[0],\n        stateChangeOver = _stateChangeRange[1];\n\n  if (dragState.currentTarget.scrollTop !== 0) {\n    h.setValue(currentState ? initValueOver : initValueUnder, true);\n    return;\n  }\n\n  let currentHeight = h.value * maxHeight > 53 ? h.value * maxHeight : 53;\n  let afterDragedValue = my * -1 / maxHeight + currentHeight / maxHeight;\n\n  if (currentState) {\n    h.setValue(afterDragedValue < dragOver ? dragOver : afterDragedValue, true);\n  } else {\n    h.setValue(afterDragedValue > dragUnder ? dragUnder : afterDragedValue, true);\n  }\n\n  if (dragState.last) {\n    if (dragState.velocity > 1) {\n      stateChangeFunc(!currentState);\n      return;\n    }\n\n    if (currentState) {\n      if (afterDragedValue < stateChangeOver) {\n        stateChangeFunc(!currentState);\n      } else {\n        h.setValue(initValueOver, true);\n      }\n    } else {\n      if (afterDragedValue > stateChangeUnder) {\n        stateChangeFunc(!currentState);\n      } else {\n        h.setValue(initValueUnder, true);\n      }\n    }\n  }\n};\n\nexport default MobileHome;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/home/MobileHome.jsx"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","faArrowUp","faMinus","FontAwesomeIcon","MobileKakaoMap","animated","useSpring","MobileStoreList","StoreDetailAnimate","MOBILE_CONTENT_LIST_BAR","MOBILE_CONTENT_LIST_LOADING","fetchContentDetail","resetContentDetailData","useHistory","useLocation","useParams","isEmpty","_isEmpty","isNil","_isNil","useLastLocation","LoadingSpinner","LoadingOverlay","queryString","buildChannelPath","buildQuery","setFocusedLocation","MobileHome","showMoreList","setShowMoreList","fullList","setFullList","isHideList","setIsHideList","storeListRef","channelId","contentId","dispatch","location","parse","search","query","searchType","page","focused","swLat","swLng","neLat","neLng","state","content","totalCount","contentLoading","mapLocation","focusedMapLocation","channel","channelLoading","contentDetail","contentDetailLoading","h","overflow","width","bottom","config","clamp","duration","toggleShowList","e","closeList","slidingHeight","interpolate","window","innerHeight","storeListScrollTop","current","scrollTo","top","left","behavior","history","push","pathname","Object","assign","id","lastLocation","backToStoreList","goBack","showMoreCallback","height","overflowY","callback","handleDrag","dragState","maxHeight","initValueRange","dragRange","stateChangeRange","currentState","stateChangeFunc","delta","mx","my","initValueUnder","initValueOver","dragUnder","dragOver","stateChangeUnder","stateChangeOver","currentTarget","scrollTop","setValue","currentHeight","value","afterDragedValue","last","velocity"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {faArrowUp, faMinus} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport MobileKakaoMap from \"components/mobile/map/MobileKakaoMap\";\nimport {animated, useSpring} from \"react-spring\";\nimport MobileStoreList from \"components/mobile/store/MobileStoreList\";\nimport StoreDetailAnimate from \"components/mobile/store/StoreDetail\";\nimport {MOBILE_CONTENT_LIST_BAR, MOBILE_CONTENT_LIST_LOADING} from \"assets/styles/colors\";\nimport {fetchContentDetail, resetContentDetailData} from \"data/redux/action/contentDetail\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {isEmpty as _isEmpty, isNil as _isNil} from 'lodash';\nimport {useLastLocation} from \"react-router-last-location\";\nimport {LoadingSpinner} from \"components/common/layout/PresentUtil\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport queryString from \"query-string\";\nimport {buildChannelPath, buildQuery} from \"data/util\";\nimport {setFocusedLocation} from \"data/redux/action/location\";\n\nconst MobileHome = () => {\n    const [showMoreList, setShowMoreList] = useState(false);\n    const [fullList, setFullList] = useState(false);\n    const [isHideList, setIsHideList] = useState(true);\n    const storeListRef = useRef(null);\n    const {channelId, contentId} = useParams();\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const {query, searchType, page, focused, swLat, swLng, neLat, neLng} = queryString.parse(location.search);\n\n    const {totalCount, contentLoading} = useSelector(state => state.content);\n    const {focusedMapLocation} = useSelector(state => state.mapLocation);\n    const {channelLoading} = useSelector(state => state.channel);\n    const {contentDetail, contentDetailLoading} = useSelector(state => state.contentDetail);\n    const {h, overflow, width, bottom} = useSpring({\n        h: showMoreList ? (fullList ? 1 : 0.8) : 0,\n        overflow: showMoreList || fullList ? \"scroll\" : \"hidden\",\n        width: fullList ? \"100%\" : \"95%\",\n        bottom: fullList ? \"0\" : \"calc(2vh)\",\n        config: {clamp:true, duration: 200}});\n    const toggleShowList = (e) => {\n        if (fullList) {\n            setShowMoreList(false)\n            setFullList(false)\n        } else if (showMoreList) {\n            setFullList(true)\n        } else {\n            setShowMoreList(true)\n        }\n    }\n\n    useEffect(() => {\n        setShowMoreList(false)\n        setFullList(false)\n    }, [query, searchType, swLat, swLng, neLat, neLng])\n\n    const closeList = (e) => {\n        setShowMoreList(false);\n        setFullList(false);\n    }\n    const slidingHeight = h.interpolate(h => (h * window.innerHeight < 53) ? '53px' : `${h * window.innerHeight}px`);\n\n    const storeListScrollTop = (e) => {\n        storeListRef.current.scrollTo({top: 0, left: 0, behavior: 'smooth'})\n    }\n\n    useEffect(() => {\n        if (!showMoreList && storeListRef != null && storeListRef.current != null) {\n            storeListRef.current.scrollTo(0, 0, 2000)\n        }\n    }, [showMoreList])\n\n    useEffect(() => {\n        if (!_isNil(focusedMapLocation)) {\n            setShowMoreList(false);\n            setFullList(false);\n            history.push({\n                pathname: location.pathname,\n                search: buildQuery(Object.assign(queryString.parse(location.search), {focused: focusedMapLocation.id}))\n            });\n        }\n    }, [focusedMapLocation])\n\n    useEffect(() => {\n        if (_isNil(focused)) {\n            dispatch(setFocusedLocation(null));\n        }\n    }, [focused])\n\n    useEffect(() => {\n        if (contentId) {\n            dispatch(fetchContentDetail(channelId, contentId));\n        } else {\n            dispatch(resetContentDetailData());\n        }\n    }, [contentId]);\n\n    const history = useHistory();\n    const lastLocation = useLastLocation();\n    const backToStoreList = () => {\n        if (_isNil(lastLocation)) {\n            history.push({\n                pathname: buildChannelPath({id: channelId}),\n                search: location.search\n            });\n        } else {\n            history.goBack(1);\n        }\n    };\n\n    const showMoreCallback = (h) => {\n        if (h == 0) {\n            setIsHideList(true);\n        } else {\n            setIsHideList(false);\n        }\n    }\n\n    return (\n        <div className=\"column is-paddingless\">\n            <StoreDetailAnimate visible={!_isEmpty(contentDetail) || contentDetailLoading} contentDetail={contentDetail} onClickBack={backToStoreList} />\n            <div className={\"modal modal-background mobile-modal-background-color \" + (isHideList ? \"\" : \"is-active\")} onClick={closeList}/>\n            <animated.div ref={storeListRef} style={{width: width, bottom: bottom, height: slidingHeight, overflowY: overflow, callback: h.interpolate(showMoreCallback)}}\n                          className={\"mobile-video-list box is-paddingless is-bottom-marginless is-bottom-borderless has-text-centered has-cursor-pointer\" + (showMoreList || fullList ? \" active\" : \"\")} >\n                <LoadingOverlay className={\"store-loading-overlay\"}\n                    active={channelLoading || contentLoading}\n                    spinner={<LoadingSpinner color={MOBILE_CONTENT_LIST_LOADING} loading={true}/>}>\n                    <div onClick={toggleShowList}>\n                        <FontAwesomeIcon className=\"show-more-rule-icon is-paddingless\" icon={faMinus} transform={!fullList ? \"rotate-155\" : \"rotate-205\"} size={'1x'} color={MOBILE_CONTENT_LIST_BAR} />\n                        <FontAwesomeIcon className=\"show-more-rule-icon is-paddingless\" icon={faMinus} transform={!fullList ? \"rotate-25\" : \"rotate-335\"} size={'1x'} color={MOBILE_CONTENT_LIST_BAR} />\n                        <div className=\"has-margin-bottom-15\" ><strong>{`목록으로 보기 (${totalCount})`}</strong></div>\n                        <hr className=\"is-marginless\"/>\n                    </div>\n                </LoadingOverlay>\n                <MobileStoreList isListVisible={!isHideList}/>\n                <button className={\"button go-top-button is-rounded is-48x48\" + (fullList ? \"\" : \" is-hidden\")} >\n                    <FontAwesomeIcon icon={faArrowUp} size={\"lg\"} onClick={storeListScrollTop}/>\n                </button>\n            </animated.div>\n            <MobileKakaoMap />\n        </div>\n    )\n};\n\nconst handleDrag = (dragState, h, maxHeight, initValueRange, dragRange, stateChangeRange, currentState, stateChangeFunc) => {\n    // example\n    // const bind = useDrag((state) => {\n    //     if (isClick(state)) {\n    //         toggleShowList();\n    //     } else {\n    //         handleDrag(state, h, modalHeight(), [0, 1], [0.15, 0.5], [0.12, 0.8], showMoreList, setShowMoreList)\n    //     }\n    //\n    // });\n    // dragState is state from useDrag\n    // h is useSpring target value\n    // maxHeight is target max height\n    // initValueRange is init value for h ex) [0, 1]\n    // dragRange is draggable position for h. can not over initValueRange.\n    //      ex) [0.15, 0.7] => 0~0.15, 0.7~1 is draggable position.\n    //      when drag is active, h can not over 0.15(currentState is false), h can not under 0.7(currentState is true)\n    // stateChangeRange is the position will be change the state when drag ended. can not over dragRange\n    //      ex) [0.12, 0.8] => the position is over 0.12(currentState is false) or under 0.8(currentState is true), the state will be changed.\n    // currentState. true or false. true mean h is initValue[1], false mean h is initValue[0]\n    // stateChangeFunc is function for chage state.\n    const [mx, my] = dragState.delta;\n    const [initValueUnder, initValueOver] = initValueRange;\n    const [dragUnder, dragOver] = dragRange;\n    const [stateChangeUnder, stateChangeOver] = stateChangeRange;\n    if (dragState.currentTarget.scrollTop !== 0) {\n        h.setValue(currentState ? initValueOver : initValueUnder, true);\n        return;\n    }\n    let currentHeight = h.value * maxHeight > 53 ? h.value * maxHeight : 53;\n    let afterDragedValue = (my*-1)/maxHeight + currentHeight/maxHeight;\n    if (currentState) {\n        h.setValue(afterDragedValue < dragOver ? dragOver : afterDragedValue, true)\n    } else {\n        h.setValue(afterDragedValue > dragUnder ? dragUnder : afterDragedValue, true)\n    }\n    if (dragState.last) {\n        if (dragState.velocity > 1) {\n            stateChangeFunc(!currentState);\n            return\n        }\n        if (currentState) {\n            if (afterDragedValue < stateChangeOver) {\n                stateChangeFunc(!currentState);\n            } else {\n                h.setValue(initValueOver, true);\n            }\n        } else {\n            if (afterDragedValue > stateChangeUnder) {\n                stateChangeFunc(!currentState);\n            } else {\n                h.setValue(initValueUnder, true);\n            }\n        }\n    }\n};\n\nexport default MobileHome;"]},"metadata":{},"sourceType":"module"}