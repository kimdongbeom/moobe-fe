{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/comment/CommentList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport { isEmpty as _isEmpty, isNil as _isNil } from \"lodash\";\nimport { fetchMoobeComment, fetchYoutubeComment, resetComment } from \"data/redux/action/comment\";\nimport Comment from \"components/common/comment/Comment\";\nimport { LoadingBouncer } from \"components/common/layout/PresentUtil\";\nimport CommentInput from \"components/common/comment/CommentInput\";\nimport { COMMENT_LOADING } from \"assets/styles/colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGrinStars, faGrinTears } from \"@fortawesome/free-regular-svg-icons\";\n\nconst CommentList = ({\n  content\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        activeMoobeComment = _useState2[0],\n        setActiveMoobeComment = _useState2[1];\n\n  const _useSelector = useSelector(state => state.comment),\n        moobeCommentList = _useSelector.moobeCommentList,\n        moobeCommentPageNum = _useSelector.moobeCommentPageNum,\n        moobeCommentMaxPage = _useSelector.moobeCommentMaxPage,\n        moobeCommentTotalCount = _useSelector.moobeCommentTotalCount,\n        moobeCommentLoading = _useSelector.moobeCommentLoading,\n        youtubeCommentList = _useSelector.youtubeCommentList,\n        youtubeCommentPageNum = _useSelector.youtubeCommentPageNum,\n        youtubeCommentMaxPage = _useSelector.youtubeCommentMaxPage,\n        youtubeCommentTotalCount = _useSelector.youtubeCommentTotalCount,\n        youtubeCommentLoading = _useSelector.youtubeCommentLoading;\n\n  const _useSelector2 = useSelector(state => state.user),\n        user = _useSelector2.user;\n\n  const getComment = () => activeMoobeComment ? moobeCommentList : youtubeCommentList;\n\n  const getCommentLoading = () => activeMoobeComment ? moobeCommentLoading : youtubeCommentLoading;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!_isEmpty(content)) {\n      initComment();\n    }\n\n    return () => {\n      dispatch(resetComment());\n    };\n  }, [content]);\n\n  const initComment = () => {\n    dispatch(fetchMoobeComment(content.id, 1, moobeCommentMaxPage, true));\n    dispatch(fetchYoutubeComment(content.id, 1, youtubeCommentMaxPage, true));\n  };\n\n  const fetchComment = (page = 1, reset = false) => {\n    if (!_isNil(content) && !getCommentLoading()) {\n      dispatch(activeMoobeComment ? fetchMoobeComment(content.id, page, moobeCommentMaxPage) : fetchYoutubeComment(content.id, page, youtubeCommentMaxPage));\n    }\n  };\n\n  const onVisibleFooter = visible => {\n    if (visible) {\n      let currentCommentPage = activeMoobeComment ? moobeCommentPageNum : youtubeCommentPageNum;\n      fetchComment(currentCommentPage + 1);\n    }\n  };\n\n  const renderComments = () => {\n    return getComment().map(comment => React.createElement(Comment, {\n      key: comment.uuid,\n      comment: comment,\n      user: user,\n      isMoobe: activeMoobeComment,\n      isRawHtml: !activeMoobeComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  };\n\n  const renderCommentFooter = () => {\n    let comments = getComment();\n    let isMaxPage = activeMoobeComment ? moobeCommentPageNum >= moobeCommentMaxPage : youtubeCommentPageNum >= youtubeCommentMaxPage;\n\n    if (getCommentLoading()) {\n      return null;\n    } else if (_isEmpty(comments)) {\n      return activeMoobeComment ? React.createElement(MoobeCommentEmpty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : React.createElement(YoutubeCommentEmpty, {\n        videoId: content.videoLinkId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    } else if (isMaxPage) {\n      return activeMoobeComment ? React.createElement(MoobeCommentFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }) : React.createElement(YoutubeCommentFooter, {\n        videoId: content.videoLinkId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n  };\n\n  const renderStaticTab = () => React.createElement(\"div\", {\n    className: \"column tabs is-toggle is-fullwidth is-marginless is-top-paddingless white-space-normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, !activeMoobeComment ? React.createElement(\"p\", {\n    className: \"fa-0-87x has-text-grey \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\uC720\\uD29C\\uBE0C \\uB313\\uAE00 \\uC911 \\uC88B\\uC544\\uC694 \\uAE30\\uC900 TOP 10 \\uB313\\uAE00\\uB9CC \\uC81C\\uACF5\\uD569\\uB2C8\\uB2E4\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"strong\", {\n    className: \"is-size-5 has-padding-right-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\uB313\\uAE00 \", activeMoobeComment ? moobeCommentTotalCount : youtubeCommentTotalCount, \"\\uAC1C\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: activeMoobeComment ? \"\" : \"is-active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    onClick: () => setActiveMoobeComment(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Youtube\"))), React.createElement(\"li\", {\n    className: activeMoobeComment ? \"is-active\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    onClick: () => setActiveMoobeComment(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Moobe\")))));\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"column is-full has-border-top-width-1 is-paddingless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, renderStaticTab(), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, activeMoobeComment ? React.createElement(CommentInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }) : null, renderComments(), renderCommentFooter())), React.createElement(VisibilitySensor, {\n    onChange: onVisibleFooter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"has-min-height-100 has-margin-bottom-25 has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(LoadingBouncer, {\n    color: COMMENT_LOADING,\n    loading: getCommentLoading(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))));\n};\n\nconst MoobeCommentEmpty = () => React.createElement(\"div\", {\n  className: \"has-text-centered has-text-grey-light has-text-weight-semibold\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, React.createElement(FontAwesomeIcon, {\n  icon: faGrinTears,\n  size: \"2x\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n})), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, \"\\uB4F1\\uB85D\\uB41C \\uB313\\uAE00\\uC774 \\uC5C6\\uC5B4\\uC694...\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}, \"\\uCCAB\\uBC88\\uC9F8 \\uB313\\uAE00\\uC758 \\uC8FC\\uC778\\uACF5\\uC774 \\uB418\\uC5B4 \\uBCF4\\uC138\\uC694!\"));\n\nconst MoobeCommentFooter = () => React.createElement(\"div\", {\n  className: \"has-text-centered has-text-grey-light has-text-weight-semibold\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, React.createElement(FontAwesomeIcon, {\n  icon: faGrinStars,\n  size: \"2x\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n})), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, \"\\uB354\\uC774\\uC0C1 \\uB313\\uAE00\\uC774 \\uC5C6\\uC5B4\\uC694...\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, \"\\uC13C\\uC2A4 \\uC788\\uB294 \\uB313\\uAE00 \\uB2EC\\uC544\\uC8FC\\uC138\\uC694...\"));\n\nconst YoutubeCommentEmpty = ({\n  videoId\n}) => React.createElement(\"div\", {\n  className: \"has-text-centered has-text-grey-light has-text-weight-semibold\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}, React.createElement(FontAwesomeIcon, {\n  icon: faGrinTears,\n  size: \"2x\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n})), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}, \"\\uB313\\uAE00\\uC744 \\uBABB\\uAC00\\uC838 \\uC654\\uB098\\uBD10\\uC694... \\uBBF8\\uC548\\uD574\\uC694...\"), React.createElement(\"p\", {\n  className: \"has-padding-top-15\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  className: \"button is-primary\",\n  href: \"https://www.youtube.com/watch?v=\" + videoId,\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n}, \"Youtube\\uC5D0\\uC11C \\uBCF4\\uAE30\")));\n\nconst YoutubeCommentFooter = ({\n  videoId\n}) => React.createElement(\"div\", {\n  className: \"has-text-centered has-text-grey-light has-text-weight-semibold\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126\n  },\n  __self: this\n}, React.createElement(FontAwesomeIcon, {\n  icon: faGrinStars,\n  size: \"2x\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126\n  },\n  __self: this\n})), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n}, \"Youtube\\uC5D0\\uC11C \\uB354 \\uB9CE\\uC740 \\uB313\\uAE00\\uC744 \\uD655\\uC778\\uD558\\uC138\\uC694!\"), React.createElement(\"p\", {\n  className: \"has-padding-top-15\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  className: \"button is-primary\",\n  href: \"https://www.youtube.com/watch?v=\" + videoId,\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128\n  },\n  __self: this\n}, \"Youtube\\uC5D0\\uC11C \\uBCF4\\uAE30\")));\n\nexport default React.memo(CommentList);","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/comment/CommentList.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","VisibilitySensor","isEmpty","_isEmpty","isNil","_isNil","fetchMoobeComment","fetchYoutubeComment","resetComment","Comment","LoadingBouncer","CommentInput","COMMENT_LOADING","FontAwesomeIcon","faGrinStars","faGrinTears","CommentList","content","activeMoobeComment","setActiveMoobeComment","state","comment","moobeCommentList","moobeCommentPageNum","moobeCommentMaxPage","moobeCommentTotalCount","moobeCommentLoading","youtubeCommentList","youtubeCommentPageNum","youtubeCommentMaxPage","youtubeCommentTotalCount","youtubeCommentLoading","user","getComment","getCommentLoading","dispatch","initComment","id","fetchComment","page","reset","onVisibleFooter","visible","currentCommentPage","renderComments","map","uuid","renderCommentFooter","comments","isMaxPage","videoLinkId","renderStaticTab","MoobeCommentEmpty","MoobeCommentFooter","YoutubeCommentEmpty","videoId","YoutubeCommentFooter","memo"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAAQC,OAAO,IAAIC,QAAnB,EAA6BC,KAAK,IAAIC,MAAtC,QAAmD,QAAnD;AACA,SAAQC,iBAAR,EAA2BC,mBAA3B,EAAgDC,YAAhD,QAAmE,2BAAnE;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAAQC,cAAR,QAA6B,sCAA7B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAAQC,eAAR,QAA8B,sBAA9B;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,qCAAvC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA,oBACqBnB,QAAQ,CAAC,KAAD,CAD7B;AAAA;AAAA,QACxBoB,kBADwB;AAAA,QACJC,qBADI;;AAAA,uBAG0FnB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAHrG;AAAA,QAExBC,gBAFwB,gBAExBA,gBAFwB;AAAA,QAENC,mBAFM,gBAENA,mBAFM;AAAA,QAEeC,mBAFf,gBAEeA,mBAFf;AAAA,QAEoCC,sBAFpC,gBAEoCA,sBAFpC;AAAA,QAE6DC,mBAF7D,gBAE6DA,mBAF7D;AAAA,QAG3BC,kBAH2B,gBAG3BA,kBAH2B;AAAA,QAGPC,qBAHO,gBAGPA,qBAHO;AAAA,QAGgBC,qBAHhB,gBAGgBA,qBAHhB;AAAA,QAGuCC,wBAHvC,gBAGuCA,wBAHvC;AAAA,QAGiEC,qBAHjE,gBAGiEA,qBAHjE;;AAAA,wBAIhB/B,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACY,IAAhB,CAJK;AAAA,QAIxBA,IAJwB,iBAIxBA,IAJwB;;AAK/B,QAAMC,UAAU,GAAG,MAAMf,kBAAkB,GAAGI,gBAAH,GAAsBK,kBAAjE;;AACA,QAAMO,iBAAiB,GAAG,MAAMhB,kBAAkB,GAAGQ,mBAAH,GAAyBK,qBAA3E;;AACA,QAAMI,QAAQ,GAAGpC,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACM,QAAQ,CAACc,OAAD,CAAb,EAAwB;AACpBmB,MAAAA,WAAW;AACd;;AACD,WAAO,MAAM;AACTD,MAAAA,QAAQ,CAAC3B,YAAY,EAAb,CAAR;AACH,KAFD;AAGH,GAPQ,EAON,CAACS,OAAD,CAPM,CAAT;;AASA,QAAMmB,WAAW,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAAC7B,iBAAiB,CAACW,OAAO,CAACoB,EAAT,EAAa,CAAb,EAAgBb,mBAAhB,EAAqC,IAArC,CAAlB,CAAR;AACAW,IAAAA,QAAQ,CAAC5B,mBAAmB,CAACU,OAAO,CAACoB,EAAT,EAAa,CAAb,EAAgBR,qBAAhB,EAAuC,IAAvC,CAApB,CAAR;AACH,GAHD;;AAKA,QAAMS,YAAY,GAAG,CAACC,IAAI,GAAG,CAAR,EAAWC,KAAK,GAAG,KAAnB,KAA6B;AAC9C,QAAI,CAACnC,MAAM,CAACY,OAAD,CAAP,IAAoB,CAACiB,iBAAiB,EAA1C,EAA8C;AAC1CC,MAAAA,QAAQ,CAACjB,kBAAkB,GACrBZ,iBAAiB,CAACW,OAAO,CAACoB,EAAT,EAAaE,IAAb,EAAmBf,mBAAnB,CADI,GAErBjB,mBAAmB,CAACU,OAAO,CAACoB,EAAT,EAAaE,IAAb,EAAmBV,qBAAnB,CAFjB,CAAR;AAGH;AACJ,GAND;;AAQA,QAAMY,eAAe,GAAIC,OAAD,IAAa;AACjC,QAAIA,OAAJ,EAAa;AACT,UAAIC,kBAAkB,GAAGzB,kBAAkB,GAAGK,mBAAH,GAAyBK,qBAApE;AACAU,MAAAA,YAAY,CAACK,kBAAkB,GAAG,CAAtB,CAAZ;AACH;AACJ,GALD;;AAOA,QAAMC,cAAc,GAAG,MAAM;AACzB,WAAOX,UAAU,GAAGY,GAAb,CAAiBxB,OAAO,IAAI,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACyB,IAAtB;AAA4B,MAAA,OAAO,EAAEzB,OAArC;AAA8C,MAAA,IAAI,EAAEW,IAApD;AAA0D,MAAA,OAAO,EAAEd,kBAAnE;AAAuF,MAAA,SAAS,EAAE,CAACA,kBAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CAAP;AACH,GAFD;;AAIA,QAAM6B,mBAAmB,GAAG,MAAM;AAC9B,QAAIC,QAAQ,GAAGf,UAAU,EAAzB;AACA,QAAIgB,SAAS,GAAG/B,kBAAkB,GAC5BK,mBAAmB,IAAIC,mBADK,GAE5BI,qBAAqB,IAAIC,qBAF/B;;AAGA,QAAIK,iBAAiB,EAArB,EAAyB;AACvB,aAAO,IAAP;AACD,KAFD,MAEO,IAAI/B,QAAQ,CAAC6C,QAAD,CAAZ,EAAwB;AAC3B,aAAO9B,kBAAkB,GAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAA2B,oBAAC,mBAAD;AAAqB,QAAA,OAAO,EAAED,OAAO,CAACiC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApD;AACH,KAFM,MAEA,IAAID,SAAJ,EAAe;AAClB,aAAO/B,kBAAkB,GAAG,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAA4B,oBAAC,oBAAD;AAAsB,QAAA,OAAO,EAAED,OAAO,CAACiC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArD;AACH;AACJ,GAZD;;AAcA,QAAMC,eAAe,GAAG,MACpB;AAAK,IAAA,SAAS,EAAC,wFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACjC,kBAAD,GAAsB;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uIAAtB,GAAoG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADzG,EAEI;AAAQ,IAAA,SAAS,EAAC,+BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsDA,kBAAkB,GAAGO,sBAAH,GAA4BK,wBAApG,WAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAEZ,kBAAkB,GAAE,EAAF,GAAM,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoD;AAAG,IAAA,OAAO,EAAE,MAAMC,qBAAqB,CAAC,KAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhD,CAApD,CADJ,EAEI;AAAI,IAAA,SAAS,EAAED,kBAAkB,GAAE,WAAF,GAAgB,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqD;AAAG,IAAA,OAAO,EAAE,MAAMC,qBAAqB,CAAC,IAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA/C,CAArD,CAFJ,CAHJ,CADJ;;AAWA,SACI,0CACI;AAAK,IAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKgC,eAAe,EADpB,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjC,kBAAkB,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAsB,IAD7C,EAEK0B,cAAc,EAFnB,EAGKG,mBAAmB,EAHxB,CAFJ,CADJ,EASI,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEN,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,2DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE7B,eAAvB;AAAwC,IAAA,OAAO,EAAEsB,iBAAiB,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CATJ,CADJ;AAiBH,CApFD;;AAsFA,MAAMkB,iBAAiB,GAAG,MACtB;AAAK,EAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAG,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAErC,WAAvB;AAAoC,EAAA,IAAI,EAAE,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAH,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGAHJ,CADJ;;AAQA,MAAMsC,kBAAkB,GAAG,MACvB;AAAK,EAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAG,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAEvC,WAAvB;AAAoC,EAAA,IAAI,EAAE,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAH,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAHJ,CADJ;;AAQA,MAAMwC,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KACxB;AAAK,EAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAG,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAExC,WAAvB;AAAoC,EAAA,IAAI,EAAE,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAH,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGAFJ,EAGI;AAAG,EAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAkC;AAAG,EAAA,SAAS,EAAC,mBAAb;AAAiC,EAAA,IAAI,EAAE,qCAAqCwC,OAA5E;AAAqF,EAAA,MAAM,EAAC,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAlC,CAHJ,CADJ;;AASA,MAAMC,oBAAoB,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KACzB;AAAK,EAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAG,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAEzC,WAAvB;AAAoC,EAAA,IAAI,EAAE,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAH,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAFJ,EAGI;AAAG,EAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAkC;AAAG,EAAA,SAAS,EAAC,mBAAb;AAAiC,EAAA,IAAI,EAAE,qCAAqCyC,OAA5E;AAAqF,EAAA,MAAM,EAAC,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAlC,CAHJ,CADJ;;AAUA,eAAe3D,KAAK,CAAC6D,IAAN,CAAWzC,WAAX,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport {isEmpty as _isEmpty, isNil as _isNil} from \"lodash\";\nimport {fetchMoobeComment, fetchYoutubeComment, resetComment} from \"data/redux/action/comment\";\nimport Comment from \"components/common/comment/Comment\";\nimport {LoadingBouncer} from \"components/common/layout/PresentUtil\";\nimport CommentInput from \"components/common/comment/CommentInput\";\nimport {COMMENT_LOADING} from \"assets/styles/colors\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faGrinStars, faGrinTears} from \"@fortawesome/free-regular-svg-icons\";\n\nconst CommentList = ({content}) => {\n    const [activeMoobeComment, setActiveMoobeComment] = useState(false);\n    const {moobeCommentList, moobeCommentPageNum, moobeCommentMaxPage, moobeCommentTotalCount,  moobeCommentLoading,\n        youtubeCommentList, youtubeCommentPageNum, youtubeCommentMaxPage, youtubeCommentTotalCount, youtubeCommentLoading} = useSelector(state => state.comment);\n    const {user} = useSelector(state => state.user);\n    const getComment = () => activeMoobeComment ? moobeCommentList : youtubeCommentList;\n    const getCommentLoading = () => activeMoobeComment ? moobeCommentLoading : youtubeCommentLoading;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!_isEmpty(content)) {\n            initComment();\n        }\n        return () => {\n            dispatch(resetComment());\n        }\n    }, [content]);\n\n    const initComment = () => {\n        dispatch(fetchMoobeComment(content.id, 1, moobeCommentMaxPage, true));\n        dispatch(fetchYoutubeComment(content.id, 1, youtubeCommentMaxPage, true));\n    }\n\n    const fetchComment = (page = 1, reset = false) => {\n        if (!_isNil(content) && !getCommentLoading()) {\n            dispatch(activeMoobeComment\n                ? fetchMoobeComment(content.id, page, moobeCommentMaxPage)\n                : fetchYoutubeComment(content.id, page, youtubeCommentMaxPage))\n        }\n    };\n\n    const onVisibleFooter = (visible) => {\n        if (visible) {\n            let currentCommentPage = activeMoobeComment ? moobeCommentPageNum : youtubeCommentPageNum\n            fetchComment(currentCommentPage + 1)\n        }\n    }\n\n    const renderComments = () => {\n        return getComment().map(comment => <Comment key={comment.uuid} comment={comment} user={user} isMoobe={activeMoobeComment} isRawHtml={!activeMoobeComment} />)\n    }\n\n    const renderCommentFooter = () => {\n        let comments = getComment();\n        let isMaxPage = activeMoobeComment\n            ? moobeCommentPageNum >= moobeCommentMaxPage\n            : youtubeCommentPageNum >= youtubeCommentMaxPage\n        if (getCommentLoading()) {\n          return null;\n        } else if (_isEmpty(comments)) {\n            return activeMoobeComment ? <MoobeCommentEmpty /> : <YoutubeCommentEmpty videoId={content.videoLinkId}/>\n        } else if (isMaxPage) {\n            return activeMoobeComment ? <MoobeCommentFooter /> : <YoutubeCommentFooter videoId={content.videoLinkId}/>\n        }\n    }\n\n    const renderStaticTab = () => (\n        <div className=\"column tabs is-toggle is-fullwidth is-marginless is-top-paddingless white-space-normal\">\n            {!activeMoobeComment ? <p className=\"fa-0-87x has-text-grey \">유튜브 댓글 중 좋아요 기준 TOP 10 댓글만 제공합니다</p> : <p>&nbsp;</p>}\n            <strong className=\"is-size-5 has-padding-right-5\">댓글 {activeMoobeComment ? moobeCommentTotalCount : youtubeCommentTotalCount}개</strong>\n            <ul>\n                <li className={activeMoobeComment? \"\": \"is-active\"}><a onClick={() => setActiveMoobeComment(false)}><strong>Youtube</strong></a></li>\n                <li className={activeMoobeComment? \"is-active\" : \"\"}><a onClick={() => setActiveMoobeComment(true)}><strong>Moobe</strong></a></li>\n            </ul>\n        </div>\n    );\n\n    return (\n        <>\n            <div className=\"column is-full has-border-top-width-1 is-paddingless\">\n                {renderStaticTab()}\n                <div>\n                    {activeMoobeComment ? <CommentInput /> : null}\n                    {renderComments()}\n                    {renderCommentFooter()}\n                </div>\n            </div>\n            <VisibilitySensor onChange={onVisibleFooter}>\n                <div className=\"has-min-height-100 has-margin-bottom-25 has-text-centered\">\n                    <LoadingBouncer color={COMMENT_LOADING} loading={getCommentLoading()} />\n                </div>\n            </VisibilitySensor>\n        </>\n    )\n};\n\nconst MoobeCommentEmpty = () => (\n    <div className=\"has-text-centered has-text-grey-light has-text-weight-semibold\">\n        <p><FontAwesomeIcon icon={faGrinTears} size={\"2x\"}/></p>\n        <p>등록된 댓글이 없어요...</p>\n        <p>첫번째 댓글의 주인공이 되어 보세요!</p>\n    </div>\n)\n\nconst MoobeCommentFooter = () => (\n    <div className=\"has-text-centered has-text-grey-light has-text-weight-semibold\">\n        <p><FontAwesomeIcon icon={faGrinStars} size={\"2x\"}/></p>\n        <p>더이상 댓글이 없어요...</p>\n        <p>센스 있는 댓글 달아주세요...</p>\n    </div>\n)\n\nconst YoutubeCommentEmpty = ({videoId}) => (\n    <div className=\"has-text-centered has-text-grey-light has-text-weight-semibold\">\n        <p><FontAwesomeIcon icon={faGrinTears} size={\"2x\"}/></p>\n        <p>댓글을 못가져 왔나봐요... 미안해요...</p>\n        <p className=\"has-padding-top-15\"><a className=\"button is-primary\" href={\"https://www.youtube.com/watch?v=\" + videoId} target=\"_blank\">Youtube에서 보기</a></p>\n    </div>\n)\n\n\nconst YoutubeCommentFooter = ({videoId}) => (\n    <div className=\"has-text-centered has-text-grey-light has-text-weight-semibold\">\n        <p><FontAwesomeIcon icon={faGrinStars} size={\"2x\"}/></p>\n        <p>Youtube에서 더 많은 댓글을 확인하세요!</p>\n        <p className=\"has-padding-top-15\"><a className=\"button is-primary\" href={\"https://www.youtube.com/watch?v=\" + videoId} target=\"_blank\">Youtube에서 보기</a></p>\n    </div>\n)\n\n\n\nexport default React.memo(CommentList);"]},"metadata":{},"sourceType":"module"}