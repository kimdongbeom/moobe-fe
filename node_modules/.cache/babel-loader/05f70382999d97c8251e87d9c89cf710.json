{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/GeoLocationMarker.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport OverlayFontAwesomeIcon from \"components/common/icon/OverlayFontAwesomeIcon\";\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomOverlay from \"components/common/map/CustomOverlay\";\nimport { usePosition } from 'use-position';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadingGeoLocationFail, loadingGeoLocationFinished, setGeoLocationCenter, setMapCenterForce, setSearchOnBoundChange } from \"data/redux/action/map\";\nimport { MAP_GEOLOCATION_MARKER, MAP_GEOLOCATION_MARKER_BACKGROUND } from \"assets/styles/colors\";\n\nconst GeoLocationMarker = () => {\n  const _usePosition = usePosition({\n    enableHighAccuracy: false,\n    maximumAge: 3000\n  }),\n        latitude = _usePosition.latitude,\n        longitude = _usePosition.longitude,\n        timestamp = _usePosition.timestamp,\n        accuracy = _usePosition.accuracy,\n        error = _usePosition.error;\n\n  const _useSelector = useSelector(state => state.map),\n        geoLocationCenterLat = _useSelector.geoLocationCenterLat,\n        geoLocationCenterLng = _useSelector.geoLocationCenterLng;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        visible = _useState2[0],\n        setVisible = _useState2[1];\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (error) {\n      console.log(error);\n      alert(\"내 위치 확인을 위해 사용기기 및 브라우저의 설정에서 '위치정보' 사용을 허용해주시기 바랍니다.\");\n      dispatch(loadingGeoLocationFail());\n      dispatch(loadingGeoLocationFinished());\n      setVisible(false);\n    } else if (!visible && latitude && longitude) {\n      dispatch(loadingGeoLocationFinished());\n      setVisible(true);\n    }\n  }, [latitude, longitude, error]);\n  useEffect(() => {\n    if (visible) {\n      dispatch(setGeoLocationCenter({\n        lat: latitude,\n        lng: longitude\n      }));\n      dispatch(setSearchOnBoundChange(true));\n      dispatch(setMapCenterForce({\n        lat: latitude,\n        lng: longitude\n      }));\n    }\n  }, [visible]);\n  return React.createElement(CustomOverlay, {\n    lat: geoLocationCenterLat,\n    lng: geoLocationCenterLng,\n    visible: visible,\n    options: {\n      clickable: false,\n      yAnchor: 0.5,\n      xAnchor: 0.5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(OverlayFontAwesomeIcon, {\n    active: true,\n    reverse: true,\n    icon: faCircle,\n    transform: \"grow-8\",\n    className: \"fa-beat\",\n    color: MAP_GEOLOCATION_MARKER_BACKGROUND,\n    overlayIcon: faCircle,\n    overlayTransform: \"\",\n    overlayClassName: \"fa-beat fa-thick\",\n    overlayColor: MAP_GEOLOCATION_MARKER,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nexport default GeoLocationMarker;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/GeoLocationMarker.jsx"],"names":["React","useEffect","useState","OverlayFontAwesomeIcon","faCircle","CustomOverlay","usePosition","useDispatch","useSelector","loadingGeoLocationFail","loadingGeoLocationFinished","setGeoLocationCenter","setMapCenterForce","setSearchOnBoundChange","MAP_GEOLOCATION_MARKER","MAP_GEOLOCATION_MARKER_BACKGROUND","GeoLocationMarker","enableHighAccuracy","maximumAge","latitude","longitude","timestamp","accuracy","error","state","map","geoLocationCenterLat","geoLocationCenterLng","visible","setVisible","dispatch","console","log","alert","lat","lng","clickable","yAnchor","xAnchor"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport OverlayFontAwesomeIcon from \"components/common/icon/OverlayFontAwesomeIcon\";\nimport {faCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport CustomOverlay from \"components/common/map/CustomOverlay\";\nimport {usePosition} from 'use-position';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    loadingGeoLocationFail,\n    loadingGeoLocationFinished,\n    setGeoLocationCenter,\n    setMapCenterForce, setSearchOnBoundChange\n} from \"data/redux/action/map\";\nimport {MAP_GEOLOCATION_MARKER, MAP_GEOLOCATION_MARKER_BACKGROUND} from \"assets/styles/colors\";\n\nconst GeoLocationMarker = () => {\n    const { latitude, longitude, timestamp, accuracy, error } = usePosition( {enableHighAccuracy: false, maximumAge: 3000});\n    const {geoLocationCenterLat, geoLocationCenterLng} = useSelector(state => state.map);\n    const [visible, setVisible] = useState(false);\n    const dispatch = useDispatch()\n    useEffect(() => {\n        if (error) {\n            console.log(error);\n            alert(\"내 위치 확인을 위해 사용기기 및 브라우저의 설정에서 '위치정보' 사용을 허용해주시기 바랍니다.\")\n            dispatch(loadingGeoLocationFail());\n            dispatch(loadingGeoLocationFinished());\n            setVisible(false);\n        } else if (!visible && (latitude && longitude)) {\n            dispatch(loadingGeoLocationFinished());\n            setVisible(true);\n        }\n    }, [latitude, longitude, error])\n\n    useEffect(() => {\n        if (visible) {\n            dispatch(setGeoLocationCenter({lat: latitude, lng: longitude}));\n            dispatch(setSearchOnBoundChange(true))\n            dispatch(setMapCenterForce({lat: latitude, lng: longitude}));\n        }\n    }, [visible])\n\n    return (\n        <CustomOverlay lat={geoLocationCenterLat} lng={geoLocationCenterLng} visible={visible} options={{clickable: false, yAnchor: 0.5, xAnchor: 0.5}} >\n            <OverlayFontAwesomeIcon active={true} reverse={true} icon={faCircle} transform={\"grow-8\"} className={\"fa-beat\"} color={MAP_GEOLOCATION_MARKER_BACKGROUND}\n                                    overlayIcon={faCircle} overlayTransform={\"\"} overlayClassName={\"fa-beat fa-thick\"} overlayColor={MAP_GEOLOCATION_MARKER}/>\n        </CustomOverlay>\n    )\n};\n\nexport default GeoLocationMarker;"]},"metadata":{},"sourceType":"module"}