{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/ui/components.jsx\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport bulmaCalendar from 'bulma-calendar/dist/js/bulma-calendar.min';\nimport { MOMENT_DATE_FORMAT } from \"assets/styles/const\";\nconst defaultOptioins = {\n  type: \"date\",\n  dateFormat: MOMENT_DATE_FORMAT,\n  showClearButton: false,\n  showHeader: false,\n  showButtons: false,\n  color: \"info\",\n  displayMode: \"dialog\"\n};\nexport default function useBulmaCalendar(options = {}, isRange = false, startDate = new Date(), endDate = new Date()) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        calendar = _useState2[0],\n        setCalendar = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        value = _useState4[0],\n        setValue = _useState4[1];\n\n  const handleCalendarCallback = useCallback(node => {\n    if (node == null || calendar != null) {\n      return;\n    }\n\n    let initDateOptions = {\n      startDate,\n      endDate\n    };\n    const calendars = bulmaCalendar.attach(node, Object.assign({}, defaultOptioins, options, {\n      isRange\n    }, initDateOptions));\n\n    if (calendars.length == 0 || calendars.length != 1) {\n      console.log(\"not exist calendar to initialize or more than 1 elenements exist.\");\n    }\n\n    const initCalendar = calendars[0];\n    initCalendar.on('select', ({\n      data\n    }) => {\n      setCalendarValue(data);\n    });\n    setCalendar(initCalendar);\n    return () => {};\n  }, []);\n  useEffect(() => {\n    if (!calendar) {\n      return;\n    }\n\n    setCalendarValue(calendar); //set initial calendar value\n  }, [calendar]);\n\n  const setCalendarValue = calendar => {\n    if (!calendar) {\n      return;\n    }\n\n    if (calendar.isRange()) {\n      setValue({\n        startDate: calendar.startDate,\n        endDate: calendar.endDate\n      });\n    } else {\n      setValue(calendar.value());\n    }\n  };\n\n  return [React.createElement(\"div\", {\n    ref: handleCalendarCallback,\n    type: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), value, calendar];\n}","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/ui/components.jsx"],"names":["React","useCallback","useEffect","useState","bulmaCalendar","MOMENT_DATE_FORMAT","defaultOptioins","type","dateFormat","showClearButton","showHeader","showButtons","color","displayMode","useBulmaCalendar","options","isRange","startDate","Date","endDate","calendar","setCalendar","value","setValue","handleCalendarCallback","node","initDateOptions","calendars","attach","Object","assign","length","console","log","initCalendar","on","data","setCalendarValue"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,SAAQC,kBAAR,QAAiC,qBAAjC;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,IAAI,EAAE,MADc;AAEpBC,EAAAA,UAAU,EAAEH,kBAFQ;AAGpBI,EAAAA,eAAe,EAAE,KAHG;AAIpBC,EAAAA,UAAU,EAAE,KAJQ;AAKpBC,EAAAA,WAAW,EAAE,KALO;AAMpBC,EAAAA,KAAK,EAAE,MANa;AAOpBC,EAAAA,WAAW,EAAE;AAPO,CAAxB;AAUA,eAAe,SAASC,gBAAT,CAA0BC,OAAO,GAAE,EAAnC,EAAuCC,OAAO,GAAE,KAAhD,EAAuDC,SAAS,GAAE,IAAIC,IAAJ,EAAlE,EAA8EC,OAAO,GAAG,IAAID,IAAJ,EAAxF,EAAoG;AAAA,oBAC/Ef,QAAQ,CAAC,IAAD,CADuE;AAAA;AAAA,QACxGiB,QADwG;AAAA,QAC9FC,WAD8F;;AAAA,qBAErFlB,QAAQ,CAAC,IAAD,CAF6E;AAAA;AAAA,QAExGmB,KAFwG;AAAA,QAEjGC,QAFiG;;AAI/G,QAAMC,sBAAsB,GAAGvB,WAAW,CAACwB,IAAI,IAAI;AAC/C,QAAIA,IAAI,IAAI,IAAR,IAAgBL,QAAQ,IAAI,IAAhC,EAAsC;AAClC;AACH;;AACD,QAAIM,eAAe,GAAG;AAACT,MAAAA,SAAD;AAAYE,MAAAA;AAAZ,KAAtB;AACA,UAAMQ,SAAS,GAAGvB,aAAa,CAACwB,MAAd,CAAqBH,IAArB,EAA2BI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBxB,eAAlB,EAAmCS,OAAnC,EAA4C;AAACC,MAAAA;AAAD,KAA5C,EAAuDU,eAAvD,CAA3B,CAAlB;;AACA,QAAIC,SAAS,CAACI,MAAV,IAAoB,CAApB,IAAyBJ,SAAS,CAACI,MAAV,IAAoB,CAAjD,EAAoD;AAChDC,MAAAA,OAAO,CAACC,GAAR,CAAY,mEAAZ;AACH;;AACD,UAAMC,YAAY,GAAGP,SAAS,CAAC,CAAD,CAA9B;AACAO,IAAAA,YAAY,CAACC,EAAb,CAAgB,QAAhB,EAA0B,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAY;AAClCC,MAAAA,gBAAgB,CAACD,IAAD,CAAhB;AACH,KAFD;AAGAf,IAAAA,WAAW,CAACa,YAAD,CAAX;AACA,WAAO,MAAM,CAAE,CAAf;AACH,GAfyC,EAevC,EAfuC,CAA1C;AAiBAhC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACkB,QAAL,EAAe;AACX;AACH;;AACDiB,IAAAA,gBAAgB,CAACjB,QAAD,CAAhB,CAJY,CAIe;AAC9B,GALQ,EAKN,CAACA,QAAD,CALM,CAAT;;AAOA,QAAMiB,gBAAgB,GAAIjB,QAAD,IAAc;AACnC,QAAI,CAACA,QAAL,EAAe;AACX;AACH;;AAED,QAAIA,QAAQ,CAACJ,OAAT,EAAJ,EAAwB;AACpBO,MAAAA,QAAQ,CAAC;AAACN,QAAAA,SAAS,EAAEG,QAAQ,CAACH,SAArB;AAAgCE,QAAAA,OAAO,EAAEC,QAAQ,CAACD;AAAlD,OAAD,CAAR;AACH,KAFD,MAEO;AACHI,MAAAA,QAAQ,CAACH,QAAQ,CAACE,KAAT,EAAD,CAAR;AACH;AACJ,GAVD;;AAWA,SAAO,CAAE;AAAK,IAAA,GAAG,EAAEE,sBAAV;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,EAAqDF,KAArD,EAA4DF,QAA5D,CAAP;AACH","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport bulmaCalendar from 'bulma-calendar/dist/js/bulma-calendar.min';\nimport {MOMENT_DATE_FORMAT} from \"assets/styles/const\";\n\nconst defaultOptioins = {\n    type: \"date\",\n    dateFormat: MOMENT_DATE_FORMAT,\n    showClearButton: false,\n    showHeader: false,\n    showButtons: false,\n    color: \"info\",\n    displayMode: \"dialog\"\n}\n\nexport default function useBulmaCalendar(options= {}, isRange= false, startDate= new Date(), endDate = new Date()) {\n    const [calendar, setCalendar] = useState(null);\n    const [value, setValue] = useState(null);\n\n    const handleCalendarCallback = useCallback(node => {\n        if (node == null || calendar != null) {\n            return ;\n        }\n        let initDateOptions = {startDate, endDate}\n        const calendars = bulmaCalendar.attach(node, Object.assign({}, defaultOptioins, options, {isRange}, initDateOptions));\n        if (calendars.length == 0 || calendars.length != 1) {\n            console.log(\"not exist calendar to initialize or more than 1 elenements exist.\")\n        }\n        const initCalendar = calendars[0];\n        initCalendar.on('select', ({data}) => {\n            setCalendarValue(data);\n        })\n        setCalendar(initCalendar)\n        return () => {}\n    }, [])\n\n    useEffect(() => {\n        if (!calendar) {\n            return;\n        }\n        setCalendarValue(calendar) //set initial calendar value\n    }, [calendar])\n\n    const setCalendarValue = (calendar) => {\n        if (!calendar) {\n            return;\n        }\n\n        if (calendar.isRange()) {\n            setValue({startDate: calendar.startDate, endDate: calendar.endDate})\n        } else {\n            setValue(calendar.value())\n        }\n    }\n    return [(<div ref={handleCalendarCallback} type=\"date\" />), value, calendar];\n}\n\n\n"]},"metadata":{},"sourceType":"module"}