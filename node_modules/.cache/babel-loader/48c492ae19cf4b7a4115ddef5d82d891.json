{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/map/DesktopKakaoMap.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport MoobeKakaoMap from \"components/common/map/MoobeKakaoMap\";\nimport MarkerClusterer, { MarkerClustererCalculator, MarkerClustererStyles } from \"components/common/map/MarkerClusterer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MarkerImageSm from \"assets/images/marker_arrow_sm.svg\";\nimport MarkerImagePin from \"assets/images/marker_arrow_pin.svg\";\nimport MarkerImagePinFavorite from 'assets/images/marker_arrow_pin_favorite.png';\nimport CustomOverlay from \"components/common/map/CustomOverlay\";\nimport DetailContentOverlay from \"components/common/map/DetailContentOverlay\";\nimport { isEmpty as _isEmpty, isNil as _isNil } from 'lodash';\nimport { buildContentPath } from \"data/util\";\nimport { useHistory, useLocation } from \"react-router\";\nimport Marker from \"components/common/map/Marker\";\nimport { setShowOverlayContentDetail } from \"data/redux/action/contentDetail\";\nimport { setFocusedLocation } from \"data/redux/action/location\";\nimport MapLocationOverlay from \"components/common/map/MapLocationOverlay\";\nimport { forceCleanMarkerClusterer, loadingMapStarted, resetMapBounds, setSearchOnBoundChange } from \"data/redux/action/map\";\n\nconst DesktopKakaoMap = () => {\n  const _useSelector = useSelector(state => state.mapLocation),\n        mapLocationList = _useSelector.mapLocationList,\n        mapLocationLoading = _useSelector.mapLocationLoading,\n        focusedMapLocation = _useSelector.focusedMapLocation;\n\n  const _useSelector2 = useSelector(state => state.map),\n        map = _useSelector2.map,\n        mapLevel = _useSelector2.mapLevel,\n        mapLoading = _useSelector2.mapLoading;\n\n  const _useSelector3 = useSelector(state => state.content),\n        contentLoading = _useSelector3.contentLoading;\n\n  const _useSelector4 = useSelector(state => state.contentDetail),\n        contentDetail = _useSelector4.contentDetail,\n        showOverlayContentDetail = _useSelector4.showOverlayContentDetail;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const getLocationListWithoutDetailContent = () => {\n    if (!_isNil(contentDetail)) {\n      return mapLocationList.filter(location => location.id != contentDetail.id);\n    } else {\n      return mapLocationList;\n    }\n  };\n\n  const onClusterClick = cluster => {\n    if (map) {\n      const bounds = new kakao.maps.LatLngBounds();\n      cluster.getMarkers().map(m => {\n        bounds.extend(new kakao.maps.LatLng(m.mapLocation.latitude, m.mapLocation.longitude));\n      });\n      dispatch(loadingMapStarted());\n      dispatch(forceCleanMarkerClusterer());\n      dispatch(setSearchOnBoundChange(true));\n      map.setBounds(bounds, 0, 0, 0, 0);\n    }\n  };\n\n  const alwaysShowOverlay = !contentLoading && mapLocationList.length != 0 && !mapLocationLoading && !mapLoading && mapLevel < 7;\n  return React.createElement(React.Fragment, null, React.createElement(MoobeKakaoMap, {\n    className: \"column box is-paddingless kakao-map is-fullheight-with-navbar-fixed-height is-marginless\",\n    zoom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(MarkerClusterer, {\n    options: {\n      averageCenter: true,\n      minLevel: 7,\n      disableClickZoom: true,\n      minClusterSize: 3,\n      calculator: MarkerClustererCalculator,\n      styles: MarkerClustererStyles\n    },\n    onClusterClick: onClusterClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, getLocationListWithoutDetailContent().map(mapLocation => React.createElement(MarkerWithFocusedOverlay, {\n    key: mapLocation.id,\n    mapLocation: mapLocation,\n    visible: alwaysShowOverlay,\n    isFocusedMarker: focusedMapLocation && focusedMapLocation.id == mapLocation.id,\n    hasShadow: !alwaysShowOverlay || focusedMapLocation && focusedMapLocation.id == mapLocation.id,\n    hoverShadow: alwaysShowOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))), !_isEmpty(contentDetail) ? React.createElement(MarkerWithCustomOverlay, {\n    content: contentDetail,\n    liked: contentDetail && contentDetail.liked ? true : false,\n    visible: showOverlayContentDetail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }) : null));\n};\n\nconst MarkerWithCustomOverlay = ({\n  content,\n  liked,\n  visible\n}) => {\n  const dispatch = useDispatch();\n\n  const showOverlay = () => {\n    dispatch(setShowOverlayContentDetail(true));\n    dispatch(setFocusedLocation(null));\n  };\n\n  useEffect(() => {\n    dispatch(setFocusedLocation(null));\n  }, [content]);\n  return React.createElement(React.Fragment, null, React.createElement(Marker, {\n    options: {\n      lat: content.store.latitude,\n      lng: content.store.longitude,\n      content: content.store.name,\n      zIndex: 2,\n      imageUrl: liked ? MarkerImagePinFavorite : MarkerImagePin,\n      imageOption: {\n        url: liked ? MarkerImagePinFavorite : MarkerImagePin,\n        width: 46,\n        height: 61\n      }\n    },\n    onClick: marker => showOverlay(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(CustomOverlay, {\n    lat: content.store.latitude,\n    lng: content.store.longitude,\n    visible: visible,\n    options: {\n      offsetY: 72,\n      zIndex: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(DetailContentOverlay, {\n    content: content,\n    visible: visible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })));\n};\n\nconst MarkerWithFocusedOverlay = ({\n  mapLocation,\n  visible = false,\n  isFocusedMarker = false,\n  hasShadow = true,\n  hoverShadow = false\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isFocused = _useState2[0],\n        setIsFocused = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        zIndex = _useState4[0],\n        setZIndex = _useState4[1];\n\n  const _useSelector5 = useSelector(state => state.channel),\n        activeChannel = _useSelector5.activeChannel;\n\n  const _useSelector6 = useSelector(state => state.mapLocation),\n        focusedMapLocation = _useSelector6.focusedMapLocation;\n\n  let focused = !_isNil(focusedMapLocation) && mapLocation.id === focusedMapLocation.id || isFocused || isFocusedMarker;\n  const history = useHistory();\n  const location = useLocation();\n\n  const updateActiveContent = content => {\n    history.push({\n      pathname: buildContentPath(activeChannel, content),\n      search: window.location.search\n    });\n  }; //TODO seperate overlay div.\n\n\n  useEffect(() => {\n    if (isFocused || isFocusedMarker) {\n      setZIndex(3);\n    } else {\n      setZIndex(1);\n    }\n  }, [isFocused, isFocusedMarker]);\n  return React.createElement(React.Fragment, null, React.createElement(Marker, {\n    onMouseOver: e => setIsFocused(true),\n    onMouseOut: e => setIsFocused(false),\n    onClick: marker => updateActiveContent(mapLocation),\n    options: {\n      lat: mapLocation.latitude,\n      lng: mapLocation.longitude,\n      content: mapLocation.name,\n      imageUrl: MarkerImageSm,\n      imageOption: {\n        url: MarkerImageSm,\n        width: 30,\n        height: 32\n      },\n      zIndex: zIndex\n    },\n    attributes: {\n      mapLocation\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(CustomOverlay, {\n    lat: mapLocation.latitude,\n    lng: mapLocation.longitude,\n    visible: visible || focused,\n    options: {\n      offsetY: 38,\n      zIndex: zIndex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(MapLocationOverlay, {\n    mapLocation: mapLocation,\n    hasShadow: hasShadow,\n    hoverShadow: hoverShadow,\n    handleMouseEnter: e => setIsFocused(true),\n    handleMouseLeave: e => setIsFocused(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })));\n};\n\nexport default DesktopKakaoMap;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/map/DesktopKakaoMap.jsx"],"names":["React","useEffect","useState","MoobeKakaoMap","MarkerClusterer","MarkerClustererCalculator","MarkerClustererStyles","useDispatch","useSelector","MarkerImagePinFavorite","CustomOverlay","DetailContentOverlay","isEmpty","_isEmpty","isNil","_isNil","buildContentPath","useHistory","useLocation","Marker","setShowOverlayContentDetail","setFocusedLocation","MapLocationOverlay","forceCleanMarkerClusterer","loadingMapStarted","resetMapBounds","setSearchOnBoundChange","DesktopKakaoMap","state","mapLocation","mapLocationList","mapLocationLoading","focusedMapLocation","map","mapLevel","mapLoading","content","contentLoading","contentDetail","showOverlayContentDetail","dispatch","history","getLocationListWithoutDetailContent","filter","location","id","onClusterClick","cluster","bounds","kakao","maps","LatLngBounds","getMarkers","m","extend","LatLng","latitude","longitude","setBounds","alwaysShowOverlay","length","averageCenter","minLevel","disableClickZoom","minClusterSize","calculator","styles","liked","MarkerWithCustomOverlay","visible","showOverlay","lat","store","lng","name","zIndex","imageUrl","MarkerImagePin","imageOption","url","width","height","marker","offsetY","MarkerWithFocusedOverlay","isFocusedMarker","hasShadow","hoverShadow","isFocused","setIsFocused","setZIndex","channel","activeChannel","focused","updateActiveContent","push","pathname","search","window","e","MarkerImageSm"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport MoobeKakaoMap from \"components/common/map/MoobeKakaoMap\";\nimport MarkerClusterer, {MarkerClustererCalculator, MarkerClustererStyles} from \"components/common/map/MarkerClusterer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport MarkerImageSm from 'assets/images/marker_arrow_sm.svg';\nimport MarkerImagePin from 'assets/images/marker_arrow_pin.svg';\nimport MarkerImagePinFavorite from 'assets/images/marker_arrow_pin_favorite.png';\nimport CustomOverlay from \"components/common/map/CustomOverlay\";\nimport DetailContentOverlay from \"components/common/map/DetailContentOverlay\";\nimport {isEmpty as _isEmpty, isNil as _isNil} from 'lodash';\nimport {buildContentPath} from \"data/util\";\nimport {useHistory, useLocation} from \"react-router\";\nimport Marker from \"components/common/map/Marker\";\nimport {setShowOverlayContentDetail} from \"data/redux/action/contentDetail\";\nimport {setFocusedLocation} from \"data/redux/action/location\";\nimport MapLocationOverlay from \"components/common/map/MapLocationOverlay\";\nimport {\n    forceCleanMarkerClusterer,\n    loadingMapStarted,\n    resetMapBounds,\n    setSearchOnBoundChange\n} from \"data/redux/action/map\";\n\nconst DesktopKakaoMap = () => {\n    const {mapLocationList, mapLocationLoading, focusedMapLocation} = useSelector(state => state.mapLocation);\n    const {map, mapLevel, mapLoading} = useSelector(state => state.map);\n    const {contentLoading} = useSelector(state => state.content);\n    const {contentDetail, showOverlayContentDetail} = useSelector(state => state.contentDetail);\n    const dispatch = useDispatch()\n    const history = useHistory();\n\n    const getLocationListWithoutDetailContent = () => {\n        if (!_isNil(contentDetail)) {\n            return mapLocationList.filter(location => location.id != contentDetail.id)\n        } else {\n            return mapLocationList;\n        }\n    }\n\n    const onClusterClick = (cluster) => {\n        if(map) {\n            const bounds = new kakao.maps.LatLngBounds();\n            cluster.getMarkers().map(m => {\n                bounds.extend(new kakao.maps.LatLng(m.mapLocation.latitude, m.mapLocation.longitude))\n            })\n            dispatch(loadingMapStarted());\n            dispatch(forceCleanMarkerClusterer());\n            dispatch(setSearchOnBoundChange(true))\n            map.setBounds(bounds, 0, 0, 0, 0)\n        }\n    }\n\n    const alwaysShowOverlay = !contentLoading && mapLocationList.length != 0 && !mapLocationLoading && !mapLoading && mapLevel < 7\n\n    return (\n        <>\n            <MoobeKakaoMap className=\"column box is-paddingless kakao-map is-fullheight-with-navbar-fixed-height is-marginless\" zoom={true}>\n                <MarkerClusterer options={{\n                    averageCenter: true,\n                    minLevel: 7,\n                    disableClickZoom: true,\n                    minClusterSize: 3,\n                    calculator: MarkerClustererCalculator,\n                    styles: MarkerClustererStyles\n                }} onClusterClick={onClusterClick}>\n                    {getLocationListWithoutDetailContent().map(mapLocation =>\n                        <MarkerWithFocusedOverlay key={mapLocation.id}\n                                                  mapLocation={mapLocation}\n                                                  visible={alwaysShowOverlay}\n                                                  isFocusedMarker={focusedMapLocation && focusedMapLocation.id == mapLocation.id}\n                                                  hasShadow={!alwaysShowOverlay || (focusedMapLocation && focusedMapLocation.id == mapLocation.id)}\n                                                  hoverShadow={alwaysShowOverlay}\n                        />)}\n                </MarkerClusterer>\n                {!_isEmpty(contentDetail) ? <MarkerWithCustomOverlay content={contentDetail} liked={contentDetail && contentDetail.liked ? true : false}visible={showOverlayContentDetail}/> : null}\n            </MoobeKakaoMap>\n        </>\n    )\n};\n\nconst MarkerWithCustomOverlay = ({content, liked, visible}) => {\n    const dispatch = useDispatch();\n    const showOverlay = () => {\n        dispatch(setShowOverlayContentDetail(true))\n        dispatch(setFocusedLocation(null))\n    }\n\n    useEffect(() => {\n        dispatch(setFocusedLocation(null))\n    }, [content])\n\n    return (\n        <>\n            <Marker options={{lat: content.store.latitude, lng: content.store.longitude, content: content.store.name, zIndex: 2,\n                            imageUrl: liked ? MarkerImagePinFavorite : MarkerImagePin,\n                            imageOption: {url: liked ? MarkerImagePinFavorite : MarkerImagePin, width: 46, height: 61}}}\n                onClick={(marker) => showOverlay()}\n            />\n            <CustomOverlay lat={content.store.latitude} lng={content.store.longitude} visible={visible} options={{offsetY: 72, zIndex: 2}}>\n                <DetailContentOverlay content={content} visible={visible}/>\n            </CustomOverlay>\n        </>\n    )\n}\n\nconst MarkerWithFocusedOverlay = ({mapLocation, visible=false, isFocusedMarker = false, hasShadow=true, hoverShadow=false}) => {\n    const [isFocused, setIsFocused] = useState(false);\n    const [zIndex, setZIndex] = useState(1);\n    const {activeChannel} = useSelector(state => state.channel);\n    const {focusedMapLocation} = useSelector(state => state.mapLocation);\n    let focused = (!_isNil(focusedMapLocation) && mapLocation.id === focusedMapLocation.id) || isFocused || isFocusedMarker;\n    const history = useHistory();\n    const location = useLocation();\n    const updateActiveContent = (content) => {\n        history.push({\n            pathname: buildContentPath(activeChannel, content),\n            search: window.location.search\n        });\n    };\n    //TODO seperate overlay div.\n    useEffect(() => {\n        if (isFocused || isFocusedMarker) {\n            setZIndex(3)\n        } else {\n            setZIndex(1)\n        }\n    }, [isFocused, isFocusedMarker])\n\n    return (\n        <>\n            <Marker onMouseOver={(e) => setIsFocused(true)}\n                onMouseOut={(e) => setIsFocused(false)}\n                onClick={(marker) => updateActiveContent(mapLocation)}\n                options={{lat: mapLocation.latitude, lng: mapLocation.longitude, content: mapLocation.name,\n                    imageUrl: MarkerImageSm,\n                    imageOption: {url: MarkerImageSm, width: 30, height: 32},\n                    zIndex: zIndex}}\n                attributes={{mapLocation}}\n            />\n            <CustomOverlay lat={mapLocation.latitude} lng={mapLocation.longitude} visible={visible || focused} options={{offsetY: 38, zIndex: zIndex}}>\n                <MapLocationOverlay mapLocation={mapLocation}\n                                    hasShadow={hasShadow}\n                                    hoverShadow={hoverShadow}\n                                    handleMouseEnter={(e) => setIsFocused(true)}\n                                    handleMouseLeave={(e) => setIsFocused(false)} />\n            </CustomOverlay>\n        </>\n    )\n};\n\n\nexport default DesktopKakaoMap;"]},"metadata":{},"sourceType":"module"}