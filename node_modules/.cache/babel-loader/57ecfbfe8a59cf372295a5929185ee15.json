{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/comment/Comment.jsx\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen, faThumbsUp as fasTumbsUp, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState } from \"react\";\nimport { COMMENT_LIKED, COMMENT_UNLIKED } from \"assets/styles/colors\";\nimport { useDispatch } from \"react-redux\";\nimport { requireUser } from \"data/redux/action/user\";\nimport { fetchUpdateCommentLike } from \"data/redux/action/comment\";\nimport { CommentTextArea } from \"components/common/comment/CommentInput\";\n\nconst Comment = ({\n  comment,\n  isMoobe,\n  originLiked = false\n}) => {\n  const _useState = useState(originLiked),\n        _useState2 = _slicedToArray(_useState, 2),\n        liked = _useState2[0],\n        setLiked = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        edit = _useState4[0],\n        setEdit = _useState4[1];\n\n  const _useState5 = useState(comment.likeCount),\n        _useState6 = _slicedToArray(_useState5, 2),\n        likeCount = _useState6[0],\n        setLikeCount = _useState6[1];\n\n  const dispatch = useDispatch();\n\n  const updateLike = () => {\n    let originLike = liked;\n    let updateLike = !liked;\n    dispatch(requireUser(user => {\n      setLiked(updateLike);\n      dispatch(fetchUpdateCommentLike(user.email, comment.id, updateLike, () => {\n        setLiked(updateLike);\n        setLikeCount(likeCount + 1);\n      }, () => {\n        setLiked(originLike);\n      }));\n    }));\n  };\n\n  const renderComment = () => {\n    return edit ? React.createElement(CommentTextArea, {\n      className: \"textarea has-fixed-size overflow-hidden is-top-borderless is-left-borderless is-right-borderless is-shadowless is-radiusless has-padding-5\",\n      initialValue: comment.comment,\n      onCancel: () => setEdit(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, comment.comment.split('\\n').map((line, idx) => {\n      return React.createElement(\"span\", {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, line, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }));\n  };\n\n  const renderActionButton = () => {\n    return React.createElement(React.Fragment, null, React.createElement(FontAwesomeIcon, {\n      className: \"clickable is-marginless has-text-grey-light has-text-weight-semibold\",\n      icon: faTrashAlt,\n      size: \"2x\",\n      pull: \"right\",\n      transform: \"shrink-9\",\n      onClick: e => confirm(\"댓글을 삭제하시겠습니까?\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      className: \"clickable is-marginless has-text-weight-semibold \" + (edit ? \" has-text-info\" : \"has-text-grey-light \"),\n      icon: faPen,\n      size: \"2x\",\n      pull: \"right\",\n      transform: \"shrink-9\",\n      onClick: e => setEdit(!edit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"card is-shadowless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-content is-paddingless has-padding-15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"image is-48x48\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"is-rounded\",\n    src: \"https://bulma.io/images/placeholders/96x96.png\",\n    alt: \"Placeholder image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"media-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, comment.register, React.createElement(\"small\", {\n    className: \"has-padding-left-5 has-text-grey-light has-text-weight-semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, comment.registerDate), isMoobe ? renderActionButton() : null), renderComment(), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: fasTumbsUp,\n    className: isMoobe ? \"has-cursor-pointer\" : \"\",\n    color: liked ? COMMENT_LIKED : COMMENT_UNLIKED,\n    onClick: isMoobe ? updateLike : () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), \" \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, likeCount)))))));\n};\n\nexport default React.memo(Comment);","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/comment/Comment.jsx"],"names":["FontAwesomeIcon","faPen","faThumbsUp","fasTumbsUp","faTrashAlt","React","useState","COMMENT_LIKED","COMMENT_UNLIKED","useDispatch","requireUser","fetchUpdateCommentLike","CommentTextArea","Comment","comment","isMoobe","originLiked","liked","setLiked","edit","setEdit","likeCount","setLikeCount","dispatch","updateLike","originLike","user","email","id","renderComment","split","map","line","idx","renderActionButton","e","confirm","register","registerDate","memo"],"mappings":"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","sourcesContent":["import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPen, faThumbsUp as fasTumbsUp, faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport React, {useState} from \"react\";\nimport {COMMENT_LIKED, COMMENT_UNLIKED} from \"assets/styles/colors\";\nimport {useDispatch} from \"react-redux\";\nimport {requireUser} from \"data/redux/action/user\";\nimport {fetchUpdateCommentLike} from \"data/redux/action/comment\";\nimport {CommentTextArea} from \"components/common/comment/CommentInput\";\n\nconst Comment = ({comment, isMoobe, originLiked=false}) => {\n    const [liked, setLiked] = useState(originLiked);\n    const [edit, setEdit] = useState(false);\n    const [likeCount, setLikeCount] = useState(comment.likeCount);\n    const dispatch = useDispatch();\n\n    const updateLike = () => {\n        let originLike = liked;\n        let updateLike = !liked;\n        dispatch(requireUser((user) => {\n            setLiked(updateLike);\n            dispatch(fetchUpdateCommentLike(user.email, comment.id, updateLike, () => {\n                setLiked(updateLike);\n                setLikeCount(likeCount + 1);\n            }, () => {\n                setLiked(originLike);\n            }))\n        }))\n    }\n\n    const renderComment = () => {\n        return edit\n        ? <CommentTextArea className=\"textarea has-fixed-size overflow-hidden is-top-borderless is-left-borderless is-right-borderless is-shadowless is-radiusless has-padding-5\"\n                           initialValue={comment.comment}\n                           onCancel={() => setEdit(false)}/>\n        : <div>{comment.comment.split('\\n').map( (line, idx) => {\n                return (<span key={idx}>{line}<br/></span>)\n            })}</div>\n    }\n\n    const renderActionButton = () => {\n        return (\n            <>\n                <FontAwesomeIcon className=\"clickable is-marginless has-text-grey-light has-text-weight-semibold\"\n                                 icon={faTrashAlt}\n                                 size={\"2x\"}\n                                 pull={\"right\"}\n                                 transform={\"shrink-9\"}\n                                 onClick={(e) => confirm(\"댓글을 삭제하시겠습니까?\")}/>\n                <FontAwesomeIcon className={\"clickable is-marginless has-text-weight-semibold \" + (edit ? \" has-text-info\" : \"has-text-grey-light \")}\n                                 icon={faPen}\n                                 size={\"2x\"}\n                                 pull={\"right\"}\n                                 transform={\"shrink-9\"}\n                                 onClick={(e) => setEdit(!edit)} />\n            </>\n        )\n    }\n    return (\n        <>\n            {/*TODO comment가 길때 더보기 구현*/}\n            <div className=\"card is-shadowless\">\n                <div className=\"card-content is-paddingless has-padding-15\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <figure className=\"image is-48x48\">\n                                <img className=\"is-rounded\" src=\"https://bulma.io/images/placeholders/96x96.png\" alt=\"Placeholder image\" />\n                            </figure>\n                        </div>\n                        <div className=\"media-content\">\n                            <div>\n                                {comment.register}\n                                <small className=\"has-padding-left-5 has-text-grey-light has-text-weight-semibold\">{comment.registerDate}</small>\n                                {isMoobe ? renderActionButton() : null}\n                            </div>\n                            {renderComment()}\n                            <div>\n                                    <FontAwesomeIcon icon={fasTumbsUp}\n                                                     className={isMoobe ? \"has-cursor-pointer\" : \"\"}\n                                                     color={liked ? COMMENT_LIKED : COMMENT_UNLIKED}\n                                                     onClick={isMoobe ? updateLike : () => {}}\n                                    /> <small>{likeCount}</small>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default React.memo(Comment);"]},"metadata":{},"sourceType":"module"}