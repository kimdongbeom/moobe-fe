{"ast":null,"code":"import _objectSpread from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { MapContext } from \"components/common/map/KakaoMap\";\nimport { MarkerClustererContext } from \"components/common/map/MarkerClusterer\";\nimport { delayObservable, updateObject } from \"data/util\";\n\nconst Marker = props => {\n  const _useContext = useContext(MapContext),\n        kakao = _useContext.kakao,\n        map = _useContext.map;\n\n  const _useContext2 = useContext(MarkerClustererContext),\n        clusterer = _useContext2.clusterer;\n\n  const _useState = useState({\n    marker: null,\n    kakao,\n    map,\n    clusterer\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const setMarkerImage = (marker, imageUrl, imageOption) => {\n    const width = imageOption.width,\n          height = imageOption.height;\n    const markerImage = new kakao.maps.MarkerImage(imageUrl, new kakao.maps.Size(width, height));\n    marker.setImage(markerImage);\n  };\n\n  useEffect(() => {\n    const onClick = props.onClick,\n          onMouseOver = props.onMouseOver,\n          onMouseOut = props.onMouseOut,\n          options = props.options,\n          delay = props.delay,\n          attributes = props.attributes;\n    const lat = options.lat,\n          lng = options.lng,\n          content = options.content,\n          imageUrl = options.imageUrl,\n          imageOption = options.imageOption,\n          zIndex = options.zIndex;\n    const marker = new kakao.maps.Marker({\n      position: new kakao.maps.LatLng(lat, lng),\n      zIndex: zIndex ? zIndex : 1\n    });\n\n    if (attributes) {\n      for (let key in attributes) {\n        marker[key] = attributes[key];\n      }\n    }\n\n    if (imageUrl && imageOption) setMarkerImage(marker, imageUrl, imageOption);\n\n    const mouseOver = () => {\n      if (onMouseOver) onMouseOver(marker);\n    };\n\n    const mouseOut = () => {\n      if (onMouseOut) onMouseOut(marker);\n    };\n\n    const click = () => {\n      if (onClick) onClick(marker);\n    };\n\n    kakao.maps.event.addListener(marker, \"mouseover\", mouseOver);\n    kakao.maps.event.addListener(marker, \"mouseout\", mouseOut);\n    kakao.maps.event.addListener(marker, \"click\", click);\n    const subscription = delayObservable(delay ? delay : 50).subscribe({\n      next(x) {},\n\n      error(err) {},\n\n      complete() {\n        clusterer ? clusterer.addMarker(marker) : marker.setMap(map);\n      }\n\n    });\n    setState(_objectSpread({}, state, {\n      marker\n    }));\n    return () => {\n      subscription.unsubscribe();\n      kakao.maps.event.removeListener(marker, \"mouseover\", mouseOver);\n      kakao.maps.event.removeListener(marker, \"mouseout\", mouseOut);\n      kakao.maps.event.removeListener(marker, \"click\", click);\n\n      if (clusterer && clusterer._markers.length) {\n        clusterer.removeMarker(marker);\n      } else {\n        marker.setMap(null);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const zIndex = props.options.zIndex;\n    const marker = state.marker;\n    if (marker === null) return;\n\n    if (zIndex) {\n      marker.setZIndex(zIndex);\n    }\n  }, [props.options.zIndex]);\n  useEffect(() => {\n    const _props$options = props.options,\n          imageUrl = _props$options.imageUrl,\n          imageOption = _props$options.imageOption;\n    const marker = state.marker;\n    if (marker === null) return;\n    if (imageUrl && imageOption) setMarkerImage(marker, imageUrl, imageOption);\n  }, [props.options.imageUrl]); //\n  // useEffect(() => {\n  //     const { lat, lng } = props.options;\n  //     const { marker } = state;\n  //     if (marker === null) return;\n  //     const position = new kakao.maps.LatLng(lat, lng);\n  //     marker.setPosition(position);\n  // }, [props.options.lat, props.options.lng]);\n  //\n  // useEffect(() => {\n  //     const { image } = props.options;\n  //     const { marker } = state;\n  //     if (marker === null || image === null) return;\n  //     if (image) setMarkerImage(marker, image);\n  // }, [props.options.image]);\n\n  return null;\n};\n\nexport default Marker;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/Marker.jsx"],"names":["React","useContext","useEffect","useState","MapContext","MarkerClustererContext","delayObservable","updateObject","Marker","props","kakao","map","clusterer","marker","state","setState","setMarkerImage","imageUrl","imageOption","width","height","markerImage","maps","MarkerImage","Size","setImage","onClick","onMouseOver","onMouseOut","options","delay","attributes","lat","lng","content","zIndex","position","LatLng","key","mouseOver","mouseOut","click","event","addListener","subscription","subscribe","next","x","error","err","complete","addMarker","setMap","unsubscribe","removeListener","_markers","length","removeMarker","setZIndex"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport {MapContext} from \"components/common/map/KakaoMap\";\nimport {MarkerClustererContext} from \"components/common/map/MarkerClusterer\";\nimport {delayObservable, updateObject} from \"data/util\";\n\nconst Marker = props => {\n    const { kakao, map } = useContext(MapContext);\n    const { clusterer } = useContext(MarkerClustererContext);\n    const [state, setState] = useState({\n        marker: null,\n        kakao,\n        map,\n        clusterer\n    });\n\n    const setMarkerImage = (marker, imageUrl, imageOption) => {\n        const { width, height } = imageOption;\n        const markerImage = new kakao.maps.MarkerImage(\n            imageUrl,\n            new kakao.maps.Size(width, height)\n        );\n        marker.setImage(markerImage);\n    };\n\n    useEffect(() => {\n        const { onClick, onMouseOver, onMouseOut, options, delay, attributes } = props;\n        const { lat, lng, content, imageUrl, imageOption, zIndex } = options;\n        const marker = new kakao.maps.Marker({\n            position: new kakao.maps.LatLng(lat, lng),\n            zIndex: zIndex ? zIndex : 1\n        });\n\n        if (attributes) {\n            for (let key in attributes) {\n                marker[key] = attributes[key]\n            }\n        }\n\n        if (imageUrl && imageOption) setMarkerImage(marker, imageUrl, imageOption);\n        const mouseOver = () => { if (onMouseOver) onMouseOver(marker);};\n        const mouseOut = () => { if (onMouseOut) onMouseOut(marker);};\n        const click = () => { if (onClick) onClick(marker);};\n        kakao.maps.event.addListener(marker, \"mouseover\", mouseOver);\n        kakao.maps.event.addListener(marker, \"mouseout\", mouseOut);\n        kakao.maps.event.addListener(marker, \"click\", click);\n\n        const subscription = delayObservable(delay ? delay : 50).subscribe({\n            next(x) {},\n            error(err) {},\n            complete() {\n                clusterer ? clusterer.addMarker(marker) : marker.setMap(map);\n            }\n        });\n\n        setState({ ...state, marker });\n        return () => {\n            subscription.unsubscribe();\n            kakao.maps.event.removeListener(marker, \"mouseover\", mouseOver);\n            kakao.maps.event.removeListener(marker, \"mouseout\", mouseOut);\n            kakao.maps.event.removeListener(marker, \"click\", click);\n            if (clusterer && clusterer._markers.length) {\n                clusterer.removeMarker(marker)\n            } else {\n                marker.setMap(null);\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        const { zIndex } = props.options\n        const { marker } = state;\n        if (marker === null) return;\n        if (zIndex) {\n            marker.setZIndex(zIndex)\n        }\n    }, [props.options.zIndex])\n\n    useEffect(() => {\n        const { imageUrl, imageOption } = props.options;\n        const { marker } = state;\n        if (marker === null) return;\n        if (imageUrl && imageOption) setMarkerImage(marker, imageUrl, imageOption);\n    }, [props.options.imageUrl])\n    //\n    // useEffect(() => {\n    //     const { lat, lng } = props.options;\n    //     const { marker } = state;\n    //     if (marker === null) return;\n    //     const position = new kakao.maps.LatLng(lat, lng);\n    //     marker.setPosition(position);\n    // }, [props.options.lat, props.options.lng]);\n    //\n    // useEffect(() => {\n    //     const { image } = props.options;\n    //     const { marker } = state;\n    //     if (marker === null || image === null) return;\n    //     if (image) setMarkerImage(marker, image);\n    // }, [props.options.image]);\n\n    return null;\n};\n\nexport default Marker;"]},"metadata":{},"sourceType":"module"}