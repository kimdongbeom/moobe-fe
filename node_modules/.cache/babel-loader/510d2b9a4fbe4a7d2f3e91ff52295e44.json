{"ast":null,"code":"var _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/mobile/store/StoreList.jsx\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LoadingSpinner, LoadingVideo } from \"components/common/layout/PresentUtil\";\nimport Store from \"components/mobile/store/Store\";\nimport { fetchContentList, setActiveContent, setPageNum, showOverlayContent } from \"data/redux/action/content\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport SearchInfoHeader from \"components/common/search/SearchInfoHeader\";\nimport { buildMoobeMapBounds, buildQuery } from \"data/util\";\nimport queryString from \"query-string\";\nconst LoadingList = React.createElement(React.Fragment, null, React.createElement(LoadingVideo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), React.createElement(LoadingVideo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(LoadingVideo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), React.createElement(LoadingVideo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), React.createElement(LoadingVideo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), React.createElement(LoadingVideo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}));\nexport const StoreList = () => {\n  const _useSelector = useSelector(state => state.content),\n        contentList = _useSelector.contentList,\n        contentLoading = _useSelector.contentLoading,\n        activeContent = _useSelector.activeContent,\n        pageNum = _useSelector.pageNum,\n        pageSize = _useSelector.pageSize,\n        maxPage = _useSelector.maxPage,\n        totalCount = _useSelector.totalCount;\n\n  const _useParams = useParams(),\n        channelId = _useParams.channelId,\n        contentId = _useParams.contentId;\n\n  const _useSelector2 = useSelector(state => state.channel),\n        channelLoading = _useSelector2.channelLoading;\n\n  const _queryString$parse = queryString.parse(useLocation().search),\n        swLat = _queryString$parse.swLat,\n        swLng = _queryString$parse.swLng,\n        neLat = _queryString$parse.neLat,\n        neLng = _queryString$parse.neLng;\n\n  const mapBounds = buildMoobeMapBounds(swLat, swLng, neLat, neLng);\n  const dispatch = useDispatch();\n\n  const renderContentList = () => {\n    return contentList.map(content => React.createElement(Store, {\n      key: content.id,\n      content: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  };\n\n  const isLoadMore = () => !(contentList.length === totalCount);\n\n  const loadMore = () => {\n    dispatch(fetchContentList(channelId, contentId, mapBounds, pageNum + 1, true));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SearchInfoHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), renderContentList(), channelLoading || contentLoading || contentList.length === 0 ? React.createElement(LoadingSpinner, {\n    color: \"#000\",\n    loading: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: isLoadMore() ? \"box has-text-centered\" : \"is-hidden\",\n    onClick: loadMore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"\\uB354\\uBCF4\\uAE30\")));\n};\nexport default StoreList;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/mobile/store/StoreList.jsx"],"names":["React","useState","useDispatch","useSelector","LoadingSpinner","LoadingVideo","Store","fetchContentList","setActiveContent","setPageNum","showOverlayContent","useHistory","useLocation","useParams","SearchInfoHeader","buildMoobeMapBounds","buildQuery","queryString","LoadingList","StoreList","state","content","contentList","contentLoading","activeContent","pageNum","pageSize","maxPage","totalCount","channelId","contentId","channel","channelLoading","parse","search","swLat","swLng","neLat","neLng","mapBounds","dispatch","renderContentList","map","id","isLoadMore","length","loadMore"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {LoadingSpinner, LoadingVideo} from \"components/common/layout/PresentUtil\";\nimport Store from \"components/mobile/store/Store\";\nimport {\n    fetchContentList,\n    setActiveContent,\n    setPageNum,\n    showOverlayContent\n} from \"data/redux/action/content\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport SearchInfoHeader from \"components/common/search/SearchInfoHeader\";\nimport {buildMoobeMapBounds, buildQuery} from \"data/util\";\nimport queryString from \"query-string\";\n\n\nconst LoadingList = <>\n        <LoadingVideo />\n        <LoadingVideo />\n        <LoadingVideo />\n        <LoadingVideo />\n        <LoadingVideo />\n        <LoadingVideo />\n    </>;\n\n\nexport const StoreList = () => {\n    const {contentList, contentLoading, activeContent, pageNum, pageSize, maxPage, totalCount} = useSelector(state => state.content);\n    const {channelId, contentId} = useParams();\n    const {channelLoading} = useSelector(state => state.channel);\n    const {swLat, swLng, neLat, neLng} = queryString.parse(useLocation().search);\n    const mapBounds = buildMoobeMapBounds(swLat, swLng, neLat, neLng);\n    const dispatch = useDispatch();\n    const renderContentList = () => {\n        return contentList.map(content =>\n            <Store key={content.id} content={content} />)\n    };\n    const isLoadMore = () => !(contentList.length === totalCount);\n    const loadMore = () => {\n        dispatch(fetchContentList(channelId, contentId, mapBounds, pageNum + 1, true));\n    };\n    return (\n        <>\n            <SearchInfoHeader />\n            {renderContentList()}\n            {channelLoading || contentLoading || contentList.length === 0 ? <LoadingSpinner color={\"#000\"} loading={true} /> : <div className={isLoadMore() ? \"box has-text-centered\" : \"is-hidden\"} onClick={loadMore}><strong>더보기</strong></div>}\n        </>\n    )\n};\n\nexport default StoreList;"]},"metadata":{},"sourceType":"module"}