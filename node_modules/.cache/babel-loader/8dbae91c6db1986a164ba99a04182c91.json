{"ast":null,"code":"import { chain as _chain, filter as _filter, map as _map } from \"lodash\";\nimport MapLocation from \"data/redux/model/MapLocation\";\n\nclass MapClusterLocation {\n  // [{\n  //     \"id\": 54,\n  //     \"tag\": \"#소고기 #쌀국수 #3천원\",\n  //     \"name\": \"월면가\",\n  //     \"latitude\": 36.6616172852146,\n  //     \"longitude\": 126.680217670404\n  // }]\n  constructor(data = {}) {\n    if (data == null) data = {};\n    Object.assign(this, data);\n  }\n\n  get locationIdList() {\n    return _map(this.markerList, marker => marker.id);\n  }\n\n  findLocation(id) {\n    return _chain(this.markerList).filter(marker => marker.id == id).map(marker => new MapLocation(marker)).get(0).value();\n  }\n\n  get locationList() {\n    return _map(this.markerList, marker => new MapLocation(marker));\n  }\n\n}\n\nexport default MapClusterLocation;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/model/MapClusterLocation.jsx"],"names":["chain","_chain","filter","_filter","map","_map","MapLocation","MapClusterLocation","constructor","data","Object","assign","locationIdList","markerList","marker","id","findLocation","get","value","locationList"],"mappings":"AAAA,SAAQA,KAAK,IAAIC,MAAjB,EAAyBC,MAAM,IAAIC,OAAnC,EAA4CC,GAAG,IAAIC,IAAnD,QAA8D,QAA9D;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,MAAMC,kBAAN,CAAyB;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AAKAC,EAAAA,WAAW,CAACC,IAAI,GAAC,EAAN,EAAU;AACjB,QAAIA,IAAI,IAAI,IAAZ,EAAkBA,IAAI,GAAG,EAAP;AAClBC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;AACH;;AAED,MAAIG,cAAJ,GAAqB;AACjB,WAAOP,IAAI,CAAC,KAAKQ,UAAN,EAAkBC,MAAM,IAAIA,MAAM,CAACC,EAAnC,CAAX;AACH;;AAEDC,EAAAA,YAAY,CAACD,EAAD,EAAK;AACb,WAAOd,MAAM,CAAC,KAAKY,UAAN,CAAN,CACFX,MADE,CACKY,MAAM,IAAIA,MAAM,CAACC,EAAP,IAAaA,EAD5B,EAEFX,GAFE,CAEEU,MAAM,IAAI,IAAIR,WAAJ,CAAgBQ,MAAhB,CAFZ,EAGFG,GAHE,CAGE,CAHF,EAIFC,KAJE,EAAP;AAOH;;AAED,MAAIC,YAAJ,GAAmB;AACf,WAAOd,IAAI,CAAC,KAAKQ,UAAN,EAAkBC,MAAM,IAAI,IAAIR,WAAJ,CAAgBQ,MAAhB,CAA5B,CAAX;AACH;;AAlCoB;;AAqCzB,eAAeP,kBAAf","sourcesContent":["import {chain as _chain, filter as _filter, map as _map} from \"lodash\";\nimport MapLocation from \"data/redux/model/MapLocation\";\n\nclass MapClusterLocation {\n    markerList;\n    // [{\n    //     \"id\": 54,\n    //     \"tag\": \"#소고기 #쌀국수 #3천원\",\n    //     \"name\": \"월면가\",\n    //     \"latitude\": 36.6616172852146,\n    //     \"longitude\": 126.680217670404\n    // }]\n    markerListSize;\n    centerLatitude;\n    centerLongitude;\n\n    constructor(data={}) {\n        if (data == null) data = {};\n        Object.assign(this, data);\n    }\n\n    get locationIdList() {\n        return _map(this.markerList, marker => marker.id);\n    }\n\n    findLocation(id) {\n        return _chain(this.markerList)\n            .filter(marker => marker.id == id)\n            .map(marker => new MapLocation(marker))\n            .get(0)\n            .value()\n\n\n    }\n\n    get locationList() {\n        return _map(this.markerList, marker => new MapLocation(marker));\n    }\n}\n\nexport default MapClusterLocation;"]},"metadata":{},"sourceType":"module"}