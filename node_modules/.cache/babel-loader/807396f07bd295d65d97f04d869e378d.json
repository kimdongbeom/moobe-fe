{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/comment/CommentInput.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requireUser } from \"data/redux/action/user\";\nimport { addMoobeCommentFirst, fetchInsertMoobeComment } from \"data/redux/action/comment\";\nimport { nullFunction } from \"data/util\";\nimport { isNil as _isNil } from 'lodash';\nimport { DEFAULT_IMAGE } from \"assets/styles/const\";\n\nconst CommentInput = () => {\n  const _useSelector = useSelector(state => state.user),\n        user = _useSelector.user;\n\n  const _useSelector2 = useSelector(state => state.contentDetail),\n        contentDetail = _useSelector2.contentDetail;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        initialValue = _useState2[0],\n        setInitialValue = _useState2[1];\n\n  const dispatch = useDispatch();\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        forceUpdated = _React$useState2[0],\n        updateState = _React$useState2[1];\n\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  const onFocusComment = e => {\n    let target = e.target;\n    dispatch(requireUser(() => {\n      target.focus();\n    }, () => {\n      target.blur();\n    }, () => {\n      target.blur();\n    }));\n  };\n\n  const onSubmitComment = value => {\n    dispatch(requireUser(user => {\n      dispatch(fetchInsertMoobeComment(user.email, contentDetail.id, value, inserted => {\n        inserted.nickname = user.nickname;\n        inserted.imageUrl = user.imageUrl;\n        dispatch(addMoobeCommentFirst(inserted));\n        setInitialValue(\"\");\n      }));\n    }, () => {\n      alert(\"로그인 정보가 없습니다. 다시 로그인 해주세요.\");\n      window.location.reload();\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card is-shadowless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-content is-paddingless has-padding-15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"image is-48x48\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"is-rounded\",\n    src: !_isNil(user) ? user.imageUrl : DEFAULT_IMAGE,\n    alt: \"Placeholder image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"media-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(CommentTextArea, {\n    className: \"textarea has-fixed-size overflow-hidden is-top-borderless is-left-borderless is-right-borderless is-shadowless is-radiusless has-padding-5\",\n    key: forceUpdated,\n    inputValue: initialValue,\n    onCancel: () => setInitialValue(\"\"),\n    onChange: e => setInitialValue(e.target.value),\n    onFocus: onFocusComment,\n    onSubmit: onSubmitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))));\n};\n\nexport const CommentTextArea = ({\n  inputValue = \"\",\n  onChange = nullFunction,\n  onFocus = nullFunction,\n  onSubmit = nullFunction,\n  onCancel = nullFunction,\n  className = \"\"\n}) => {\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        textAreaRow = _useState4[0],\n        setTextAreaRow = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        inputValueNewLine = _useState6[0],\n        setInputValueNewLine = _useState6[1]; //input value의 new line만큼 textarea의 row를 조절\n\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        textAreaRowHeight = _useState8[0],\n        setTextAreaRowHeight = _useState8[1]; // textarea의 초기 height를 기록.\n\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        textAreaOverflowRow = _useState10[0],\n        setTextAreaOverflowRow = _useState10[1]; //textarea의 scroll이 발생할때 row를 조절\n\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        showButton = _useState12[0],\n        setShowButton = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        disableButton = _useState14[0],\n        setDisableButton = _useState14[1]; //input value가 비어있을때 댓글 submit을 할 수 없도록 disable\n\n\n  const textAreaRef = useRef(null);\n  useEffect(() => {\n    // textarea가 로드될때 초기 clientheight를 저장\n    if (textAreaRef.current) {\n      setTextAreaRowHeight(textAreaRef.current.clientHeight);\n    }\n  }, [textAreaRef]);\n  useEffect(() => {\n    //input value가 변경되거나 textAreaRowHeight가 변경될 때 row를 변경.\n    if (inputValue === \"\") {\n      setDisableButton(true);\n      setShowButton(false);\n      setTextAreaOverflowRow(0);\n    } else {\n      setDisableButton(false);\n      setShowButton(true);\n    }\n\n    if (textAreaRef && textAreaRowHeight && textAreaRef.current.scrollHeight > textAreaRef.current.clientHeight) {\n      setTextAreaOverflowRow(textAreaOverflowRow + Math.ceil((textAreaRef.current.scrollHeight - textAreaRef.current.clientHeight) / textAreaRowHeight));\n    }\n\n    setInputValueNewLine(inputValue.split(\"\\n\").length);\n  }, [inputValue, textAreaRowHeight]);\n  useEffect(() => {\n    //inputValueNewLine와 textAreaOverflowRow가 변경 될 때마다 실제로 textarea의 row를 변경\n    setTextAreaRow(inputValueNewLine + textAreaOverflowRow);\n  }, [inputValueNewLine, textAreaOverflowRow]);\n\n  const cancelComment = () => {\n    setShowButton(false);\n    onCancel();\n  };\n\n  const submitComment = e => {\n    onSubmit(inputValue);\n  };\n\n  const CommentActionButton = () => React.createElement(\"div\", {\n    className: \"field is-grouped is-pulled-right has-padding-top-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button is-light\",\n    onClick: cancelComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"\\uCDE8\\uC18C\")), React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button is-link\",\n    disabled: disableButton,\n    onClick: submitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"\\uB313\\uAE00\")));\n\n  return React.createElement(React.Fragment, null, React.createElement(\"textarea\", {\n    className: className,\n    ref: textAreaRef,\n    value: inputValue,\n    rows: textAreaRow,\n    onFocus: onFocus,\n    onChange: onChange,\n    wrap: \"virtual\",\n    placeholder: \"\\uACF5\\uAC1C \\uB313\\uAE00 \\uCD94\\uAC00...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), showButton ? React.createElement(CommentActionButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }) : null);\n};\nexport default CommentInput;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/comment/CommentInput.jsx"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","requireUser","addMoobeCommentFirst","fetchInsertMoobeComment","nullFunction","isNil","_isNil","DEFAULT_IMAGE","CommentInput","state","user","contentDetail","initialValue","setInitialValue","dispatch","forceUpdated","updateState","forceUpdate","useCallback","onFocusComment","e","target","focus","blur","onSubmitComment","value","email","id","inserted","nickname","imageUrl","alert","window","location","reload","CommentTextArea","inputValue","onChange","onFocus","onSubmit","onCancel","className","textAreaRow","setTextAreaRow","inputValueNewLine","setInputValueNewLine","textAreaRowHeight","setTextAreaRowHeight","textAreaOverflowRow","setTextAreaOverflowRow","showButton","setShowButton","disableButton","setDisableButton","textAreaRef","current","clientHeight","scrollHeight","Math","ceil","split","length","cancelComment","submitComment","CommentActionButton"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {requireUser} from \"data/redux/action/user\";\nimport {addMoobeCommentFirst, fetchInsertMoobeComment} from \"data/redux/action/comment\";\nimport {nullFunction} from \"data/util\";\nimport {isNil as _isNil} from 'lodash';\nimport {DEFAULT_IMAGE} from \"assets/styles/const\";\n\nconst CommentInput = () => {\n    const {user} = useSelector(state => state.user)\n    const {contentDetail} = useSelector(state => state.contentDetail);\n    const [initialValue, setInitialValue] = useState(\"\");\n    const dispatch = useDispatch();\n    const [forceUpdated, updateState] = React.useState();\n    const forceUpdate = React.useCallback(() => updateState({}), []);\n\n    const onFocusComment = (e) => {\n        let target = e.target\n        dispatch(requireUser(() => {\n            target.focus();\n        }, () => {\n            target.blur();\n        }, () => {\n            target.blur();\n        }))\n    };\n\n    const onSubmitComment = (value) => {\n        dispatch(requireUser((user) => {\n            dispatch(fetchInsertMoobeComment(user.email, contentDetail.id, value, (inserted) => {\n                inserted.nickname = user.nickname;\n                inserted.imageUrl = user.imageUrl;\n                dispatch(addMoobeCommentFirst(inserted));\n                setInitialValue(\"\");\n            }))\n        }, () => {\n            alert(\"로그인 정보가 없습니다. 다시 로그인 해주세요.\");\n            window.location.reload();\n        }))\n    }\n\n    return (\n        <div className=\"card is-shadowless\">\n            <div className=\"card-content is-paddingless has-padding-15\">\n                <div className=\"media\">\n                    <div className=\"media-left\">\n                        <figure className=\"image is-48x48\">\n                            <img className=\"is-rounded\" src={!_isNil(user) ? user.imageUrl: DEFAULT_IMAGE} alt=\"Placeholder image\" />\n                        </figure>\n                    </div>\n                    <div className=\"media-content\">\n                        <CommentTextArea className=\"textarea has-fixed-size overflow-hidden is-top-borderless is-left-borderless is-right-borderless is-shadowless is-radiusless has-padding-5\"\n                                         key={forceUpdated}\n                                         inputValue={initialValue}\n                                         onCancel={() => setInitialValue(\"\")}\n                                         onChange={(e) => setInitialValue(e.target.value)}\n                                         onFocus={onFocusComment}\n                                         onSubmit={onSubmitComment}/>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport const CommentTextArea = ({inputValue=\"\", onChange=nullFunction, onFocus=nullFunction, onSubmit=nullFunction, onCancel=nullFunction, className=\"\"}) => {\n    const [textAreaRow, setTextAreaRow] = useState(1);\n\n    const [inputValueNewLine, setInputValueNewLine] = useState(0); //input value의 new line만큼 textarea의 row를 조절\n    const [textAreaRowHeight, setTextAreaRowHeight] = useState(0); // textarea의 초기 height를 기록.\n    const [textAreaOverflowRow, setTextAreaOverflowRow] = useState(0); //textarea의 scroll이 발생할때 row를 조절\n    const [showButton, setShowButton] = useState(false);\n    const [disableButton, setDisableButton] = useState(true); //input value가 비어있을때 댓글 submit을 할 수 없도록 disable\n\n    const textAreaRef = useRef(null);\n    useEffect( () => {\n        // textarea가 로드될때 초기 clientheight를 저장\n        if (textAreaRef.current) {\n            setTextAreaRowHeight(textAreaRef.current.clientHeight);\n        }\n    }, [textAreaRef]);\n\n    useEffect(() => {\n        //input value가 변경되거나 textAreaRowHeight가 변경될 때 row를 변경.\n        if (inputValue === \"\") {\n            setDisableButton(true);\n            setShowButton(false);\n            setTextAreaOverflowRow(0);\n        } else {\n            setDisableButton(false);\n            setShowButton(true);\n        }\n        if (textAreaRef && textAreaRowHeight && textAreaRef.current.scrollHeight > textAreaRef.current.clientHeight) {\n            setTextAreaOverflowRow(textAreaOverflowRow + Math.ceil((textAreaRef.current.scrollHeight - textAreaRef.current.clientHeight) / textAreaRowHeight));\n        }\n        setInputValueNewLine(inputValue.split(\"\\n\").length);\n    }, [inputValue, textAreaRowHeight]);\n\n    useEffect(() => {\n        //inputValueNewLine와 textAreaOverflowRow가 변경 될 때마다 실제로 textarea의 row를 변경\n        setTextAreaRow(inputValueNewLine + textAreaOverflowRow);\n    }, [inputValueNewLine, textAreaOverflowRow])\n\n    const cancelComment = () => {\n        setShowButton(false);\n        onCancel();\n    };\n\n    const submitComment = (e) => {\n        onSubmit(inputValue)\n    };\n\n    const CommentActionButton = () => (\n        <div className=\"field is-grouped is-pulled-right has-padding-top-10\">\n            <div className=\"control\">\n                <button className=\"button is-light\" onClick={cancelComment}>취소</button>\n            </div>\n            <div className=\"control\">\n                <button className=\"button is-link\" disabled={disableButton} onClick={submitComment}>댓글</button>\n            </div>\n        </div>\n    );\n\n    return (\n        <>\n            <textarea className={className}\n                      ref={textAreaRef}\n                      value={inputValue}\n                      rows={textAreaRow}\n                      onFocus={onFocus}\n                      onChange={onChange}\n                      wrap=\"virtual\"\n                      placeholder=\"공개 댓글 추가...\"/>\n            {showButton ? <CommentActionButton /> : null}\n        </>\n    )\n}\n\nexport default CommentInput;"]},"metadata":{},"sourceType":"module"}