{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/video/Video.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { buildChannelPath, buildContentPath, buildQuery } from \"data/util\";\nimport { toString as _toString } from 'lodash';\nimport { fetchUpdateContentLike, SEARCH_TYPE_TAG, updateContentUpdated } from \"data/redux/action/content\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as fasStar } from \"@fortawesome/free-regular-svg-icons\";\nimport { STORE_LIKED } from \"assets/styles/colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { requireUser } from \"data/redux/action/user\";\nimport Moment from \"react-moment\";\nimport Numbers from \"components/common/youtube/Numbers\";\nimport { setFocusedLocation } from \"data/redux/action/location\";\nimport MapLocation from \"data/redux/model/MapLocation\";\nimport { EMPTY_IMAGE } from \"assets/styles/const\";\n\nconst Video = ({\n  channel = null,\n  content\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        textEllipsis = _useState2[0],\n        setTextEllipsis = _useState2[1];\n\n  const _useSelector = useSelector(state => state.channel),\n        activeChannel = _useSelector.activeChannel;\n\n  const _useState3 = useState(content.liked),\n        _useState4 = _slicedToArray(_useState3, 2),\n        liked = _useState4[0],\n        setLiked = _useState4[1];\n\n  const _useSelector2 = useSelector(state => state.map),\n        mapBounds = _useSelector2.mapBounds;\n\n  const _useParams = useParams(),\n        contentId = _useParams.contentId;\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setLiked(content.liked);\n  }, [content]);\n\n  const updateActiveContent = content => {\n    if (contentId !== _toString(content.id)) {\n      history.push({\n        pathname: buildContentPath(activeChannel, content),\n        search: location.search\n      });\n    }\n  };\n\n  const updateLike = e => {\n    let origin = liked;\n    let updated = !liked;\n    dispatch(requireUser(user => {\n      setLiked(updated);\n      dispatch(fetchUpdateContentLike(user.email, content.id, updated, () => {\n        dispatch(updateContentUpdated(content, {\n          liked: updated\n        }));\n      }, () => setLiked(origin)));\n    }));\n    e.stopPropagation();\n  };\n\n  const updateFocusedLocation = content => {\n    dispatch(setFocusedLocation(new MapLocation(content)));\n  };\n\n  const searchTag = (e, tag) => {\n    history.push({\n      pathname: buildChannelPath(activeChannel),\n      search: buildQuery({\n        query: tag,\n        searchType: SEARCH_TYPE_TAG,\n        page: 1,\n        swLat: mapBounds.sw.lat,\n        swLng: mapBounds.sw.lng,\n        neLat: mapBounds.ne.lat,\n        neLng: mapBounds.ne.lng\n      })\n    });\n    e.stopPropagation();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"video media has-cursor-pointer has-padding-top-10 has-padding-bottom-10 has-padding-right-15 has-padding-left-15 is-marginless\",\n    onClick: e => updateActiveContent(content),\n    onMouseEnter: () => {\n      updateFocusedLocation(content);\n      setTextEllipsis(false);\n    },\n    onMouseLeave: () => {\n      updateFocusedLocation(null);\n      setTextEllipsis(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"test\", React.createElement(\"figure\", {\n    className: \"media-left has-margin-right-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"image is-155x88 youtube-thumbnail-container has-border-radius-6 has-margin-top-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"image youtube-thumbnail\",\n    src: content.thumbnailUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"media-content overflow-hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: liked ? faStar : fasStar,\n    className: \"video-like-btn clickable\",\n    color: liked ? STORE_LIKED : \"\",\n    size: '1x',\n    onClick: updateLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"is-marginless has-margin-bottom-5\" + (textEllipsis ? \" text-overflow-ellipsis\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, content.title)), React.createElement(\"p\", {\n    className: \"has-text-left is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, content.tagList.map(tag => {\n    return React.createElement(\"span\", {\n      key: tag,\n      className: \"fa-0-87x has-text-link clickable\",\n      onClick: e => searchTag(e, tag),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"#\", tag);\n  })), React.createElement(\"p\", {\n    className: \"has-text-left is-marginless has-text-grey-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    className: \"has-text-weight-semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"video-view-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Numbers, {\n    prefix: \"\\uC870\\uD68C\\uC218 \",\n    postfix: \"\\uD68C\",\n    shorten: true,\n    shortenPrecision: 1,\n    shortFormatMinValue: 1000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, content.viewCount)), React.createElement(\"span\", {\n    className: \"video-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, content.registerDate ? React.createElement(Moment, {\n    fromNow: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, content.registerDate) : \"알수 없음\"))), React.createElement(\"div\", {\n    className: \"is-flex justify-flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"is-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media-left has-margin-right-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"image is-24x24 is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, channel != null ? React.createElement(\"img\", {\n    className: \"image is-rounded\",\n    src: channel.profileImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    className: \"image has-min-height-24 is-rounded\",\n    src: EMPTY_IMAGE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"media-content align-self-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, channel != null ? channel.youtubeName : \"전체 채널\")))))));\n};\n\nexport default Video;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/video/Video.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","useParams","buildChannelPath","buildContentPath","buildQuery","toString","_toString","fetchUpdateContentLike","SEARCH_TYPE_TAG","updateContentUpdated","faStar","fasStar","STORE_LIKED","FontAwesomeIcon","requireUser","Moment","Numbers","setFocusedLocation","MapLocation","EMPTY_IMAGE","Video","channel","content","textEllipsis","setTextEllipsis","state","activeChannel","liked","setLiked","map","mapBounds","contentId","history","dispatch","updateActiveContent","id","push","pathname","search","location","updateLike","e","origin","updated","user","email","stopPropagation","updateFocusedLocation","searchTag","tag","query","searchType","page","swLat","sw","lat","swLng","lng","neLat","ne","neLng","thumbnailUrl","title","tagList","viewCount","registerDate","profileImg","youtubeName"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHistory, useParams} from \"react-router\";\nimport {buildChannelPath, buildContentPath, buildQuery} from \"data/util\";\nimport {toString as _toString} from 'lodash';\nimport {fetchUpdateContentLike, SEARCH_TYPE_TAG, updateContentUpdated} from \"data/redux/action/content\";\nimport {faStar} from \"@fortawesome/free-solid-svg-icons\";\nimport {faStar as fasStar} from \"@fortawesome/free-regular-svg-icons\";\nimport {STORE_LIKED} from \"assets/styles/colors\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {requireUser} from \"data/redux/action/user\";\nimport Moment from \"react-moment\";\nimport Numbers from \"components/common/youtube/Numbers\";\nimport {setFocusedLocation} from \"data/redux/action/location\";\nimport MapLocation from \"data/redux/model/MapLocation\";\nimport {EMPTY_IMAGE} from \"assets/styles/const\";\n\nconst Video = ({channel=null, content}) => {\n    const [textEllipsis, setTextEllipsis] = useState(true);\n    const {activeChannel} = useSelector(state => state.channel);\n    const [liked, setLiked] = useState(content.liked);\n    const {mapBounds} = useSelector(state => state.map);\n    const {contentId} = useParams();\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        setLiked(content.liked)\n    }, [content])\n\n    const updateActiveContent = (content) => {\n        if (contentId !== _toString(content.id)) {\n            history.push({\n                pathname: buildContentPath(activeChannel, content),\n                search: location.search\n            });\n        }\n    };\n\n    const updateLike = (e) => {\n        let origin = liked;\n        let updated = !liked;\n        dispatch(requireUser((user) => {\n            setLiked(updated);\n            dispatch(fetchUpdateContentLike(user.email, content.id, updated,() => {\n                dispatch(updateContentUpdated(content, {liked: updated}));\n            },() => setLiked(origin)));\n        }));\n        e.stopPropagation();\n    }\n\n    const updateFocusedLocation = (content) => {\n        dispatch(setFocusedLocation(new MapLocation(content)));\n    };\n\n    const searchTag = (e, tag) => {\n        history.push({\n            pathname: buildChannelPath(activeChannel),\n            search: buildQuery({\n                query: tag,\n                searchType: SEARCH_TYPE_TAG,\n                page: 1,\n                swLat: mapBounds.sw.lat,\n                swLng: mapBounds.sw.lng,\n                neLat: mapBounds.ne.lat,\n                neLng: mapBounds.ne.lng\n            })\n        });\n        e.stopPropagation();\n    }\n\n    return (\n        <div className={\"video media has-cursor-pointer has-padding-top-10 has-padding-bottom-10 has-padding-right-15 has-padding-left-15 is-marginless\"}\n             onClick={(e) => updateActiveContent(content)}\n             onMouseEnter={() => {updateFocusedLocation(content); setTextEllipsis(false)}}\n             onMouseLeave={() => {updateFocusedLocation(null); setTextEllipsis(true)}}>\n            test\n            <figure className=\"media-left has-margin-right-10\">\n                <p className=\"image is-155x88 youtube-thumbnail-container has-border-radius-6 has-margin-top-5\">\n                    <img className=\"image youtube-thumbnail\" src={content.thumbnailUrl} />\n                </p>\n            </figure>\n            <div className=\"media-content overflow-hidden\">\n                <div className=\"content\">\n                    <FontAwesomeIcon\n                        icon={liked ? faStar : fasStar}\n                        className=\"video-like-btn clickable\"\n                        color={liked ? STORE_LIKED : \"\"}\n                        size={'1x'}\n                        onClick={updateLike} />\n                    <p className={\"is-marginless has-margin-bottom-5\" + (textEllipsis ? \" text-overflow-ellipsis\" : \"\")}>\n                        <strong>{content.title}</strong>\n                    </p>\n                    <p className=\"has-text-left is-marginless\">\n                        {content.tagList.map(tag => {\n                            return <span key={tag} className=\"fa-0-87x has-text-link clickable\" onClick={(e) => searchTag(e, tag)}>#{tag}</span>\n                        })}\n                    </p>\n                    <p className=\"has-text-left is-marginless has-text-grey-light\">\n                        <small className=\"has-text-weight-semibold\">\n                            <span className=\"video-view-count\">\n                                <Numbers prefix=\"조회수 \" postfix=\"회\" shorten={true} shortenPrecision={1} shortFormatMinValue={1000}>{content.viewCount}</Numbers>\n                            </span>\n                            <span className=\"video-date\">\n                                {content.registerDate ? (<Moment fromNow>{content.registerDate}</Moment>) : \"알수 없음\"}\n                            </span>\n                        </small>\n                    </p>\n                    <div className=\"is-flex justify-flex-end\">\n                        <div className=\"is-flex\">\n                            <div className=\"media-left has-margin-right-10\">\n                                <figure className=\"image is-24x24 is-marginless\">\n                                    {channel != null\n                                        ? <img className=\"image is-rounded\" src={channel.profileImg}/>\n                                        :<img className=\"image has-min-height-24 is-rounded\" src={EMPTY_IMAGE}/> }\n                                </figure>\n                            </div>\n                            <div className=\"media-content align-self-center\">\n                                <p className=\"\">\n                                    {channel != null ? channel.youtubeName : \"전체 채널\"}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n};\nexport default Video;"]},"metadata":{},"sourceType":"module"}