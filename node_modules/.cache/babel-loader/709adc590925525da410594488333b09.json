{"ast":null,"code":"import axios from \"axios\";\nimport { buildQuery, buildUrl, expandUrl, unpackMoobeMapBounds, updateObject } from \"data/util\";\nimport { isNil as _isNil } from 'lodash';\nimport { SEARCH_TYPE_STORE, SEARCH_TYPE_TAG, SEARCH_TYPE_TITLE } from \"data/redux/action/content\";\nexport const LOGIN_REDIRECT_URL = buildUrl(\"/login\");\nexport const LOGOUT_REDIRECT_URL = buildUrl(\"/logout\");\nconst ADMIN_URL = buildUrl(\"/admin/authorize\");\nconst USER_URL = buildUrl(\"/api/session\");\nconst CHANNELS_URL = buildUrl(\"/api/channels\");\nconst CONTENTS_URL = buildUrl(\"/api/contents\");\nconst CONTENTS_RANGE_URL = buildUrl(\"/api/contents/range\");\nconst CONTENT_URL = buildUrl(\"/api/contents/{{contentId}}\");\nconst CONTENT_LIKE_URL = buildUrl(\"/api/contents/like\");\nconst CONTENT_UNLIKE_URL = buildUrl(\"/api/contents/like/cancel\");\nconst FAVORITE_CHANNELS_URL = buildUrl(\"/api/favorites/channels\");\nconst FAVORITE_CONTENTS_URL = buildUrl(\"/api/favorites/contents\");\nconst FAVORITE_CONTENTS_CHANNEL_URL = buildUrl(\"/api/favorites/channels/{{channelId}}/contents\");\nconst CONTENT_SEARCH_URL = buildUrl(\"/api/search\");\nconst CONTENT_SEARCH_CONTENT_TITLE_URL = buildUrl(\"/api/search/contents/title\");\nconst CONTENT_SEARCH_STORE_TITLE_URL = buildUrl(\"/api/search/store/title\");\nconst CONTENT_SEARCH_TAG_URL = buildUrl(\"/api/search/tag\");\nconst COMMENT_MOOBE_URL = buildUrl(\"/api/{{contentId}}/comments/moobe\");\nconst COMMENT_YOUTUBE_URL = buildUrl(\"/api/{{contentId}}/comments/youtube\");\nconst COMMENT_LIKE_URL = buildUrl(\"/api/comment/like\");\nconst COMMENT_UNLIKE_URL = buildUrl(\"/api/comment/like/cancel\");\nconst COMMENT_INSERT_URL = buildUrl(\"/api/comment/insert\");\nconst COMMENT_UPDATE_URL = buildUrl(\"/api/comment/modify\");\nconst COMMENT_DELETE_URL = buildUrl(\"/api/comment/delete\");\nconst LOCATIONS_URL = buildUrl(\"/api/contents/locations\");\nconst LOCATIONS_RANGE_URL = buildUrl(\"/api/contents/range/locations\");\nconst CLUSTER_LOCATIONS_URL = buildUrl(\"/api/cluster\"); //api\n\nexport const getChannels = () => {\n  return axios.get(CHANNELS_URL);\n};\nexport const getFavoriteChannels = () => {\n  return axios.get(FAVORITE_CHANNELS_URL, {\n    withCredentials: true\n  });\n};\nexport const getContents = (channel = null, mapBounds = null, page = null) => {\n  if (_isNil(mapBounds)) {\n    let query = buildQuery(Object.assign({\n      channel,\n      page\n    }));\n    return axios.get(expandUrl(CONTENTS_URL, {}, query), {\n      withCredentials: true\n    });\n  } else {\n    let body = Object.assign(_isNil(channel) ? {} : {\n      channelId: channel\n    }, {\n      pageNum: page\n    }, unpackMoobeMapBounds(mapBounds));\n    return axios.post(CONTENTS_RANGE_URL, body, {\n      withCredentials: true\n    });\n  }\n};\nexport const searchContents = (query, searchType, channel = null, mapBounds = null, page = null) => {\n  let searchQuery = buildQuery({\n    query\n  });\n  let url = getSearchUrl(searchType);\n  let body = Object.assign(_isNil(channel) ? {} : {\n    channelId: channel\n  }, {\n    pageNum: page\n  }, unpackMoobeMapBounds(mapBounds));\n  return axios.post(expandUrl(url, {}, searchQuery), body, {\n    withCredentials: true\n  });\n};\n\nconst getSearchUrl = searchType => {\n  switch (searchType) {\n    case SEARCH_TYPE_TITLE:\n      return CONTENT_SEARCH_CONTENT_TITLE_URL;\n\n    case SEARCH_TYPE_STORE:\n      return CONTENT_SEARCH_STORE_TITLE_URL;\n\n    case SEARCH_TYPE_TAG:\n      return CONTENT_SEARCH_TAG_URL;\n\n    default:\n      return CONTENT_SEARCH_URL;\n  }\n};\n\nexport const getContent = (contentId, channel = null) => {\n  let query = buildQuery({\n    channel\n  });\n  return axios.get(expandUrl(CONTENT_URL, {\n    contentId\n  }, query), {\n    withCredentials: true\n  });\n};\nexport const getContentLocations = (channel = null, mapBounds = null) => {\n  if (_isNil(mapBounds)) {\n    let query = buildQuery({\n      channel\n    });\n    return axios.get(expandUrl(LOCATIONS_URL, {}, query));\n  } else {\n    let body = Object.assign(_isNil(channel) ? {} : {\n      channelId: channel\n    }, unpackMoobeMapBounds(mapBounds));\n    return axios.post(LOCATIONS_RANGE_URL, body);\n  }\n};\nexport const searchContentLocations = (query, searchType, channel = null, mapBounds = null) => {\n  let searchTypeFlag = getLocationSearchType(searchType);\n  let queryDict = Object.assign({\n    query\n  }, {\n    flag: searchTypeFlag\n  });\n\n  if (_isNil(mapBounds)) {\n    let query = buildQuery(Object.assign({\n      channel\n    }, queryDict));\n    return axios.get(expandUrl(LOCATIONS_URL, {}, query));\n  } else {\n    let query = buildQuery(queryDict);\n    let body = Object.assign(_isNil(channel) ? {} : {\n      channelId: channel\n    }, unpackMoobeMapBounds(mapBounds));\n    return axios.post(expandUrl(LOCATIONS_RANGE_URL, {}, query), body, {\n      withCredentials: true\n    });\n  }\n};\nexport const getClusterLocations = (channel = null, mapLevel = null, mapBounds = null) => {\n  let query;\n\n  if (!_isNil(mapBounds)) {\n    query = buildQuery(Object.assign({\n      channel,\n      level: mapLevel\n    }, unpackMoobeMapBounds(mapBounds)));\n  } else {\n    query = buildQuery({\n      channel,\n      level: mapLevel\n    });\n  }\n\n  return axios.get(expandUrl(CLUSTER_LOCATIONS_URL, {}, query));\n};\n\nconst getLocationSearchType = searchType => {\n  switch (searchType) {\n    case SEARCH_TYPE_TAG:\n      return 4;\n\n    case SEARCH_TYPE_TITLE:\n      return 3;\n\n    case SEARCH_TYPE_STORE:\n      return 2;\n\n    default:\n      return 1;\n  }\n};\n\nexport const getFavoriteContents = (channel = null) => {\n  if (_isNil(channel)) {\n    return axios.get(FAVORITE_CONTENTS_URL, {\n      withCredentials: true\n    });\n  } else {\n    return axios.get(expandUrl(FAVORITE_CONTENTS_CHANNEL_URL, {\n      channelId: channel\n    }), {\n      withCredentials: true\n    });\n  }\n};\nexport const getMoobeComment = (contentId, page) => {\n  let query = buildQuery({\n    page\n  });\n  return axios.get(expandUrl(COMMENT_MOOBE_URL, {\n    contentId\n  }, query), {\n    withCredentials: true\n  });\n};\nexport const getYoutubeComment = (contentId, page) => {\n  let query = buildQuery({\n    page\n  });\n  return axios.get(expandUrl(COMMENT_YOUTUBE_URL, {\n    contentId\n  }, query), {\n    withCredentials: true\n  });\n};\nexport const getUser = () => axios.get(USER_URL, {\n  withCredentials: true\n});\nexport const checkAdmin = () => axios.get(ADMIN_URL, {\n  withCredentials: true\n});\nexport const updateContentLike = (email, contentId, like) => {\n  let body = {\n    id: contentId,\n    email: email\n  };\n\n  if (like) {\n    return axios.post(CONTENT_LIKE_URL, body, {\n      withCredentials: true\n    });\n  } else {\n    return axios.post(CONTENT_UNLIKE_URL, body, {\n      withCredentials: true\n    });\n  }\n};\nexport const updateCommentLike = (email, commentId, contentsId, like) => {\n  let body = {\n    id: commentId,\n    email: email,\n    contentsId: contentsId\n  };\n\n  if (like) {\n    return axios.post(COMMENT_LIKE_URL, body, {\n      withCredentials: true\n    });\n  } else {\n    return axios.post(COMMENT_UNLIKE_URL, body, {\n      withCredentials: true\n    });\n  }\n};\nexport const insertComment = (email, contentId, value) => {\n  let body = {\n    email: email,\n    contentsId: contentId,\n    comment: value,\n    likeCount: 0\n  };\n  return axios.post(COMMENT_INSERT_URL, body, {\n    withCredentials: true\n  });\n};\nexport const updateComment = (email, commentId, value) => {\n  let body = {\n    id: commentId,\n    email: email,\n    comment: value\n  };\n  return axios.post(COMMENT_UPDATE_URL, body, {\n    withCredentials: true\n  });\n};\nexport const deleteComment = (email, commentId) => {\n  let body = {\n    id: commentId,\n    email: email\n  };\n  return axios.post(COMMENT_DELETE_URL, body, {\n    withCredentials: true\n  });\n};","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/api.js"],"names":["axios","buildQuery","buildUrl","expandUrl","unpackMoobeMapBounds","updateObject","isNil","_isNil","SEARCH_TYPE_STORE","SEARCH_TYPE_TAG","SEARCH_TYPE_TITLE","LOGIN_REDIRECT_URL","LOGOUT_REDIRECT_URL","ADMIN_URL","USER_URL","CHANNELS_URL","CONTENTS_URL","CONTENTS_RANGE_URL","CONTENT_URL","CONTENT_LIKE_URL","CONTENT_UNLIKE_URL","FAVORITE_CHANNELS_URL","FAVORITE_CONTENTS_URL","FAVORITE_CONTENTS_CHANNEL_URL","CONTENT_SEARCH_URL","CONTENT_SEARCH_CONTENT_TITLE_URL","CONTENT_SEARCH_STORE_TITLE_URL","CONTENT_SEARCH_TAG_URL","COMMENT_MOOBE_URL","COMMENT_YOUTUBE_URL","COMMENT_LIKE_URL","COMMENT_UNLIKE_URL","COMMENT_INSERT_URL","COMMENT_UPDATE_URL","COMMENT_DELETE_URL","LOCATIONS_URL","LOCATIONS_RANGE_URL","CLUSTER_LOCATIONS_URL","getChannels","get","getFavoriteChannels","withCredentials","getContents","channel","mapBounds","page","query","Object","assign","body","channelId","pageNum","post","searchContents","searchType","searchQuery","url","getSearchUrl","getContent","contentId","getContentLocations","searchContentLocations","searchTypeFlag","getLocationSearchType","queryDict","flag","getClusterLocations","mapLevel","level","getFavoriteContents","getMoobeComment","getYoutubeComment","getUser","checkAdmin","updateContentLike","email","like","id","updateCommentLike","commentId","contentsId","insertComment","value","comment","likeCount","updateComment","deleteComment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {buildQuery, buildUrl, expandUrl, unpackMoobeMapBounds, updateObject} from \"data/util\";\nimport {isNil as _isNil} from 'lodash';\nimport {SEARCH_TYPE_STORE, SEARCH_TYPE_TAG, SEARCH_TYPE_TITLE} from \"data/redux/action/content\";\n\nexport const LOGIN_REDIRECT_URL = buildUrl(\"/login\");\nexport const LOGOUT_REDIRECT_URL = buildUrl(\"/logout\");\n\nconst ADMIN_URL = buildUrl(\"/admin/authorize\");\n\nconst USER_URL = buildUrl(\"/api/session\");\nconst CHANNELS_URL = buildUrl(\"/api/channels\");\nconst CONTENTS_URL = buildUrl(\"/api/contents\");\nconst CONTENTS_RANGE_URL = buildUrl(\"/api/contents/range\");\nconst CONTENT_URL = buildUrl(\"/api/contents/{{contentId}}\");\nconst CONTENT_LIKE_URL = buildUrl(\"/api/contents/like\");\nconst CONTENT_UNLIKE_URL = buildUrl(\"/api/contents/like/cancel\");\n\nconst FAVORITE_CHANNELS_URL = buildUrl(\"/api/favorites/channels\");\nconst FAVORITE_CONTENTS_URL = buildUrl(\"/api/favorites/contents\");\nconst FAVORITE_CONTENTS_CHANNEL_URL = buildUrl(\"/api/favorites/channels/{{channelId}}/contents\");\nconst CONTENT_SEARCH_URL = buildUrl(\"/api/search\");\nconst CONTENT_SEARCH_CONTENT_TITLE_URL = buildUrl(\"/api/search/contents/title\");\nconst CONTENT_SEARCH_STORE_TITLE_URL = buildUrl(\"/api/search/store/title\");\nconst CONTENT_SEARCH_TAG_URL = buildUrl(\"/api/search/tag\");\n\nconst COMMENT_MOOBE_URL = buildUrl(\"/api/{{contentId}}/comments/moobe\");\nconst COMMENT_YOUTUBE_URL = buildUrl(\"/api/{{contentId}}/comments/youtube\");\nconst COMMENT_LIKE_URL = buildUrl(\"/api/comment/like\");\nconst COMMENT_UNLIKE_URL = buildUrl(\"/api/comment/like/cancel\");\n\nconst COMMENT_INSERT_URL = buildUrl(\"/api/comment/insert\");\nconst COMMENT_UPDATE_URL = buildUrl(\"/api/comment/modify\");\nconst COMMENT_DELETE_URL = buildUrl(\"/api/comment/delete\");\n\nconst LOCATIONS_URL = buildUrl(\"/api/contents/locations\");\nconst LOCATIONS_RANGE_URL = buildUrl(\"/api/contents/range/locations\");\n\nconst CLUSTER_LOCATIONS_URL = buildUrl(\"/api/cluster\");\n\n//api\nexport const getChannels = () => {\n    return axios.get(CHANNELS_URL);\n}\n\nexport const getFavoriteChannels = () => {\n    return axios.get(FAVORITE_CHANNELS_URL, {withCredentials: true});\n}\n\nexport const getContents = (channel=null, mapBounds=null, page=null) => {\n    if (_isNil(mapBounds)) {\n        let query = buildQuery(Object.assign({channel, page}));\n        return axios.get(expandUrl(CONTENTS_URL, {}, query), {withCredentials: true});\n    } else {\n        let body = Object.assign(_isNil(channel) ? {} : {channelId: channel}, {pageNum: page}, unpackMoobeMapBounds(mapBounds));\n        return axios.post(CONTENTS_RANGE_URL, body, {withCredentials: true});\n    }\n};\n\nexport const searchContents = (query, searchType, channel=null, mapBounds=null, page=null) => {\n    let searchQuery = buildQuery({query})\n    let url = getSearchUrl(searchType)\n    let body = Object.assign(_isNil(channel) ? {} : {channelId: channel}, {pageNum: page}, unpackMoobeMapBounds(mapBounds));\n    return axios.post(expandUrl(url, {}, searchQuery), body, {withCredentials: true});\n};\n\nconst getSearchUrl = (searchType) => {\n    switch(searchType) {\n        case SEARCH_TYPE_TITLE: return CONTENT_SEARCH_CONTENT_TITLE_URL;\n        case SEARCH_TYPE_STORE: return CONTENT_SEARCH_STORE_TITLE_URL;\n        case SEARCH_TYPE_TAG: return CONTENT_SEARCH_TAG_URL;\n        default : return CONTENT_SEARCH_URL;\n    }\n}\n\nexport const getContent = (contentId, channel=null) => {\n    let query = buildQuery({channel});\n    return axios.get(expandUrl(CONTENT_URL, {contentId}, query), {withCredentials: true});\n};\n\nexport const getContentLocations = (channel=null, mapBounds=null) => {\n    if (_isNil(mapBounds)) {\n        let query = buildQuery({channel});\n        return axios.get(expandUrl(LOCATIONS_URL, {}, query));\n    } else {\n        let body = Object.assign(_isNil(channel) ? {} : {channelId: channel}, unpackMoobeMapBounds(mapBounds));\n        return axios.post(LOCATIONS_RANGE_URL, body);\n    }\n};\n\nexport const searchContentLocations = (query, searchType, channel=null, mapBounds=null) => {\n    let searchTypeFlag = getLocationSearchType(searchType)\n    let queryDict = Object.assign({query}, {flag: searchTypeFlag})\n    if (_isNil(mapBounds)) {\n        let query = buildQuery(Object.assign({channel}, queryDict))\n        return axios.get(expandUrl(LOCATIONS_URL, {}, query))\n    } else {\n        let query = buildQuery(queryDict)\n        let body = Object.assign(_isNil(channel) ? {} : {channelId: channel}, unpackMoobeMapBounds(mapBounds));\n        return axios.post(expandUrl(LOCATIONS_RANGE_URL, {}, query), body, {withCredentials: true});\n    }\n};\n\nexport const getClusterLocations = (channel = null, mapLevel= null, mapBounds=null) => {\n    let query;\n    if (!_isNil(mapBounds)) {\n        query = buildQuery(Object.assign({channel, level: mapLevel}, unpackMoobeMapBounds(mapBounds)));\n    } else {\n        query = buildQuery({channel, level: mapLevel});\n    }\n    return axios.get(expandUrl(CLUSTER_LOCATIONS_URL, {}, query));\n}\n\nconst getLocationSearchType = (searchType) => {\n    switch(searchType) {\n        case SEARCH_TYPE_TAG: return 4;\n        case SEARCH_TYPE_TITLE: return 3;\n        case SEARCH_TYPE_STORE: return 2;\n        default : return 1;\n    }\n}\n\nexport const getFavoriteContents = (channel=null) => {\n    if (_isNil(channel)) {\n        return axios.get(FAVORITE_CONTENTS_URL, {withCredentials: true});\n    } else {\n        return axios.get(expandUrl(FAVORITE_CONTENTS_CHANNEL_URL, {channelId: channel}), {withCredentials: true});\n    }\n}\n\nexport const getMoobeComment = (contentId, page) => {\n    let query = buildQuery({page});\n    return axios.get(expandUrl(COMMENT_MOOBE_URL, {contentId}, query),{withCredentials: true});\n};\n\nexport const getYoutubeComment = (contentId, page) => {\n    let query = buildQuery({page});\n    return axios.get(expandUrl(COMMENT_YOUTUBE_URL, {contentId}, query), {withCredentials: true});\n};\n\nexport const getUser = () => axios.get(USER_URL,{withCredentials: true});\nexport const checkAdmin = () => axios.get(ADMIN_URL, {withCredentials: true});\n\nexport const updateContentLike = (email, contentId, like) => {\n    let body = {\n        id: contentId,\n        email: email\n    };\n    if (like) {\n        return axios.post(CONTENT_LIKE_URL, body, {withCredentials: true});\n    } else {\n        return axios.post(CONTENT_UNLIKE_URL, body, {withCredentials: true});\n    }\n};\n\nexport const updateCommentLike = (email, commentId, contentsId, like) => {\n    let body = {\n        id: commentId,\n        email: email,\n        contentsId: contentsId\n    };\n    if (like) {\n        return axios.post(COMMENT_LIKE_URL, body, {withCredentials: true});\n    } else {\n        return axios.post(COMMENT_UNLIKE_URL, body, {withCredentials: true});\n    }\n};\n\nexport const insertComment = (email, contentId, value) => {\n    let body = {\n        email: email,\n        contentsId: contentId,\n        comment: value,\n        likeCount: 0\n    }\n    return axios.post(COMMENT_INSERT_URL, body, {withCredentials: true});\n\n}\n\nexport const updateComment = (email, commentId, value) => {\n    let body = {\n        id: commentId,\n        email: email,\n        comment: value,\n    }\n    return axios.post(COMMENT_UPDATE_URL, body, {withCredentials: true});\n}\n\nexport const deleteComment = (email, commentId) => {\n    let body = {\n        id: commentId,\n        email: email\n    }\n    return axios.post(COMMENT_DELETE_URL, body, {withCredentials: true});\n\n}"]},"metadata":{},"sourceType":"module"}