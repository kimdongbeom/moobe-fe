{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/MarkerClusterer.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { MapContext } from \"components/common/map/KakaoMap\";\nimport MarkerImageMd from \"assets/images/marker_arrow_md.svg\";\nimport MarkerImageLg from \"assets/images/marker_arrow_lg.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { setMarkerClusterer } from \"data/redux/action/map\";\nexport const MarkerClustererContext = React.createContext({});\nexport const MarkerClustererCalculator = [50, 150];\nexport const MarkerClustererStyles = [{\n  width: '60px',\n  height: '60px',\n  background: `url(${MarkerImageMd}) no-repeat`,\n  backgroundSize: \"60px 60px\",\n  fontWeight: 700,\n  fontSize: \"20px\",\n  fontStretch: \"normal\",\n  fontStyle: \"normal\",\n  lineHeight: \"62px\",\n  letterSpacing: \"normal\",\n  textAlign: \"center\",\n  color: \"#ffffff\"\n}, {\n  width: '90px',\n  height: '90px',\n  background: `url(${MarkerImageLg}) no-repeat`,\n  backgroundSize: \"90px 90px\",\n  fontSize: \"23px\",\n  fontWeight: 700,\n  fontStretch: \"normal\",\n  fontStyle: \"normal\",\n  lineHeight: '88px',\n  letterSpacing: \"normal\",\n  textAlign: \"center\",\n  color: \"#ffffff\"\n}, {\n  width: '90px',\n  height: '90px',\n  background: `url(${MarkerImageLg}) no-repeat`,\n  backgroundSize: \"90px 90px\",\n  fontSize: \"26px\",\n  fontWeight: 800,\n  fontStretch: \"normal\",\n  fontStyle: \"normal\",\n  lineHeight: '88px',\n  letterSpacing: \"normal\",\n  textAlign: \"center\",\n  color: \"#ffffff\"\n}];\n\nconst MarkerClusterer = props => {\n  const _useContext = useContext(MapContext),\n        kakao = _useContext.kakao,\n        map = _useContext.map;\n\n  const _useState = useState({\n    clusterer: null\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const options = props.options,\n          onClusterClick = props.onClusterClick,\n          isMain = props.isMain;\n    const clusterer = new kakao.maps.MarkerClusterer(options);\n    clusterer.setMap(map);\n    if (isMain) dispatch(setMarkerClusterer(clusterer));\n\n    const clustered = () => {};\n\n    const clusterClick = cluster => {\n      if (onClusterClick) onClusterClick(cluster);\n    };\n\n    kakao.maps.event.addListener(clusterer, \"clustered\", clustered);\n    kakao.maps.event.addListener(clusterer, 'clusterclick', clusterClick);\n    setState({\n      clusterer\n    });\n    return () => {\n      kakao.maps.event.removeListener(clusterer, \"clustered\", clustered);\n      kakao.maps.event.removeListener(clusterer, 'clusterclick', clusterClick);\n      clusterer.setMap(null);\n    };\n  }, []);\n  useEffect(() => {\n    const _props$options = props.options,\n          gridSize = _props$options.gridSize,\n          averageCenter = _props$options.averageCenter,\n          minLevel = _props$options.minLevel,\n          disableClickZoom = _props$options.disableClickZoom,\n          texts = _props$options.texts,\n          styles = _props$options.styles;\n    const clusterer = state.clusterer;\n    if (clusterer === null) return;\n    if (gridSize) clusterer.setGridSize(gridSize);\n    if (averageCenter) clusterer.setAverageCenter(averageCenter);\n    if (minLevel) clusterer.setMinLevel(minLevel);\n    if (texts) clusterer.setTexts(texts);\n    if (styles) clusterer.setStyles(styles); // if (disableClickZoom) clusterer.setDisableClickZoom(disableClickZoom);\n  }, [props.options]);\n\n  if (state.clusterer === null) {\n    return null;\n  } else {\n    return React.createElement(MarkerClustererContext.Provider, {\n      value: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, state.clusterer === null ? null : props.children);\n  }\n};\n\nexport default MarkerClusterer;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/MarkerClusterer.jsx"],"names":["React","useContext","useEffect","useState","MapContext","useDispatch","setMarkerClusterer","MarkerClustererContext","createContext","MarkerClustererCalculator","MarkerClustererStyles","width","height","background","MarkerImageMd","backgroundSize","fontWeight","fontSize","fontStretch","fontStyle","lineHeight","letterSpacing","textAlign","color","MarkerImageLg","MarkerClusterer","props","kakao","map","clusterer","state","setState","dispatch","options","onClusterClick","isMain","maps","setMap","clustered","clusterClick","cluster","event","addListener","removeListener","gridSize","averageCenter","minLevel","disableClickZoom","texts","styles","setGridSize","setAverageCenter","setMinLevel","setTexts","setStyles","children"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport {MapContext} from \"components/common/map/KakaoMap\";\nimport MarkerImageMd from \"assets/images/marker_arrow_md.svg\";\nimport MarkerImageLg from \"assets/images/marker_arrow_lg.svg\";\nimport {useDispatch} from \"react-redux\";\nimport {setMarkerClusterer} from \"data/redux/action/map\";\n\nexport const MarkerClustererContext = React.createContext({});\nexport const MarkerClustererCalculator = [50, 150]\nexport const MarkerClustererStyles = [{\n    width : '60px', height : '60px',\n    background: `url(${MarkerImageMd}) no-repeat`,\n    backgroundSize: \"60px 60px\",\n    fontWeight: 700,\n    fontSize: \"20px\",\n    fontStretch: \"normal\",\n    fontStyle: \"normal\",\n    lineHeight: \"62px\",\n    letterSpacing: \"normal\",\n    textAlign: \"center\",\n    color: \"#ffffff\"\n},{\n    width : '90px', height : '90px',\n    background: `url(${MarkerImageLg}) no-repeat`,\n    backgroundSize: \"90px 90px\",\n    fontSize: \"23px\",\n    fontWeight: 700,\n    fontStretch: \"normal\",\n    fontStyle: \"normal\",\n    lineHeight: '88px',\n    letterSpacing: \"normal\",\n    textAlign: \"center\",\n    color: \"#ffffff\"\n},{\n    width : '90px', height : '90px',\n    background: `url(${MarkerImageLg}) no-repeat`,\n    backgroundSize: \"90px 90px\",\n    fontSize: \"26px\",\n    fontWeight: 800,\n    fontStretch: \"normal\",\n    fontStyle: \"normal\",\n    lineHeight: '88px',\n    letterSpacing: \"normal\",\n    textAlign: \"center\",\n    color: \"#ffffff\"\n}]\n\nconst MarkerClusterer = props => {\n    const { kakao, map } = useContext(MapContext);\n    const [state, setState] = useState({\n        clusterer: null\n    });\n\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        const { options, onClusterClick, isMain } = props;\n        const clusterer = new kakao.maps.MarkerClusterer(options);\n        clusterer.setMap(map);\n        if (isMain) dispatch(setMarkerClusterer(clusterer))\n\n        const clustered = () => {}\n        const clusterClick = (cluster) => { if (onClusterClick) onClusterClick(cluster)};\n\n        kakao.maps.event.addListener(clusterer, \"clustered\", clustered);\n        kakao.maps.event.addListener( clusterer, 'clusterclick', clusterClick);\n        setState({ clusterer });\n        return () => {\n            kakao.maps.event.removeListener(clusterer, \"clustered\", clustered);\n            kakao.maps.event.removeListener(clusterer, 'clusterclick', clusterClick);\n            clusterer.setMap(null);\n        };\n    }, []);\n\n    useEffect(() => {\n        const {\n            gridSize,\n            averageCenter,\n            minLevel,\n            disableClickZoom,\n            texts,\n            styles\n        } = props.options;\n        const { clusterer } = state;\n        if (clusterer === null) return;\n        if (gridSize) clusterer.setGridSize(gridSize);\n        if (averageCenter) clusterer.setAverageCenter(averageCenter);\n        if (minLevel) clusterer.setMinLevel(minLevel);\n        if (texts) clusterer.setTexts(texts);\n        if (styles) clusterer.setStyles(styles);\n        // if (disableClickZoom) clusterer.setDisableClickZoom(disableClickZoom);\n    }, [props.options]);\n\n    if (state.clusterer === null) {\n        return null;\n    } else {\n        return (\n            <MarkerClustererContext.Provider value={state}>\n                {state.clusterer === null ? null : props.children}\n            </MarkerClustererContext.Provider>\n        );\n    }\n};\n\nexport default MarkerClusterer;"]},"metadata":{},"sourceType":"module"}