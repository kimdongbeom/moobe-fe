{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/mobile/store/Store.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as fasStar } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useHistory, useParams } from \"react-router\";\nimport { buildChannelPath, buildQuery } from \"data/util\";\nimport { STORE_LIKED } from \"assets/styles/colors\";\nimport { requireUser } from \"data/redux/action/user\";\nimport { fetchUpdateContentLike, SEARCH_TYPE_TAG, updateContentUpdated } from \"data/redux/action/content\";\nimport Numbers from \"components/common/youtube/Numbers\";\nimport Moment from \"react-moment\";\nimport { setFocusedLocation } from \"data/redux/action/location\";\nimport MapLocation from \"data/redux/model/MapLocation\";\nimport { EMPTY_IMAGE } from \"assets/styles/const\";\n\nconst Store = ({\n  channel,\n  content\n}) => {\n  const _useSelector = useSelector(state => state.channel),\n        activeChannel = _useSelector.activeChannel;\n\n  const _useState = useState(content.liked),\n        _useState2 = _slicedToArray(_useState, 2),\n        liked = _useState2[0],\n        setLiked = _useState2[1];\n\n  const _useParams = useParams(),\n        contentId = _useParams.contentId;\n\n  const _useSelector2 = useSelector(state => state.map),\n        changedMapBounds = _useSelector2.changedMapBounds;\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setLiked(content.liked);\n  }, [content]);\n\n  const updateActiveContent = content => {\n    dispatch(setFocusedLocation(new MapLocation(content)));\n  };\n\n  const updateLike = e => {\n    let origin = liked;\n    let updated = !liked;\n    dispatch(requireUser(user => {\n      setLiked(updated);\n      dispatch(fetchUpdateContentLike(user.email, content.id, updated, () => {\n        dispatch(updateContentUpdated(content, {\n          liked: updated\n        }));\n      }, () => setLiked(origin)));\n    }));\n    e.stopPropagation();\n  };\n\n  const searchTag = (e, tag) => {\n    if (!confirm(\"태그: \" + tag + \"(으)로 검색하시겠습니까?\")) {\n      e.stopPropagation();\n      return;\n    }\n\n    history.push({\n      pathname: buildChannelPath(activeChannel),\n      search: buildQuery({\n        query: tag,\n        searchType: SEARCH_TYPE_TAG,\n        page: 1,\n        swLat: changedMapBounds.sw.lat,\n        swLng: changedMapBounds.sw.lng,\n        neLat: changedMapBounds.ne.lat,\n        neLng: changedMapBounds.ne.lng\n      })\n    });\n    e.stopPropagation();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"video media has-padding-top-10 has-padding-bottom-10 is-marginless \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"media-left\",\n    onClick: () => updateActiveContent(content),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image is-120x68 has-margin-top-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      background: `url(${content.thumbnailUrl}) no-repeat`,\n      backgroundPositionY: \"50%\"\n    },\n    className: \"image is-full-width is-full-height is-background-size-cover has-border-radius-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    style: {\n      overflowY: \"hidden\"\n    },\n    className: \"media-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    onClick: () => updateActiveContent(content),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"fa-1x text-overflow-ellipsis has-margin-bottom-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: liked ? faStar : fasStar,\n    className: \"video-like-btn-mobile\",\n    color: liked ? STORE_LIKED : \"\",\n    size: 'sm',\n    onClick: updateLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, content.store.name)), React.createElement(\"p\", {\n    className: \"has-text-left is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, content.tagList.map(tag => {\n    return React.createElement(\"span\", {\n      key: tag,\n      className: \"fa-0-77x has-text-link\",\n      onClick: e => searchTag(e, tag),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"#\", tag);\n  })), React.createElement(\"p\", {\n    className: \"has-text-left has-text-grey-light is-marginless fa-0-87x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    className: \"has-text-weight-semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"video-view-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Numbers, {\n    prefix: \"\\uC870\\uD68C\\uC218 \",\n    postfix: \"\\uD68C\",\n    shorten: true,\n    shortenPrecision: 1,\n    shortFormatMinValue: 1000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, content.viewCount)), React.createElement(\"span\", {\n    className: \"video-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, content.registerDate ? React.createElement(Moment, {\n    fromNow: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, content.registerDate) : \"알수 없음\"))), React.createElement(\"div\", {\n    className: \"is-flex justify-flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"is-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media-left has-margin-right-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"image is-24x24 is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, channel != null ? React.createElement(\"img\", {\n    className: \"image is-rounded\",\n    src: channel.profileImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    className: \"image has-min-height-24 is-rounded\",\n    src: EMPTY_IMAGE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"media-content align-self-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"fa-0-87x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, channel != null ? channel.youtubeName : \"전체 채널\"))))))));\n};\n\nexport default Store;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/mobile/store/Store.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","faStar","fasStar","FontAwesomeIcon","useHistory","useParams","buildChannelPath","buildQuery","STORE_LIKED","requireUser","fetchUpdateContentLike","SEARCH_TYPE_TAG","updateContentUpdated","Numbers","Moment","setFocusedLocation","MapLocation","EMPTY_IMAGE","Store","channel","content","state","activeChannel","liked","setLiked","contentId","map","changedMapBounds","history","dispatch","updateActiveContent","updateLike","e","origin","updated","user","email","id","stopPropagation","searchTag","tag","confirm","push","pathname","search","query","searchType","page","swLat","sw","lat","swLng","lng","neLat","ne","neLng","background","thumbnailUrl","backgroundPositionY","overflowY","store","name","tagList","viewCount","registerDate","profileImg","youtubeName"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {faStar} from \"@fortawesome/free-solid-svg-icons\";\nimport {faStar as fasStar} from \"@fortawesome/free-regular-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {useHistory, useParams} from \"react-router\";\nimport {buildChannelPath, buildQuery} from \"data/util\";\nimport {STORE_LIKED} from \"assets/styles/colors\";\nimport {requireUser} from \"data/redux/action/user\";\nimport {fetchUpdateContentLike, SEARCH_TYPE_TAG, updateContentUpdated} from \"data/redux/action/content\";\nimport Numbers from \"components/common/youtube/Numbers\";\nimport Moment from \"react-moment\";\nimport {setFocusedLocation} from \"data/redux/action/location\";\nimport MapLocation from \"data/redux/model/MapLocation\";\nimport {EMPTY_IMAGE} from \"assets/styles/const\";\n\nconst Store = ({channel, content}) => {\n    const {activeChannel} = useSelector(state => state.channel);\n    const [liked, setLiked] = useState(content.liked);\n    const {contentId} = useParams();\n    const {changedMapBounds} = useSelector(state => state.map);\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        setLiked(content.liked)\n    }, [content])\n\n    const updateActiveContent = (content) => {\n        dispatch(setFocusedLocation(new MapLocation(content)));\n    };\n\n    const updateLike = (e) => {\n        let origin = liked;\n        let updated = !liked;\n        dispatch(requireUser((user) => {\n            setLiked(updated);\n            dispatch(fetchUpdateContentLike(user.email, content.id, updated,() => {\n                dispatch(updateContentUpdated(content, {liked: updated}));\n            },() => setLiked(origin)));\n        }));\n        e.stopPropagation();\n    }\n\n    const searchTag = (e, tag) => {\n        if (!confirm(\"태그: \" + tag + \"(으)로 검색하시겠습니까?\")) {\n            e.stopPropagation()\n            return ;\n        }\n        history.push({\n            pathname: buildChannelPath(activeChannel),\n            search: buildQuery({\n                query: tag,\n                searchType: SEARCH_TYPE_TAG,\n                page: 1,\n                swLat: changedMapBounds.sw.lat,\n                swLng: changedMapBounds.sw.lng,\n                neLat: changedMapBounds.ne.lat,\n                neLng: changedMapBounds.ne.lng\n            })\n        });\n        e.stopPropagation();\n    }\n\n    return (\n        <>\n            <div className=\"video media has-padding-top-10 has-padding-bottom-10 is-marginless \">\n                <figure className=\"media-left\" onClick={() => updateActiveContent(content)}>\n                    <div className=\"image is-120x68 has-margin-top-5\">\n                        <div style={{background: `url(${content.thumbnailUrl}) no-repeat`, backgroundPositionY: \"50%\",}}\n                             className=\"image is-full-width is-full-height is-background-size-cover has-border-radius-10\" />\n                    </div>\n                </figure>\n                <div style={{overflowY: \"hidden\"}} className=\"media-content\">\n                    <div className=\"content\"  onClick={() => updateActiveContent(content)}>\n                        <p className=\"fa-1x text-overflow-ellipsis has-margin-bottom-5\">\n                            <FontAwesomeIcon\n                                icon={liked ? faStar : fasStar}\n                                className=\"video-like-btn-mobile\"\n                                color={liked ? STORE_LIKED : \"\"}\n                                size={'sm'}\n                                onClick={updateLike} />\n                            <strong>{content.store.name}</strong>\n\n                        </p>\n                        <p className=\"has-text-left is-marginless\">\n                            {content.tagList.map(tag => {\n                                return <span key={tag} className=\"fa-0-77x has-text-link\" onClick={(e) => searchTag(e, tag)}>#{tag}</span>\n                            })}\n                        </p>\n                        <p className=\"has-text-left has-text-grey-light is-marginless fa-0-87x\">\n                            <small className=\"has-text-weight-semibold\">\n                            <span className=\"video-view-count\">\n                                <Numbers prefix=\"조회수 \" postfix=\"회\" shorten={true} shortenPrecision={1} shortFormatMinValue={1000}>{content.viewCount}</Numbers>\n                            </span>\n                                <span className=\"video-date\">\n                                {content.registerDate ? (<Moment fromNow>{content.registerDate}</Moment>) : \"알수 없음\"}\n                            </span>\n                            </small>\n                        </p>\n                        <div className=\"is-flex justify-flex-start\">\n                            <div className=\"is-flex\">\n                                <div className=\"media-left has-margin-right-10\">\n                                    <figure className=\"image is-24x24 is-marginless\">\n                                        {channel != null\n                                            ? <img className=\"image is-rounded\" src={channel.profileImg}/>\n                                            :<img className=\"image has-min-height-24 is-rounded\" src={EMPTY_IMAGE}/> }\n                                    </figure>\n                                </div>\n                                <div className=\"media-content align-self-center\">\n                                    <p className=\"fa-0-87x\">\n                                        {channel != null ? channel.youtubeName : \"전체 채널\"}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};\nexport default Store;"]},"metadata":{},"sourceType":"module"}