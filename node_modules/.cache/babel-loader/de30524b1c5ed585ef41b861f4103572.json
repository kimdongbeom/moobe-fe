{"ast":null,"code":"var _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/video/Video.jsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setActiveContent, showOverlayContent } from \"../../../redux/action/content\";\nimport { setMapCenter } from \"../../../redux/action/map\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport { buildContentPath } from \"../../../redux/reducers/util\";\nimport { toString as _toString } from 'lodash';\n\nconst Video = ({\n  content\n}) => {\n  const _useSelector = useSelector(state => state.channel),\n        activeChannel = _useSelector.activeChannel;\n\n  const history = useHistory();\n\n  const _useParams = useParams(),\n        contentId = _useParams.contentId;\n\n  const updateActiveContent = content => {\n    if (contentId !== _toString(content.id)) {\n      history.push(buildContentPath(activeChannel, content));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"video media has-padding-bottom-20 is-marginless \",\n    onClick: () => updateActiveContent(content),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"media-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"image is-120x68\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"image thumbnail\",\n    src: content.thumbnailUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"media-content overflow-hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"is-marginless text-overflow-ellipsis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    className: \"has-cursor-pointer video-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, content.title)), React.createElement(\"p\", {\n    className: \"has-text-right has-text-grey-light is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    className: \"has-text-weight-semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"2019. 8. 21.\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, content.tagList.map(tag => {\n    return React.createElement(\"span\", {\n      key: tag,\n      className: \"is-size-7 has-text-link has-cursor-pointer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, tag);\n  }))))));\n};\n\nexport default Video;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/video/Video.jsx"],"names":["React","useDispatch","useSelector","setActiveContent","showOverlayContent","setMapCenter","useHistory","useLocation","useParams","buildContentPath","toString","_toString","Video","content","state","channel","activeChannel","history","contentId","updateActiveContent","id","push","thumbnailUrl","title","tagList","map","tag"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,gBAAR,EAA0BC,kBAA1B,QAAmD,+BAAnD;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,SAAQC,UAAR,EAAoBC,WAApB,EAAiCC,SAAjC,QAAiD,cAAjD;AACA,SAAQC,gBAAR,QAA+B,8BAA/B;AACA,SAAQC,QAAQ,IAAIC,SAApB,QAAoC,QAApC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA,uBACDX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,OAAhB,CADV;AAAA,QAClBC,aADkB,gBAClBA,aADkB;;AAEzB,QAAMC,OAAO,GAAGX,UAAU,EAA1B;;AAFyB,qBAGLE,SAAS,EAHJ;AAAA,QAGlBU,SAHkB,cAGlBA,SAHkB;;AAIzB,QAAMC,mBAAmB,GAAIN,OAAD,IAAa;AACrC,QAAIK,SAAS,KAAKP,SAAS,CAACE,OAAO,CAACO,EAAT,CAA3B,EAAyC;AACrCH,MAAAA,OAAO,CAACI,IAAR,CAAaZ,gBAAgB,CAACO,aAAD,EAAgBH,OAAhB,CAA7B;AACH;AACJ,GAJD;;AAKA,SACI,0CACI;AAAK,IAAA,SAAS,EAAC,kDAAf;AAAkE,IAAA,OAAO,EAAE,MAAMM,mBAAmB,CAACN,OAAD,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,GAAG,EAAEA,OAAO,CAACS,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,sCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,gCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDT,OAAO,CAACU,KAA5D,CADJ,CADJ,EAII;AAAG,IAAA,SAAS,EAAC,kDAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,OAAO,CAACW,OAAR,CAAgBC,GAAhB,CAAoBC,GAAG,IAAI;AACxB,WAAO;AAAM,MAAA,GAAG,EAAEA,GAAX;AAAgB,MAAA,SAAS,EAAC,4CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwEA,GAAxE,CAAP;AACH,GAFA,CADL,CAPJ,CADJ,CANJ,CADJ,CADJ;AA4BH,CArCD;;AAsCA,eAAed,KAAf","sourcesContent":["import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setActiveContent, showOverlayContent} from \"../../../redux/action/content\";\nimport {setMapCenter} from \"../../../redux/action/map\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport {buildContentPath} from \"../../../redux/reducers/util\";\nimport {toString as _toString} from 'lodash';\n\nconst Video = ({content}) => {\n    const {activeChannel} = useSelector(state => state.channel);\n    const history = useHistory();\n    const {contentId} = useParams();\n    const updateActiveContent = (content) => {\n        if (contentId !== _toString(content.id)) {\n            history.push(buildContentPath(activeChannel, content))\n        }\n    };\n    return (\n        <>\n            <div className=\"video media has-padding-bottom-20 is-marginless \" onClick={() => updateActiveContent(content)}>\n                <figure className=\"media-left\">\n                    <p className=\"image is-120x68\">\n                        <img className=\"image thumbnail\" src={content.thumbnailUrl} />\n                    </p>\n                </figure>\n                <div className=\"media-content overflow-hidden\">\n                    <div className=\"content\">\n                        <p className=\"is-marginless text-overflow-ellipsis\">\n                            <strong className=\"has-cursor-pointer video-title\">{content.title}</strong>\n                        </p>\n                        <p className=\"has-text-right has-text-grey-light is-marginless\">\n                            <small className=\"has-text-weight-semibold\">2019. 8. 21.</small>\n                        </p>\n                        <p>\n                            {content.tagList.map(tag => {\n                                return <span key={tag} className=\"is-size-7 has-text-link has-cursor-pointer\">{tag}</span>\n                            })}\n                        </p>\n                    </div>\n                </div>\n            </div>\n            {/*<div className=\"is-content-divider\" ></div>*/}\n\n        </>\n    )\n};\nexport default Video;"]},"metadata":{},"sourceType":"module"}