{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { isMobile } from \"react-device-detect\";\nexport function getWindowDimensions() {\n  const _window = window,\n        width = _window.innerWidth,\n        height = _window.innerHeight;\n  return {\n    width,\n    height\n  };\n}\nexport const isMobileWidth = () => getWindowDimensions().width < 769;\nexport function initVH() {\n  let vh = getWindowDimensions().height * 0.01;\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n}\nexport function useMobile() {\n  const _useState = useState(isMobile),\n        _useState2 = _slicedToArray(_useState, 2),\n        mobile = _useState2[0],\n        setMobile = _useState2[1];\n\n  const dimensions = useWindowDimensions(); //for responsive height in mobile web.\n\n  useEffect(() => {\n    setTimeout(() => {\n      setMobile(isMobile || isMobileWidth());\n    }, 500); //delay for dimention detected\n  }, [dimensions]);\n  return mobile;\n}\nexport default function useWindowDimensions() {\n  const _useState3 = useState(getWindowDimensions()),\n        _useState4 = _slicedToArray(_useState3, 2),\n        windowDimensions = _useState4[0],\n        setWindowDimensions = _useState4[1];\n\n  useEffect(() => {\n    function handleResize() {\n      let _getWindowDimensions = getWindowDimensions(),\n          width = _getWindowDimensions.width,\n          height = _getWindowDimensions.height;\n\n      setWindowDimensions({\n        width,\n        height\n      });\n      initVH();\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowDimensions;\n}","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/layout/WindowDimensions.jsx"],"names":["React","useState","useEffect","isMobile","getWindowDimensions","window","width","innerWidth","height","innerHeight","isMobileWidth","initVH","vh","document","documentElement","style","setProperty","useMobile","mobile","setMobile","dimensions","useWindowDimensions","setTimeout","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AAEA,OAAO,SAASC,mBAAT,GAA+B;AAAA,kBACiBC,MADjB;AAAA,QACdC,KADc,WAC1BC,UAD0B;AAAA,QACMC,MADN,WACPC,WADO;AAElC,SAAO;AACHH,IAAAA,KADG;AAEHE,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,MAAME,aAAa,GAAG,MAAMN,mBAAmB,GAAGE,KAAtB,GAA8B,GAA1D;AAEP,OAAO,SAASK,MAAT,GAAkB;AACrB,MAAIC,EAAE,GAAGR,mBAAmB,GAAGI,MAAtB,GAA+B,IAAxC;AACAK,EAAAA,QAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,WAA/B,CAA2C,MAA3C,EAAoD,GAAEJ,EAAG,IAAzD;AACH;AAED,OAAO,SAASK,SAAT,GAAqB;AAAA,oBACKhB,QAAQ,CAACE,QAAD,CADb;AAAA;AAAA,QACjBe,MADiB;AAAA,QACTC,SADS;;AAExB,QAAMC,UAAU,GAAGC,mBAAmB,EAAtC,CAFwB,CAEiB;;AACzCnB,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,UAAU,CAAC,MAAM;AACbH,MAAAA,SAAS,CAAChB,QAAQ,IAAIO,aAAa,EAA1B,CAAT;AACH,KAFS,EAEP,GAFO,CAAV,CADY,CAGJ;AACX,GAJQ,EAIN,CAACU,UAAD,CAJM,CAAT;AAMA,SAAOF,MAAP;AACH;AAED,eAAe,SAASG,mBAAT,GAA+B;AAAA,qBACMpB,QAAQ,CAACG,mBAAmB,EAApB,CADd;AAAA;AAAA,QACnCmB,gBADmC;AAAA,QACjBC,mBADiB;;AAG1CtB,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASuB,YAAT,GAAwB;AAAA,iCACErB,mBAAmB,EADrB;AAAA,UACfE,KADe,wBACfA,KADe;AAAA,UACRE,MADQ,wBACRA,MADQ;;AAEpBgB,MAAAA,mBAAmB,CAAC;AAAClB,QAAAA,KAAD;AAAQE,QAAAA;AAAR,OAAD,CAAnB;AACAG,MAAAA,MAAM;AACT;;AAEDN,IAAAA,MAAM,CAACqB,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMpB,MAAM,CAACsB,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACH,GATQ,EASN,EATM,CAAT;AAWA,SAAOF,gBAAP;AACH","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {isMobile} from \"react-device-detect\";\n\nexport function getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height,\n    };\n}\n\nexport const isMobileWidth = () => getWindowDimensions().width < 769;\n\nexport function initVH() {\n    let vh = getWindowDimensions().height * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n}\n\nexport function useMobile() {\n    const [mobile, setMobile]  = useState(isMobile);\n    const dimensions = useWindowDimensions() //for responsive height in mobile web.\n    useEffect(() => {\n        setTimeout(() => {\n            setMobile(isMobile || isMobileWidth());\n        }, 500) //delay for dimention detected\n    }, [dimensions])\n\n    return mobile;\n}\n\nexport default function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            let {width, height} = getWindowDimensions();\n            setWindowDimensions({width, height});\n            initVH();\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n"]},"metadata":{},"sourceType":"module"}