{"ast":null,"code":"import { MAP_FORCE_CLEAN_MARKER_CLUSTERER, MAP_LOADING_GEOLOCATION_FAIL, MAP_LOADING_GEOLOCATION_FINISHED, MAP_LOADING_GEOLOCATION_STARTED, MAP_LOADING_GEOLOCATION_SUCCESS, MAP_LOADING_MAP_FAIL, MAP_LOADING_MAP_FINISHED, MAP_LOADING_MAP_STARTED, MAP_LOADING_MAP_SUCCESS, MAP_REMOVE_MARKERS_IN_MARKER_CLUSTERER, MAP_RESET_MAP_CENTER_CHANGE, MAP_SEARCH_ON_BOUND_CHANGE, MAP_SET_GEOLOCATION_CENTER, MAP_SET_MAP_BOUNDS_CHANGE, MAP_SET_MAP_CENTER, MAP_SET_MAP_CENTER_CHANGE, MAP_SET_MAP_CENTER_FORCE, MAP_SET_MAP_LEVEL_CHANGE, MAP_SET_MARKER_CLUSTERER } from \"data/redux/action/map\";\nimport { isSimilarLocation, updateObject } from \"data/util\";\nconst initialStateMap = {\n  map: null,\n  mapRef: null,\n  mapLoading: false,\n  errorMapLoading: false,\n  centerLat: null,\n  centerLng: null,\n  mapLevel: 9,\n  refreshCenter: 0,\n  searchOnBoundChange: false,\n  enableGeolocation: false,\n  geoLocationCenterLat: null,\n  geoLocationCenterLng: null,\n  geolocationLoading: false,\n  centerChanged: false,\n  changedCenterLat: null,\n  changedCenterLng: null,\n  mapBounds: {\n    sw: {\n      lat: null,\n      lng: null\n    },\n    ne: {\n      lat: null,\n      lng: null\n    }\n  },\n  markerClusterer: null\n};\n\nconst centerChange = (mapState, changedCenterLat, changedCenterLng) => {\n  const centerChanged = !isSimilarLocation({\n    lat: mapState.centerLat,\n    lng: mapState.centerLng\n  }, {\n    lat: changedCenterLat,\n    lng: changedCenterLng\n  }, 2);\n  return updateObject(mapState, {\n    centerChanged,\n    changedCenterLat,\n    changedCenterLng\n  });\n};\n\nconst cleanMarkerClusterer = mapState => {\n  if (mapState.markerClusterer) {\n    mapState.markerClusterer.clear();\n  }\n\n  return mapState;\n};\n\nexport default function (mapState = initialStateMap, action) {\n  switch (action.type) {\n    case MAP_SET_MAP_CENTER:\n      return updateObject(mapState, {\n        centerLat: action.latlng.lat,\n        centerLng: action.latlng.lng\n      });\n\n    case MAP_SET_MAP_CENTER_FORCE:\n      return updateObject(mapState, {\n        centerLat: action.latlng.lat,\n        centerLng: action.latlng.lng,\n        refreshCenter: mapState.refreshCenter + 1\n      });\n\n    case MAP_SET_MAP_CENTER_CHANGE:\n      return centerChange(mapState, action.latlng.lat, action.latlng.lng);\n\n    case MAP_SET_MAP_BOUNDS_CHANGE:\n      return updateObject(mapState, {\n        mapBounds: action.mapBounds\n      });\n\n    case MAP_SET_MAP_LEVEL_CHANGE:\n      return updateObject(mapState, {\n        mapLevel: action.level\n      });\n\n    case MAP_RESET_MAP_CENTER_CHANGE:\n      return updateObject(mapState, {\n        centerChanged: false,\n        changedCenterLat: null,\n        changedCenterLng: null\n      });\n\n    case MAP_LOADING_MAP_STARTED:\n      return updateObject(mapState, {\n        mapLoading: true\n      });\n\n    case MAP_LOADING_MAP_FINISHED:\n      return updateObject(mapState, {\n        mapLoading: false\n      });\n\n    case MAP_LOADING_MAP_SUCCESS:\n      return updateObject(mapState, {\n        map: action.map,\n        mapRef: action.mapRef,\n        kakao: action.kakao,\n        errorMapLoading: false\n      });\n\n    case MAP_LOADING_MAP_FAIL:\n      return updateObject(mapState, {\n        map: null,\n        errorMapLoading: true\n      });\n\n    case MAP_SET_GEOLOCATION_CENTER:\n      return updateObject(mapState, {\n        geoLocationCenterLat: action.latlng.lat,\n        geoLocationCenterLng: action.latlng.lng\n      });\n\n    case MAP_LOADING_GEOLOCATION_STARTED:\n      return updateObject(mapState, {\n        geolocationLoading: true\n      });\n\n    case MAP_LOADING_GEOLOCATION_FINISHED:\n      return updateObject(mapState, {\n        geolocationLoading: false\n      });\n\n    case MAP_LOADING_GEOLOCATION_SUCCESS:\n      return updateObject(mapState, {\n        enableGeolocation: true\n      });\n\n    case MAP_LOADING_GEOLOCATION_FAIL:\n      return updateObject(mapState, {\n        enableGeolocation: false\n      });\n\n    case MAP_SEARCH_ON_BOUND_CHANGE:\n      return updateObject(mapState, {\n        searchOnBoundChange: action.searchOnBoundChange\n      });\n\n    case MAP_SET_MARKER_CLUSTERER:\n      return updateObject(mapState, {\n        markerClusterer: action.markerClusterer\n      });\n\n    case MAP_FORCE_CLEAN_MARKER_CLUSTERER:\n      return cleanMarkerClusterer(mapState);\n\n    default:\n      return mapState;\n  }\n}","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/reducers/mapReducer.js"],"names":["MAP_FORCE_CLEAN_MARKER_CLUSTERER","MAP_LOADING_GEOLOCATION_FAIL","MAP_LOADING_GEOLOCATION_FINISHED","MAP_LOADING_GEOLOCATION_STARTED","MAP_LOADING_GEOLOCATION_SUCCESS","MAP_LOADING_MAP_FAIL","MAP_LOADING_MAP_FINISHED","MAP_LOADING_MAP_STARTED","MAP_LOADING_MAP_SUCCESS","MAP_REMOVE_MARKERS_IN_MARKER_CLUSTERER","MAP_RESET_MAP_CENTER_CHANGE","MAP_SEARCH_ON_BOUND_CHANGE","MAP_SET_GEOLOCATION_CENTER","MAP_SET_MAP_BOUNDS_CHANGE","MAP_SET_MAP_CENTER","MAP_SET_MAP_CENTER_CHANGE","MAP_SET_MAP_CENTER_FORCE","MAP_SET_MAP_LEVEL_CHANGE","MAP_SET_MARKER_CLUSTERER","isSimilarLocation","updateObject","initialStateMap","map","mapRef","mapLoading","errorMapLoading","centerLat","centerLng","mapLevel","refreshCenter","searchOnBoundChange","enableGeolocation","geoLocationCenterLat","geoLocationCenterLng","geolocationLoading","centerChanged","changedCenterLat","changedCenterLng","mapBounds","sw","lat","lng","ne","markerClusterer","centerChange","mapState","cleanMarkerClusterer","clear","action","type","latlng","level","kakao"],"mappings":"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","sourcesContent":["import {\n    MAP_FORCE_CLEAN_MARKER_CLUSTERER,\n    MAP_LOADING_GEOLOCATION_FAIL,\n    MAP_LOADING_GEOLOCATION_FINISHED,\n    MAP_LOADING_GEOLOCATION_STARTED,\n    MAP_LOADING_GEOLOCATION_SUCCESS,\n    MAP_LOADING_MAP_FAIL,\n    MAP_LOADING_MAP_FINISHED,\n    MAP_LOADING_MAP_STARTED,\n    MAP_LOADING_MAP_SUCCESS, MAP_REMOVE_MARKERS_IN_MARKER_CLUSTERER,\n    MAP_RESET_MAP_CENTER_CHANGE,\n    MAP_SEARCH_ON_BOUND_CHANGE,\n    MAP_SET_GEOLOCATION_CENTER,\n    MAP_SET_MAP_BOUNDS_CHANGE,\n    MAP_SET_MAP_CENTER,\n    MAP_SET_MAP_CENTER_CHANGE,\n    MAP_SET_MAP_CENTER_FORCE, MAP_SET_MAP_LEVEL_CHANGE, MAP_SET_MARKER_CLUSTERER\n} from \"data/redux/action/map\";\n\nimport {isSimilarLocation, updateObject} from \"data/util\";\n\nconst initialStateMap = {\n    map: null,\n    mapRef: null,\n    mapLoading: false,\n    errorMapLoading: false,\n    centerLat: null,\n    centerLng: null,\n    mapLevel: 9,\n    refreshCenter: 0,\n    searchOnBoundChange: false,\n    enableGeolocation: false,\n    geoLocationCenterLat: null,\n    geoLocationCenterLng: null,\n    geolocationLoading: false,\n    centerChanged: false,\n    changedCenterLat: null,\n    changedCenterLng: null,\n    mapBounds: {\n        sw: {\n            lat: null,\n            lng: null\n        },\n        ne: {\n            lat: null,\n            lng: null\n        }\n    },\n    markerClusterer: null,\n};\n\nconst centerChange = (mapState, changedCenterLat, changedCenterLng) => {\n    const centerChanged = !isSimilarLocation({lat: mapState.centerLat, lng: mapState.centerLng}, {lat: changedCenterLat, lng: changedCenterLng}, 2);\n    return updateObject(mapState, {centerChanged, changedCenterLat, changedCenterLng});\n}\n\nconst cleanMarkerClusterer = (mapState) => {\n    if (mapState.markerClusterer) {\n        mapState.markerClusterer.clear();\n    }\n    return mapState;\n}\nexport default function(mapState = initialStateMap, action) {\n    switch(action.type) {\n        case MAP_SET_MAP_CENTER : return updateObject(mapState, {centerLat: action.latlng.lat, centerLng: action.latlng.lng});\n        case MAP_SET_MAP_CENTER_FORCE : return updateObject(mapState, {centerLat: action.latlng.lat, centerLng: action.latlng.lng, refreshCenter: mapState.refreshCenter + 1});\n        case MAP_SET_MAP_CENTER_CHANGE : return centerChange(mapState, action.latlng.lat, action.latlng.lng)\n        case MAP_SET_MAP_BOUNDS_CHANGE : return updateObject(mapState, {mapBounds: action.mapBounds});\n        case MAP_SET_MAP_LEVEL_CHANGE : return updateObject(mapState, {mapLevel: action.level});\n        case MAP_RESET_MAP_CENTER_CHANGE : return updateObject(mapState, {centerChanged: false, changedCenterLat: null, changedCenterLng: null});\n        case MAP_LOADING_MAP_STARTED : return updateObject(mapState, {mapLoading: true});\n        case MAP_LOADING_MAP_FINISHED : return updateObject(mapState, {mapLoading: false});\n        case MAP_LOADING_MAP_SUCCESS : return updateObject(mapState, {map: action.map, mapRef: action.mapRef, kakao: action.kakao, errorMapLoading: false});\n        case MAP_LOADING_MAP_FAIL : return updateObject(mapState, {map: null, errorMapLoading: true});\n        case MAP_SET_GEOLOCATION_CENTER : return updateObject(mapState, {geoLocationCenterLat: action.latlng.lat, geoLocationCenterLng: action.latlng.lng});\n        case MAP_LOADING_GEOLOCATION_STARTED : return updateObject(mapState, {geolocationLoading: true});\n        case MAP_LOADING_GEOLOCATION_FINISHED : return updateObject(mapState, {geolocationLoading: false});\n        case MAP_LOADING_GEOLOCATION_SUCCESS : return updateObject(mapState, {enableGeolocation: true});\n        case MAP_LOADING_GEOLOCATION_FAIL : return updateObject(mapState, {enableGeolocation: false});\n        case MAP_SEARCH_ON_BOUND_CHANGE : return updateObject(mapState, {searchOnBoundChange: action.searchOnBoundChange});\n        case MAP_SET_MARKER_CLUSTERER : return updateObject(mapState, {markerClusterer: action.markerClusterer});\n        case MAP_FORCE_CLEAN_MARKER_CLUSTERER : return cleanMarkerClusterer(mapState);\n        default : return mapState;\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}