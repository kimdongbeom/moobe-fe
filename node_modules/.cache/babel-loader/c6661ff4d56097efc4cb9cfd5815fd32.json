{"ast":null,"code":"import _objectSpread from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/content/ContentDetail.jsx\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport YouTube from \"react-youtube\";\nimport CommentList from \"components/common/comment/CommentList\";\nimport { useHistory } from \"react-router\";\nimport { buildContentPath, deepCompareSetState } from \"data/util\";\nimport { Sticky, StickyContainer } from \"react-sticky\";\nimport ScrollManager from \"components/common/scroll/ScrollManager\";\n\nconst ContentDetail = () => {\n  const _useState = useState({\n    isSticky: false,\n    calculatedHeight: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        stickyInfo = _useState2[0],\n        setStickyInfo = _useState2[1];\n\n  const _useSelector = useSelector(state => state.content),\n        activeContent = _useSelector.activeContent;\n\n  const _useSelector2 = useSelector(state => state.channel),\n        activeChannel = _useSelector2.activeChannel;\n\n  const history = useHistory();\n\n  const resetActiveContent = e => {\n    history.push({\n      pathname: buildContentPath(activeChannel, null),\n      search: location.search\n    });\n  };\n\n  return React.createElement(ScrollManager, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(StickyContainer, {\n    className: \"columns flex-column is-paddingless box is-fullheight-with-navbar-fixed-height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column is-full is-marginless is-bottom-borderless text-overflow-ellipsis\",\n    style: {\n      'lineHeight': '2'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"back-content-detail is-pulled-left has-margin-right-15\",\n    icon: faChevronLeft,\n    size: '2x',\n    onClick: resetActiveContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, activeContent.title))), React.createElement(Sticky, {\n    relative: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, ({\n    style,\n    isSticky,\n    calculatedHeight\n  }) => {\n    deepCompareSetState({\n      isSticky,\n      calculatedHeight\n    }, setStickyInfo);\n    let zIndex = isSticky ? 10 : 0;\n    return React.createElement(\"div\", {\n      style: _objectSpread({}, style, {\n        zIndex\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(YouTube, {\n      videoId: activeContent.videoLinkId // defaults -> null\n      ,\n      id: activeContent.videoLinkId // defaults -> null\n      ,\n      className: \"youtube-container\" // defaults -> null\n      ,\n      containerClassName: \"column is-full is-marginless is-paddingless is-top-borderless\" // defaults -> ''\n      // opts={opts}                        // defaults -> {}\n      // onReady={func}                    // defaults -> noop\n      // onPlay={func}                     // defaults -> noop\n      // onPause={func}                    // defaults -> noop\n      // onEnd={func}                      // defaults -> noop\n      // onError={func}                    // defaults -> noop\n      // onStateChange={func}              // defaults -> noop\n      // onPlaybackRateChange={func}       // defaults -> noop\n      // onPlaybackQualityChange={func}    // defaults -> noop\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }), React.createElement(CommentList, {\n    stickyInfo: stickyInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n};\n\nexport default ContentDetail;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/content/ContentDetail.jsx"],"names":["React","useState","useDispatch","useSelector","FontAwesomeIcon","faChevronLeft","YouTube","CommentList","useHistory","buildContentPath","deepCompareSetState","Sticky","StickyContainer","ScrollManager","ContentDetail","isSticky","calculatedHeight","stickyInfo","setStickyInfo","state","content","activeContent","channel","activeChannel","history","resetActiveContent","e","push","pathname","search","location","title","style","zIndex","videoLinkId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,aAAR,QAA4B,mCAA5B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,QAAoD,WAApD;AACA,SAAQC,MAAR,EAAgBC,eAAhB,QAAsC,cAAtC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA,oBACYb,QAAQ,CAAC;AACzCc,IAAAA,QAAQ,EAAE,KAD+B;AAEzCC,IAAAA,gBAAgB,EAAE;AAFuB,GAAD,CADpB;AAAA;AAAA,QACjBC,UADiB;AAAA,QACLC,aADK;;AAAA,uBAMAf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,OAAhB,CANX;AAAA,QAMjBC,aANiB,gBAMjBA,aANiB;;AAAA,wBAOAlB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACG,OAAhB,CAPX;AAAA,QAOjBC,aAPiB,iBAOjBA,aAPiB;;AAQxB,QAAMC,OAAO,GAAGhB,UAAU,EAA1B;;AACA,QAAMiB,kBAAkB,GAAIC,CAAD,IAAO;AAC9BF,IAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAEnB,gBAAgB,CAACc,aAAD,EAAgB,IAAhB,CADjB;AAETM,MAAAA,MAAM,EAAEC,QAAQ,CAACD;AAFR,KAAb;AAIH,GALD;;AAOA,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,+EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,0EAAf;AAA0F,IAAA,KAAK,EAAE;AAAC,oBAAc;AAAf,KAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,wDAA3B;AAAoF,IAAA,IAAI,EAAExB,aAA1F;AAAyG,IAAA,IAAI,EAAE,IAA/G;AAAqH,IAAA,OAAO,EAAEoB,kBAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASJ,aAAa,CAACU,KAAvB,CAAN,CAFJ,CADJ,EAKI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAACC,IAAAA,KAAD;AAAQjB,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAD,KAAyC;AACtCN,IAAAA,mBAAmB,CAAC;AAACK,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAD,EAA+BE,aAA/B,CAAnB;AACA,QAAIe,MAAM,GAAGlB,QAAQ,GAAG,EAAH,GAAQ,CAA7B;AACA,WACI;AAAK,MAAA,KAAK,oBAAMiB,KAAN;AAAaC,QAAAA;AAAb,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,OAAD;AACI,MAAA,OAAO,EAAEZ,aAAa,CAACa,WAD3B,CACyD;AADzD;AAEI,MAAA,EAAE,EAAEb,aAAa,CAACa,WAFtB,CAEyD;AAFzD;AAGI,MAAA,SAAS,EAAC,mBAHd,CAGiD;AAHjD;AAII,MAAA,kBAAkB,EAAC,+DAJvB,CAI6F;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAmBH,GAvBL,CALJ,EA8BI,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEjB,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,CADJ,CADJ;AAqCH,CArDD;;AAuDA,eAAeH,aAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronLeft} from \"@fortawesome/free-solid-svg-icons\";\nimport YouTube from \"react-youtube\";\nimport CommentList from \"components/common/comment/CommentList\";\nimport {useHistory} from \"react-router\";\nimport {buildContentPath, deepCompareSetState} from \"data/util\";\nimport {Sticky, StickyContainer} from \"react-sticky\";\nimport ScrollManager from \"components/common/scroll/ScrollManager\";\n\nconst ContentDetail = () => {\n    const [stickyInfo, setStickyInfo] = useState({\n        isSticky: false,\n        calculatedHeight: 0\n    });\n\n    const {activeContent} = useSelector(state => state.content);\n    const {activeChannel} = useSelector(state => state.channel);\n    const history = useHistory();\n    const resetActiveContent = (e) => {\n        history.push({\n            pathname: buildContentPath(activeChannel, null),\n            search: location.search\n        });\n    };\n\n    return (\n        <ScrollManager>\n            <StickyContainer className=\"columns flex-column is-paddingless box is-fullheight-with-navbar-fixed-height\">\n                <div className=\"column is-full is-marginless is-bottom-borderless text-overflow-ellipsis\" style={{'lineHeight': '2'}}>\n                    <FontAwesomeIcon className=\"back-content-detail is-pulled-left has-margin-right-15\" icon={faChevronLeft} size={'2x'} onClick={resetActiveContent}/>\n                    <span><strong>{activeContent.title}</strong></span>\n                </div>\n                <Sticky relative={true}>\n                    {({style, isSticky, calculatedHeight}) => {\n                        deepCompareSetState({isSticky, calculatedHeight}, setStickyInfo);\n                        let zIndex = isSticky ? 10 : 0;\n                        return (\n                            <div style={{...style, zIndex}}>\n                            <YouTube\n                                videoId={activeContent.videoLinkId}                  // defaults -> null\n                                id={activeContent.videoLinkId}                       // defaults -> null\n                                className=\"youtube-container\"                // defaults -> null\n                                containerClassName=\"column is-full is-marginless is-paddingless is-top-borderless\"       // defaults -> ''\n                                // opts={opts}                        // defaults -> {}\n                                // onReady={func}                    // defaults -> noop\n                                // onPlay={func}                     // defaults -> noop\n                                // onPause={func}                    // defaults -> noop\n                                // onEnd={func}                      // defaults -> noop\n                                // onError={func}                    // defaults -> noop\n                                // onStateChange={func}              // defaults -> noop\n                                // onPlaybackRateChange={func}       // defaults -> noop\n                                // onPlaybackQualityChange={func}    // defaults -> noop\n                            />\n                            </div>\n                        )\n                    }}\n                </Sticky>\n                <CommentList stickyInfo={stickyInfo}/>\n            </StickyContainer>\n        </ScrollManager>\n\n    )\n};\n\nexport default ContentDetail;"]},"metadata":{},"sourceType":"module"}