{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/KakaoMap.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loadingMapFinished, loadingMapStarted, loadingMapSuccess, setMapBoundChanged, setMapLevel } from \"data/redux/action/map\";\nimport { initVH } from \"components/common/layout/WindowDimensions\";\nimport { isSimilarLocation, nullFunction } from \"data/util\";\nimport { initMapLevel } from \"data/redux/reducers/mapReducer\";\nexport const MapContext = React.createContext({});\n\nconst KakaoMap = props => {\n  const _useState = useState({\n    map: null,\n    kakao: props.kakao\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const dispatch = useDispatch();\n\n  const addZoomControl = (map, kakao, zoom) => {\n    if (zoom) {\n      map.addControl(new kakao.maps.ZoomControl(), kakao.maps.ControlPosition[zoom]);\n    }\n  };\n\n  const addMapTypeControl = (map, kakao, mapType) => {\n    if (mapType) {\n      map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition[mapType]);\n    }\n  };\n\n  const setLevel = (map, kakao, level) => {//TODO?\n  };\n\n  const setLatLngBounds = (map, kakao, bounds, boundMargins) => {\n    if (bounds) {\n      const latLngBounds = new kakao.maps.LatLngBounds();\n      bounds.forEach(b => {\n        latLngBounds.extend(new kakao.maps.LatLng(b.lat, b.lng));\n      });\n\n      if (boundMargins) {\n        map.setBounds(latLngBounds, ...boundMargins);\n      } else {\n        map.setBounds(latLngBounds, -50, -50, -50, -50);\n      }\n    }\n  };\n\n  const handleLoaded = useCallback(node => {\n    const kakao = props.kakao,\n          onZoomChange = props.onZoomChange,\n          onZoomChangeStart = props.onZoomChangeStart,\n          onCenterChange = props.onCenterChange,\n          onBoundsChange = props.onBoundsChange;\n    const _props$options = props.options,\n          lat = _props$options.lat,\n          lng = _props$options.lng,\n          level = _props$options.level,\n          zoom = _props$options.zoom,\n          mapType = _props$options.mapType,\n          bounds = _props$options.bounds,\n          boundMargins = _props$options.boundMargins;\n\n    if (state.map || node === null) {\n      return;\n    }\n\n    initVH(); //initial viewport height\n\n    dispatch(loadingMapStarted());\n    const map = new kakao.maps.Map(node, {\n      level: level || 9,\n      center: new kakao.maps.LatLng(lat, lng)\n    });\n    map.setCopyrightPosition(kakao.maps.CopyrightPosition.BOTTOMRIGHT, true);\n    map.setZoomable(true);\n    addZoomControl(map, kakao, zoom);\n    addMapTypeControl(map, kakao, mapType);\n    setLatLngBounds(map, kakao, bounds, boundMargins);\n\n    const zoomChange = () => {\n      if (onZoomChange) onZoomChange(map);\n    };\n\n    const zoomChangeStart = () => {\n      if (onZoomChangeStart) onZoomChangeStart(map);\n    };\n\n    const centerChange = () => {\n      if (onCenterChange) onCenterChange(map);\n    };\n\n    const boundsChange = () => {\n      if (onBoundsChange) onBoundsChange(map);\n    };\n\n    kakao.maps.event.addListener(map, \"zoom_changed\", zoomChange);\n    kakao.maps.event.addListener(map, 'zoom_start', zoomChangeStart);\n    kakao.maps.event.addListener(map, \"center_changed\", centerChange);\n    kakao.maps.event.addListener(map, \"bounds_changed\", boundsChange);\n    setState({\n      map,\n      kakao\n    });\n    dispatch(setMapLevel(map.getLevel()));\n\n    if (bounds) {\n      let initBounds = map.getBounds();\n      let sw = initBounds.getSouthWest(),\n          ne = initBounds.getNorthEast();\n      dispatch(setMapBoundChanged({\n        swLat: sw.getLat(),\n        swLng: sw.getLng(),\n        neLat: ne.getLat(),\n        neLng: ne.getLng()\n      }));\n    } else {\n      //set initial map bounds\n      let bounds = map.getBounds();\n      let sw = bounds.getSouthWest(),\n          ne = bounds.getNorthEast();\n      dispatch(setMapBoundChanged({\n        swLat: sw.getLat(),\n        swLng: sw.getLng(),\n        neLat: ne.getLat(),\n        neLng: ne.getLng()\n      }));\n    }\n\n    dispatch(loadingMapSuccess(map, node, kakao));\n    dispatch(loadingMapFinished());\n    return () => {\n      kakao.maps.event.removeListener(map, \"zoom_changed\", zoomChange);\n      kakao.maps.event.removeListener(map, \"center_changed\", centerChange);\n      kakao.maps.event.removeListener(map, \"bounds_changed\", boundsChange);\n    };\n  }, []);\n  useEffect(() => {\n    const _props$options2 = props.options,\n          lat = _props$options2.lat,\n          lng = _props$options2.lng,\n          level = _props$options2.level,\n          refreshCenter = _props$options2.refreshCenter;\n\n    if (!state.map) {\n      return;\n    }\n\n    const map = state.map,\n          kakao = state.kakao; // 지도 레벨이 10이상일때 animation없음.\n\n    if (map.getLevel() > 10 || level == initMapLevel) {\n      map.setCenter(new kakao.maps.LatLng(lat, lng));\n    } else {\n      setMapCenterSmooth(lat, lng, 300, () => {\n        if (!isSimilarLocation({\n          lat,\n          lng\n        }, {\n          lat: map.getCenter().getLat(),\n          lng: map.getCenter().getLng()\n        })) {\n          // if failed to move center retry panto after 0.5s\n          setMapCenterSmooth(lat, lng, 500);\n        }\n      });\n    }\n  }, [props.options.lat, props.options.lng, props.options.refreshCenter]);\n  useEffect(() => {\n    const level = props.options.level;\n\n    if (!state.map) {\n      return;\n    }\n\n    const map = state.map,\n          kakao = state.kakao;\n\n    if (map.getLevel() != level) {\n      map.setLevel(level);\n    }\n  }, [props.options.level]);\n\n  const setMapCenterSmooth = (lat, lng, delay, callback = nullFunction) => {\n    if (!state.map) {\n      return;\n    }\n\n    const map = state.map,\n          kakao = state.kakao;\n    setTimeout(() => {\n      map.panTo(new kakao.maps.LatLng(lat, lng));\n      if (callback) callback();\n    }, delay);\n  };\n\n  useEffect(() => {\n    const _props$options3 = props.options,\n          bounds = _props$options3.bounds,\n          boundMargins = _props$options3.boundMargins;\n\n    if (!state.map) {\n      return;\n    }\n\n    setLatLngBounds(state.map, state.kakao, bounds, boundMargins);\n  }, [props.options.bounds]);\n  return React.createElement(\"div\", {\n    className: props.className,\n    id: \"kakao-map\",\n    ref: handleLoaded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, state.map === null ? null : React.createElement(MapContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, props.children));\n};\n\nexport default KakaoMap;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/KakaoMap.jsx"],"names":["React","useCallback","useEffect","useState","useDispatch","loadingMapFinished","loadingMapStarted","loadingMapSuccess","setMapBoundChanged","setMapLevel","initVH","isSimilarLocation","nullFunction","initMapLevel","MapContext","createContext","KakaoMap","props","map","kakao","state","setState","dispatch","addZoomControl","zoom","addControl","maps","ZoomControl","ControlPosition","addMapTypeControl","mapType","MapTypeControl","setLevel","level","setLatLngBounds","bounds","boundMargins","latLngBounds","LatLngBounds","forEach","b","extend","LatLng","lat","lng","setBounds","handleLoaded","node","onZoomChange","onZoomChangeStart","onCenterChange","onBoundsChange","options","Map","center","setCopyrightPosition","CopyrightPosition","BOTTOMRIGHT","setZoomable","zoomChange","zoomChangeStart","centerChange","boundsChange","event","addListener","getLevel","initBounds","getBounds","sw","getSouthWest","ne","getNorthEast","swLat","getLat","swLng","getLng","neLat","neLng","removeListener","refreshCenter","setCenter","setMapCenterSmooth","getCenter","delay","callback","setTimeout","panTo","className","children"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {\n    loadingMapFinished,\n    loadingMapStarted,\n    loadingMapSuccess,\n    setMapBoundChanged,\n    setMapLevel,\n} from \"data/redux/action/map\";\nimport {initVH} from \"components/common/layout/WindowDimensions\";\nimport {isSimilarLocation, nullFunction} from \"data/util\";\nimport {initMapLevel} from \"data/redux/reducers/mapReducer\";\n\nexport const MapContext = React.createContext({});\n\nconst KakaoMap = props => {\n    const [state, setState] = useState({\n        map: null,\n        kakao: props.kakao\n    });\n    const dispatch = useDispatch();\n    const addZoomControl = (map, kakao, zoom) => {\n        if (zoom) {\n            map.addControl(\n                new kakao.maps.ZoomControl(),\n                kakao.maps.ControlPosition[zoom]\n            );\n        }\n    };\n\n    const addMapTypeControl = (map, kakao, mapType) => {\n        if (mapType) {\n            map.addControl(\n                new kakao.maps.MapTypeControl(),\n                kakao.maps.ControlPosition[mapType]\n            );\n        }\n    };\n\n    const setLevel = (map, kakao, level) => {\n        //TODO?\n    }\n\n    const setLatLngBounds = (map, kakao, bounds, boundMargins) => {\n        if (bounds) {\n            const latLngBounds = new kakao.maps.LatLngBounds();\n            bounds.forEach(b => {\n                latLngBounds.extend(new kakao.maps.LatLng(b.lat, b.lng));\n            });\n            if (boundMargins) {\n                map.setBounds(latLngBounds, ...boundMargins);\n            } else {\n                map.setBounds(latLngBounds, -50, -50, -50, -50);\n            }\n\n        }\n    };\n\n\n    const handleLoaded = useCallback(node => {\n        const { kakao, onZoomChange, onZoomChangeStart, onCenterChange, onBoundsChange } = props;\n        const { lat, lng, level, zoom, mapType, bounds, boundMargins } = props.options;\n        if (state.map || node === null) {\n            return;\n        }\n\n        initVH(); //initial viewport height\n        dispatch(loadingMapStarted());\n        const map = new kakao.maps.Map(node, {\n            level: level || 9,\n            center: new kakao.maps.LatLng(lat, lng),\n        });\n        map.setCopyrightPosition(kakao.maps.CopyrightPosition.BOTTOMRIGHT, true)\n        map.setZoomable(true);\n\n        addZoomControl(map, kakao, zoom);\n        addMapTypeControl(map, kakao, mapType);\n        setLatLngBounds(map, kakao, bounds, boundMargins);\n\n        const zoomChange = () => {\n            if (onZoomChange) onZoomChange(map);\n        };\n        const zoomChangeStart = () => {\n            if (onZoomChangeStart) onZoomChangeStart(map);\n        };\n        const centerChange = () => {\n            if (onCenterChange) onCenterChange(map);\n        };\n        const boundsChange = () => {\n            if (onBoundsChange) onBoundsChange(map);\n        }\n\n        kakao.maps.event.addListener(map, \"zoom_changed\", zoomChange);\n        kakao.maps.event.addListener(map, 'zoom_start',zoomChangeStart);\n        kakao.maps.event.addListener(map, \"center_changed\", centerChange);\n        kakao.maps.event.addListener(map, \"bounds_changed\", boundsChange);\n\n        setState({map, kakao});\n        dispatch(setMapLevel(map.getLevel()))\n        if (bounds) {\n            let initBounds = map.getBounds();\n            let sw = initBounds.getSouthWest(), ne = initBounds.getNorthEast();\n            dispatch(setMapBoundChanged({swLat: sw.getLat(), swLng: sw.getLng(), neLat: ne.getLat(), neLng: ne.getLng()}));\n        } else {\n            //set initial map bounds\n            let bounds = map.getBounds();\n            let sw = bounds.getSouthWest(), ne = bounds.getNorthEast();\n            dispatch(setMapBoundChanged({swLat: sw.getLat(), swLng: sw.getLng(), neLat: ne.getLat(), neLng: ne.getLng()}));\n        }\n        dispatch(loadingMapSuccess(map, node, kakao));\n        dispatch(loadingMapFinished());\n\n        return () => {\n            kakao.maps.event.removeListener(map, \"zoom_changed\", zoomChange);\n            kakao.maps.event.removeListener(map, \"center_changed\", centerChange);\n            kakao.maps.event.removeListener(map, \"bounds_changed\", boundsChange);\n        };\n    }, []);\n\n    useEffect(() => {\n        const { lat, lng, level, refreshCenter } = props.options;\n        if (!state.map) {\n            return ;\n        }\n        const { map, kakao } = state;\n        // 지도 레벨이 10이상일때 animation없음.\n        if (map.getLevel() > 10 || level == initMapLevel) {\n            map.setCenter(new kakao.maps.LatLng(lat, lng));\n        } else {\n            setMapCenterSmooth(lat, lng, 300, () => {\n                if (!isSimilarLocation({lat, lng}, {lat: map.getCenter().getLat(), lng: map.getCenter().getLng()})) {\n                    // if failed to move center retry panto after 0.5s\n                    setMapCenterSmooth(lat, lng, 500)\n                }\n            })\n        }\n    }, [props.options.lat, props.options.lng, props.options.refreshCenter]);\n\n    useEffect(() => {\n        const { level } = props.options;\n        if (!state.map) {\n            return ;\n        }\n        const { map, kakao } = state;\n        if (map.getLevel() != level) {\n            map.setLevel(level);\n        }\n    }, [props.options.level])\n\n    const setMapCenterSmooth = (lat, lng, delay, callback=nullFunction) => {\n        if (!state.map) {\n            return ;\n        }\n        const { map, kakao } = state;\n        setTimeout(() => {\n            map.panTo(new kakao.maps.LatLng(lat, lng));\n            if (callback) callback()\n        }, delay);\n    }\n\n    useEffect(() => {\n        const { bounds, boundMargins } = props.options;\n        if (!state.map) {\n            return ;\n        }\n        setLatLngBounds(state.map, state.kakao, bounds, boundMargins);\n    }, [props.options.bounds]);\n\n    return (\n        <div className={props.className} id=\"kakao-map\" ref={handleLoaded}>\n            {state.map === null ? null : (\n                <MapContext.Provider value={state}>\n                    {props.children}\n                </MapContext.Provider>\n            )}\n        </div>\n    );\n};\n\nexport default KakaoMap;"]},"metadata":{},"sourceType":"module"}