{"ast":null,"code":"import { split as _split, isEmpty as _isEmpty } from 'lodash';\n\nclass Store {\n  constructor(data = {}) {\n    if (data == null) data = {};\n    Object.assign(this, data);\n  }\n\n}\n\nclass ContentMetrics {\n  constructor(data = {}) {\n    if (data == null) data = {};\n    Object.assign(this, data);\n  }\n\n}\n\nclass Content {\n  constructor(data = {}) {\n    if (data == null) data = {};\n    Object.assign(this, data);\n    this.store = new Store(data.store);\n    this.metrics = new ContentMetrics(data.contentsMetrics);\n  }\n\n  get viewCount() {\n    if (_isEmpty(this.metrics)) return 0;\n    return this.metrics.viewCount ? this.metrics.viewCount : 0;\n  }\n\n  get likeCount() {\n    if (_isEmpty(this.metrics)) return 0;\n    return this.metrics.likeCount ? this.metrics.likeCount : 0;\n  }\n\n  get dislikeCount() {\n    if (_isEmpty(this.metrics)) return 0;\n    return this.metrics.dislikeCount ? this.metrics.dislikeCount : 0;\n  }\n\n  get updateRegisterDate() {\n    if (_isEmpty(this.metrics)) return null;\n    return this.metrics.updateRegisterDate;\n  }\n\n  get tagList() {\n    return _split(this.tag, \"#\").filter(s => s !== \"\");\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/model/Content.jsx"],"names":["split","_split","isEmpty","_isEmpty","Store","constructor","data","Object","assign","ContentMetrics","Content","store","metrics","contentsMetrics","viewCount","likeCount","dislikeCount","updateRegisterDate","tagList","tag","filter","s"],"mappings":"AAAA,SAASA,KAAK,IAAIC,MAAlB,EAA0BC,OAAO,IAAIC,QAArC,QAAoD,QAApD;;AAEA,MAAMC,KAAN,CAAY;AAaRC,EAAAA,WAAW,CAACC,IAAI,GAAC,EAAN,EAAU;AACjB,QAAIA,IAAI,IAAI,IAAZ,EAAkBA,IAAI,GAAG,EAAP;AAClBC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;AACH;;AAhBO;;AAmBZ,MAAMG,cAAN,CAAqB;AAMjBJ,EAAAA,WAAW,CAACC,IAAI,GAAC,EAAN,EAAU;AACjB,QAAIA,IAAI,IAAI,IAAZ,EAAkBA,IAAI,GAAG,EAAP;AAClBC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;AACH;;AATgB;;AAYrB,MAAMI,OAAN,CAAc;AAgBVL,EAAAA,WAAW,CAACC,IAAI,GAAC,EAAN,EAAU;AACjB,QAAIA,IAAI,IAAI,IAAZ,EAAkBA,IAAI,GAAG,EAAP;AAClBC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;AACA,SAAKK,KAAL,GAAa,IAAIP,KAAJ,CAAUE,IAAI,CAACK,KAAf,CAAb;AACA,SAAKC,OAAL,GAAe,IAAIH,cAAJ,CAAmBH,IAAI,CAACO,eAAxB,CAAf;AACH;;AAED,MAAIC,SAAJ,GAAgB;AACZ,QAAIX,QAAQ,CAAC,KAAKS,OAAN,CAAZ,EAA4B,OAAO,CAAP;AAC5B,WAAO,KAAKA,OAAL,CAAaE,SAAb,GAAyB,KAAKF,OAAL,CAAaE,SAAtC,GAAkD,CAAzD;AACH;;AAED,MAAIC,SAAJ,GAAgB;AACZ,QAAIZ,QAAQ,CAAC,KAAKS,OAAN,CAAZ,EAA4B,OAAO,CAAP;AAC5B,WAAO,KAAKA,OAAL,CAAaG,SAAb,GAAyB,KAAKH,OAAL,CAAaG,SAAtC,GAAkD,CAAzD;AACH;;AAED,MAAIC,YAAJ,GAAmB;AACf,QAAIb,QAAQ,CAAC,KAAKS,OAAN,CAAZ,EAA4B,OAAO,CAAP;AAC5B,WAAO,KAAKA,OAAL,CAAaI,YAAb,GAA4B,KAAKJ,OAAL,CAAaI,YAAzC,GAAwD,CAA/D;AACH;;AAED,MAAIC,kBAAJ,GAAyB;AACrB,QAAId,QAAQ,CAAC,KAAKS,OAAN,CAAZ,EAA4B,OAAO,IAAP;AAC5B,WAAO,KAAKA,OAAL,CAAaK,kBAApB;AACH;;AAED,MAAIC,OAAJ,GAAc;AACV,WAAOjB,MAAM,CAAC,KAAKkB,GAAN,EAAW,GAAX,CAAN,CAAsBC,MAAtB,CAA6BC,CAAC,IAAIA,CAAC,KAAK,EAAxC,CAAP;AACH;;AA7CS;;AAiDd,eAAeX,OAAf","sourcesContent":["import { split as _split, isEmpty as _isEmpty} from 'lodash';\n\nclass Store {\n    id;\n    contentsId;\n    name;\n    tel;\n    address1;\n    address2;\n    availableTime;\n    latitude;\n    longitude;\n    link;\n    menu;\n\n    constructor(data={}) {\n        if (data == null) data = {};\n        Object.assign(this, data)\n    }\n}\n\nclass ContentMetrics {\n    viewCount;\n    likeCount;\n    dislikeCount;\n    commentCount;\n    updateRegisterDate;\n    constructor(data={}) {\n        if (data == null) data = {};\n        Object.assign(this, data);\n    }\n}\n\nclass Content {\n    id;\n    videoLinkId;\n    channelId;\n    storeId;\n    title;\n    tag;\n    content;\n    registerDate;\n    registerDateMoobe;\n    thumbnailUrl;\n    liked;\n\n    store;\n    metrics;\n\n    constructor(data={}) {\n        if (data == null) data = {};\n        Object.assign(this, data);\n        this.store = new Store(data.store);\n        this.metrics = new ContentMetrics(data.contentsMetrics);\n    }\n\n    get viewCount() {\n        if (_isEmpty(this.metrics)) return 0\n        return this.metrics.viewCount ? this.metrics.viewCount : 0;\n    }\n\n    get likeCount() {\n        if (_isEmpty(this.metrics)) return 0\n        return this.metrics.likeCount ? this.metrics.likeCount : 0;\n    }\n\n    get dislikeCount() {\n        if (_isEmpty(this.metrics)) return 0\n        return this.metrics.dislikeCount ? this.metrics.dislikeCount : 0;\n    }\n\n    get updateRegisterDate() {\n        if (_isEmpty(this.metrics)) return null\n        return this.metrics.updateRegisterDate;\n    }\n\n    get tagList() {\n        return _split(this.tag, \"#\").filter(s => s !== \"\");\n    }\n}\n\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}