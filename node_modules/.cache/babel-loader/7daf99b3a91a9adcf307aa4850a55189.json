{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/KakaoMap.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loadingMapFinished, loadingMapStarted, loadingMapSuccess, setMapBounds, setMapLevel } from \"data/redux/action/map\";\nimport { initVH } from \"components/common/layout/WindowDimensions\";\nimport { isSimilarLocation, nullFunction } from \"data/util\";\nimport { isMobile } from \"react-device-detect\";\nexport const MapContext = React.createContext({});\n\nconst KakaoMap = props => {\n  const _useState = useState({\n    map: null,\n    kakao: props.kakao\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const dispatch = useDispatch();\n\n  const addZoomControl = (map, kakao, zoom) => {\n    if (zoom) {\n      map.addControl(new kakao.maps.ZoomControl(), kakao.maps.ControlPosition[zoom]);\n    }\n  };\n\n  const addMapTypeControl = (map, kakao, mapType) => {\n    if (mapType) {\n      map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition[mapType]);\n    }\n  };\n\n  const setLevel = (map, kakao, level) => {};\n\n  const setLatLngBounds = (map, kakao, bounds) => {\n    if (bounds) {\n      const latLngBounds = new kakao.maps.LatLngBounds();\n      bounds.forEach(b => {\n        latLngBounds.extend(new kakao.maps.LatLng(b.lat, b.lng));\n      });\n      map.setBounds(latLngBounds, -50, -50, -50, -50);\n    }\n  };\n\n  const handleLoaded = useCallback(node => {\n    const kakao = props.kakao,\n          onZoomChange = props.onZoomChange,\n          onZoomChangeStart = props.onZoomChangeStart,\n          onCenterChange = props.onCenterChange,\n          onBoundsChange = props.onBoundsChange;\n    const _props$options = props.options,\n          lat = _props$options.lat,\n          lng = _props$options.lng,\n          level = _props$options.level,\n          zoom = _props$options.zoom,\n          mapType = _props$options.mapType,\n          bounds = _props$options.bounds;\n\n    if (state.map || node === null) {\n      return;\n    }\n\n    initVH(); //initial viewport height\n\n    dispatch(loadingMapStarted());\n    const map = new kakao.maps.Map(node, {\n      level: level || 9,\n      center: new kakao.maps.LatLng(lat, lng)\n    });\n    map.setCopyrightPosition(kakao.maps.CopyrightPosition.BOTTOMRIGHT, true);\n    map.setZoomable(true);\n    addZoomControl(map, kakao, zoom);\n    addMapTypeControl(map, kakao, mapType);\n    setLatLngBounds(map, kakao, bounds);\n\n    const zoomChange = () => {\n      if (onZoomChange) onZoomChange(map);\n    };\n\n    const zoomChangeStart = () => {\n      if (onZoomChangeStart) onZoomChangeStart(map);\n    };\n\n    const centerChange = () => {\n      if (onCenterChange) onCenterChange(map);\n    };\n\n    const boundsChange = () => {\n      if (onBoundsChange) onBoundsChange(map);\n    };\n\n    kakao.maps.event.addListener(map, \"zoom_changed\", zoomChange);\n    kakao.maps.event.addListener(map, 'zoom_start', zoomChangeStart);\n    kakao.maps.event.addListener(map, \"center_changed\", centerChange);\n    kakao.maps.event.addListener(map, \"bounds_changed\", boundsChange);\n    setState({\n      map,\n      kakao\n    });\n    dispatch(setMapLevel(map.getLevel()));\n\n    if (bounds) {\n      let initBounds = map.getBounds();\n      let sw = initBounds.getSouthWest(),\n          ne = initBounds.getNorthEast();\n      dispatch(setMapBounds({\n        swLat: sw.getLat(),\n        swLng: sw.getLng(),\n        neLat: ne.getLat(),\n        neLng: ne.getLng()\n      }));\n    } else {\n      //set initial map bounds\n      let bounds = map.getBounds();\n      let sw = bounds.getSouthWest(),\n          ne = bounds.getNorthEast();\n      dispatch(setMapBounds({\n        swLat: sw.getLat(),\n        swLng: sw.getLng(),\n        neLat: ne.getLat(),\n        neLng: ne.getLng()\n      }));\n    }\n\n    dispatch(loadingMapSuccess(map, node, kakao));\n    dispatch(loadingMapFinished());\n    return () => {\n      kakao.maps.event.removeListener(map, \"zoom_changed\", zoomChange);\n      kakao.maps.event.removeListener(map, \"center_changed\", centerChange);\n      kakao.maps.event.removeListener(map, \"bounds_changed\", boundsChange);\n    };\n  }, []);\n  useEffect(() => {\n    const _props$options2 = props.options,\n          lat = _props$options2.lat,\n          lng = _props$options2.lng,\n          refreshCenter = _props$options2.refreshCenter;\n\n    if (!state.map) {\n      return;\n    }\n\n    const map = state.map,\n          kakao = state.kakao;\n    const zoomLevel = isMobile ? 5 : 6;\n    var level = map.getLevel() > zoomLevel ? zoomLevel : map.getLevel();\n    map.setLevel(level, {\n      anchor: new kakao.maps.LatLng(lat, lng),\n      animate: true\n    });\n    setMapCenterSmooth(lat, lng, 300, () => {\n      if (!isSimilarLocation({\n        lat,\n        lng\n      }, {\n        lat: map.getCenter().getLat(),\n        lng: map.getCenter().getLng()\n      })) {\n        // if failed to move center retry panto after 0.5s\n        setMapCenterSmooth(lat, lng, 500);\n      }\n    });\n  }, [props.options.lat, props.options.lng, props.options.refreshCenter]);\n\n  const setMapCenterSmooth = (lat, lng, delay, callback = nullFunction) => {\n    if (!state.map) {\n      return;\n    }\n\n    const map = state.map,\n          kakao = state.kakao;\n    setTimeout(() => {\n      map.panTo(new kakao.maps.LatLng(lat, lng));\n      if (callback) callback();\n    }, delay);\n  };\n\n  useEffect(() => {\n    const bounds = props.options.bounds;\n\n    if (!state.map) {\n      return;\n    }\n\n    setLatLngBounds(state.map, state.kakao, bounds);\n  }, [props.options.bounds]);\n  return React.createElement(\"div\", {\n    className: props.className,\n    id: \"kakao-map\",\n    ref: handleLoaded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, state.map === null ? null : React.createElement(MapContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, props.children));\n};\n\nexport default KakaoMap;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/KakaoMap.jsx"],"names":["React","useCallback","useEffect","useState","useDispatch","loadingMapFinished","loadingMapStarted","loadingMapSuccess","setMapBounds","setMapLevel","initVH","isSimilarLocation","nullFunction","isMobile","MapContext","createContext","KakaoMap","props","map","kakao","state","setState","dispatch","addZoomControl","zoom","addControl","maps","ZoomControl","ControlPosition","addMapTypeControl","mapType","MapTypeControl","setLevel","level","setLatLngBounds","bounds","latLngBounds","LatLngBounds","forEach","b","extend","LatLng","lat","lng","setBounds","handleLoaded","node","onZoomChange","onZoomChangeStart","onCenterChange","onBoundsChange","options","Map","center","setCopyrightPosition","CopyrightPosition","BOTTOMRIGHT","setZoomable","zoomChange","zoomChangeStart","centerChange","boundsChange","event","addListener","getLevel","initBounds","getBounds","sw","getSouthWest","ne","getNorthEast","swLat","getLat","swLng","getLng","neLat","neLng","removeListener","refreshCenter","zoomLevel","anchor","animate","setMapCenterSmooth","getCenter","delay","callback","setTimeout","panTo","className","children"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {\n    loadingMapFinished,\n    loadingMapStarted,\n    loadingMapSuccess,\n    setMapBounds,\n    setMapLevel\n} from \"data/redux/action/map\";\nimport {initVH} from \"components/common/layout/WindowDimensions\";\nimport {isSimilarLocation, nullFunction} from \"data/util\";\nimport {isMobile} from \"react-device-detect\";\n\nexport const MapContext = React.createContext({});\n\nconst KakaoMap = props => {\n    const [state, setState] = useState({\n        map: null,\n        kakao: props.kakao\n    });\n    const dispatch = useDispatch();\n    const addZoomControl = (map, kakao, zoom) => {\n        if (zoom) {\n            map.addControl(\n                new kakao.maps.ZoomControl(),\n                kakao.maps.ControlPosition[zoom]\n            );\n        }\n    };\n\n    const addMapTypeControl = (map, kakao, mapType) => {\n        if (mapType) {\n            map.addControl(\n                new kakao.maps.MapTypeControl(),\n                kakao.maps.ControlPosition[mapType]\n            );\n        }\n    };\n\n    const setLevel = (map, kakao, level) => {\n\n    }\n\n    const setLatLngBounds = (map, kakao, bounds) => {\n        if (bounds) {\n            const latLngBounds = new kakao.maps.LatLngBounds();\n            bounds.forEach(b => {\n                latLngBounds.extend(new kakao.maps.LatLng(b.lat, b.lng));\n            });\n            map.setBounds(latLngBounds, -50, -50, -50, -50);\n        }\n    };\n\n\n    const handleLoaded = useCallback(node => {\n        const { kakao, onZoomChange, onZoomChangeStart, onCenterChange, onBoundsChange } = props;\n        const { lat, lng, level, zoom, mapType, bounds } = props.options;\n        if (state.map || node === null) {\n            return;\n        }\n\n        initVH(); //initial viewport height\n        dispatch(loadingMapStarted());\n        const map = new kakao.maps.Map(node, {\n            level: level || 9,\n            center: new kakao.maps.LatLng(lat, lng),\n        });\n        map.setCopyrightPosition(kakao.maps.CopyrightPosition.BOTTOMRIGHT, true)\n        map.setZoomable(true);\n\n        addZoomControl(map, kakao, zoom);\n        addMapTypeControl(map, kakao, mapType);\n        setLatLngBounds(map, kakao, bounds);\n\n        const zoomChange = () => {\n            if (onZoomChange) onZoomChange(map);\n        };\n        const zoomChangeStart = () => {\n            if (onZoomChangeStart) onZoomChangeStart(map);\n        };\n        const centerChange = () => {\n            if (onCenterChange) onCenterChange(map);\n        };\n        const boundsChange = () => {\n            if (onBoundsChange) onBoundsChange(map);\n        }\n\n        kakao.maps.event.addListener(map, \"zoom_changed\", zoomChange);\n        kakao.maps.event.addListener(map, 'zoom_start',zoomChangeStart);\n        kakao.maps.event.addListener(map, \"center_changed\", centerChange);\n        kakao.maps.event.addListener(map, \"bounds_changed\", boundsChange);\n\n        setState({map, kakao});\n        dispatch(setMapLevel(map.getLevel()))\n        if (bounds) {\n            let initBounds = map.getBounds();\n            let sw = initBounds.getSouthWest(), ne = initBounds.getNorthEast();\n            dispatch(setMapBounds({swLat: sw.getLat(), swLng: sw.getLng(), neLat: ne.getLat(), neLng: ne.getLng()}));\n        } else {\n            //set initial map bounds\n            let bounds = map.getBounds();\n            let sw = bounds.getSouthWest(), ne = bounds.getNorthEast();\n            dispatch(setMapBounds({swLat: sw.getLat(), swLng: sw.getLng(), neLat: ne.getLat(), neLng: ne.getLng()}));\n        }\n        dispatch(loadingMapSuccess(map, node, kakao));\n        dispatch(loadingMapFinished());\n        return () => {\n            kakao.maps.event.removeListener(map, \"zoom_changed\", zoomChange);\n            kakao.maps.event.removeListener(map, \"center_changed\", centerChange);\n            kakao.maps.event.removeListener(map, \"bounds_changed\", boundsChange);\n        };\n    }, []);\n\n    useEffect(() => {\n        const { lat, lng, refreshCenter } = props.options;\n        if (!state.map) {\n            return ;\n        }\n        const { map, kakao } = state;\n        const zoomLevel = isMobile ? 5 : 6\n        var level = map.getLevel() > zoomLevel ? zoomLevel : map.getLevel();\n        map.setLevel(level, {anchor: new kakao.maps.LatLng(lat, lng), animate: true});\n        setMapCenterSmooth(lat, lng, 300, () => {\n            if (!isSimilarLocation({lat, lng}, {lat: map.getCenter().getLat(), lng: map.getCenter().getLng()})) {\n                // if failed to move center retry panto after 0.5s\n                setMapCenterSmooth(lat, lng, 500)\n            }\n        })\n    }, [props.options.lat, props.options.lng, props.options.refreshCenter]);\n\n    const setMapCenterSmooth = (lat, lng, delay, callback=nullFunction) => {\n        if (!state.map) {\n            return ;\n        }\n        const { map, kakao } = state;\n        setTimeout(() => {\n            map.panTo(new kakao.maps.LatLng(lat, lng));\n            if (callback) callback()\n        }, delay);\n    }\n\n    useEffect(() => {\n        const { bounds } = props.options;\n        if (!state.map) {\n            return ;\n        }\n        setLatLngBounds(state.map, state.kakao, bounds);\n    }, [props.options.bounds]);\n\n    return (\n        <div className={props.className} id=\"kakao-map\" ref={handleLoaded}>\n            {state.map === null ? null : (\n                <MapContext.Provider value={state}>\n                    {props.children}\n                </MapContext.Provider>\n            )}\n        </div>\n    );\n};\n\nexport default KakaoMap;"]},"metadata":{},"sourceType":"module"}