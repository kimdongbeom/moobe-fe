{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/KakaoMap.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loadingSuccessMap } from \"../../../redux/action/map\";\nimport { initVH } from \"../layout/WindowDimensions\";\nexport const MapContext = React.createContext({});\n\nconst KakaoMap = props => {\n  const _useState = useState({\n    map: null,\n    kakao: props.kakao\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const addZoomControl = (map, kakao, zoom) => {\n    if (zoom) {\n      map.setZoomable(false);\n      map.addControl(new kakao.maps.ZoomControl(), kakao.maps.ControlPosition[zoom]);\n    }\n  };\n\n  const addMapTypeControl = (map, kakao, mapType) => {\n    if (mapType) {\n      map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition[mapType]);\n    }\n  };\n\n  const setLatLngBounds = (map, kakao, bounds) => {\n    if (bounds) {\n      const latLngBounds = new kakao.maps.LatLngBounds();\n      bounds.forEach(b => {\n        latLngBounds.extend(new kakao.maps.LatLng(b.lat, b.lng));\n      });\n      map.setBounds(latLngBounds);\n    }\n  };\n\n  const dispatch = useDispatch();\n  const handleLoaded = useCallback(node => {\n    const kakao = props.kakao,\n          onZoomChang = props.onZoomChang;\n    const _props$options = props.options,\n          lat = _props$options.lat,\n          lng = _props$options.lng,\n          level = _props$options.level,\n          zoom = _props$options.zoom,\n          mapType = _props$options.mapType,\n          bounds = _props$options.bounds;\n\n    if (state.map || node === null) {\n      return;\n    }\n\n    const map = new kakao.maps.Map(node, {\n      level: level || 9,\n      center: new kakao.maps.LatLng(lat, lng)\n    });\n    addZoomControl(map, kakao, zoom);\n    addMapTypeControl(map, kakao, mapType);\n    setLatLngBounds(map, kakao, bounds);\n\n    const zoomChange = () => {\n      if (onZoomChang) onZoomChang(map);\n    };\n\n    kakao.maps.event.addListener(map, \"zoom_changed\", zoomChange);\n    dispatch(loadingSuccessMap(map, node, kakao));\n    initVH(); //initial viewport height\n\n    setState({\n      map,\n      kakao\n    });\n    return () => {\n      kakao.maps.event.removeListener(map, \"zoom_changed\", zoomChange);\n    };\n  }, []);\n  useEffect(() => {\n    const _props$options2 = props.options,\n          lat = _props$options2.lat,\n          lng = _props$options2.lng;\n\n    if (!state.map) {\n      return;\n    }\n\n    const map = state.map,\n          kakao = state.kakao;\n    map.setCenter(new kakao.maps.LatLng(lat, lng));\n  }, [props.options.lat, props.options.lng]);\n  return React.createElement(\"div\", {\n    className: props.className,\n    id: \"kakao-map\",\n    ref: handleLoaded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, state.map === null ? null : React.createElement(MapContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, props.children));\n};\n\nexport default KakaoMap;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/KakaoMap.jsx"],"names":["React","useCallback","useEffect","useState","useDispatch","loadingSuccessMap","initVH","MapContext","createContext","KakaoMap","props","map","kakao","state","setState","addZoomControl","zoom","setZoomable","addControl","maps","ZoomControl","ControlPosition","addMapTypeControl","mapType","MapTypeControl","setLatLngBounds","bounds","latLngBounds","LatLngBounds","forEach","b","extend","LatLng","lat","lng","setBounds","dispatch","handleLoaded","node","onZoomChang","options","level","Map","center","zoomChange","event","addListener","removeListener","setCenter","className","children"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {loadingSuccessMap} from \"../../../redux/action/map\";\nimport {initVH} from \"../layout/WindowDimensions\";\n\nexport const MapContext = React.createContext({});\n\nconst KakaoMap = props => {\n    const [state, setState] = useState({\n        map: null,\n        kakao: props.kakao\n    });\n\n    const addZoomControl = (map, kakao, zoom) => {\n        if (zoom) {\n            map.setZoomable(false);\n            map.addControl(\n                new kakao.maps.ZoomControl(),\n                kakao.maps.ControlPosition[zoom]\n            );\n        }\n    };\n\n    const addMapTypeControl = (map, kakao, mapType) => {\n        if (mapType) {\n            map.addControl(\n                new kakao.maps.MapTypeControl(),\n                kakao.maps.ControlPosition[mapType]\n            );\n        }\n    };\n\n    const setLatLngBounds = (map, kakao, bounds) => {\n        if (bounds) {\n            const latLngBounds = new kakao.maps.LatLngBounds();\n            bounds.forEach(b => {\n                latLngBounds.extend(new kakao.maps.LatLng(b.lat, b.lng));\n            });\n            map.setBounds(latLngBounds);\n        }\n    };\n\n    const dispatch = useDispatch();\n    const handleLoaded = useCallback(node => {\n        const { kakao, onZoomChang } = props;\n        const { lat, lng, level, zoom, mapType, bounds } = props.options;\n        if (state.map || node === null) {\n            return;\n        }\n\n        const map = new kakao.maps.Map(node, {\n            level: level || 9,\n            center: new kakao.maps.LatLng(lat, lng)\n        });\n\n        addZoomControl(map, kakao, zoom);\n        addMapTypeControl(map, kakao, mapType);\n        setLatLngBounds(map, kakao, bounds);\n\n        const zoomChange = () => {\n            if (onZoomChang) onZoomChang(map);\n        };\n\n        kakao.maps.event.addListener(map, \"zoom_changed\", zoomChange);\n        dispatch(loadingSuccessMap(map, node, kakao));\n        initVH(); //initial viewport height\n        setState({map, kakao});\n        return () => {\n            kakao.maps.event.removeListener(map, \"zoom_changed\", zoomChange);\n        };\n    }, []);\n\n    useEffect(() => {\n        const { lat, lng } = props.options;\n        if (!state.map) {\n            return ;\n        }\n        const { map, kakao } = state;\n        map.setCenter(new kakao.maps.LatLng(lat, lng))\n    }, [props.options.lat, props.options.lng]);\n\n    return (\n        <div className={props.className} id=\"kakao-map\" ref={handleLoaded}>\n            {state.map === null ? null : (\n                <MapContext.Provider value={state}>\n                    {props.children}\n                </MapContext.Provider>\n            )}\n        </div>\n    );\n};\n\nexport default KakaoMap;"]},"metadata":{},"sourceType":"module"}