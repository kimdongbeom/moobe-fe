{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/admin/ChannelRegistForm.jsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { buildUrl, ifNullEmpty, updateObject } from \"data/util\";\nimport { isEmpty as _isEmpty } from \"lodash\";\nimport { InputField } from \"components/admin/AdminFields\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchChannel } from \"data/redux/action/channel\";\nimport { insertChannels } from \"data/api\";\n\nconst ChannelRegistForm = () => {\n  const initChannelState = {\n    youtubeId: '',\n    youtubeName: '',\n    category: '',\n    profileImg: ''\n  };\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        channelLink = _useState2[0],\n        setChannelLink = _useState2[1];\n\n  const _useState3 = useState(initChannelState),\n        _useState4 = _slicedToArray(_useState3, 2),\n        channelState = _useState4[0],\n        setChannelState = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        disableInput = _useState6[0],\n        setDisableInput = _useState6[1];\n\n  const dispatch = useDispatch();\n\n  const handleChangeInput = ev => {\n    const inputName = ev.target.name;\n    setChannelState(updateObject(channelState, {\n      [inputName]: ev.target.value\n    }));\n  };\n\n  const checkChannelLink = ev => {\n    if (_isEmpty(channelLink)) {\n      alert(\"channel link가 비어있습니다.\");\n      return;\n    }\n\n    setDisableInput(true);\n    axios.get(buildUrl(\"/admin/check/channelLink?link=\" + encodeURIComponent(channelLink)), {\n      withCredentials: true\n    }).then(response => {\n      const data = response.data;\n\n      if (response.status == 200 && !_isEmpty(data.youtubeName)) {\n        setChannelState(updateObject(channelState, {\n          youtubeId: ifNullEmpty(data.youtubeId),\n          youtubeName: ifNullEmpty(data.youtubeName),\n          profileImg: ifNullEmpty(data.profileImg)\n        }));\n      } else {\n        alert(\"채널 링크를 다시 확인해주세요!\");\n        setChannelLink('');\n      }\n    }).finally(() => {\n      setDisableInput(false);\n    });\n  };\n\n  const addChannel = ev => {\n    const data = new FormData(ev.target.form);\n    setDisableInput(true);\n    insertChannels(data).then(response => {\n      if (response.data === \"success\") {\n        alert(\"정상적으로 등록되었습니다.\");\n        setChannelState(initChannelState);\n      } else {\n        alert(\"등록에 실패하였습니다.\");\n      }\n    }).finally(() => {\n      setDisableInput(false);\n      dispatch(fetchChannel(null));\n    });\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column is-paddingless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    disabled: disableInput,\n    className: \"button is-success is-pulled-right\",\n    type: \"button\",\n    onClick: checkChannelLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\uCC44\\uB110\\uB9C1\\uD06C\\uD655\\uC778\"), React.createElement(InputField, {\n    disabled: disableInput,\n    fieldName: \"\\uCD94\\uAC00\\uD560 \\uCC44\\uB110 \\uB9C1\\uD06C\",\n    name: \"channelLink\",\n    placeholder: \"ex : https://www.youtube.com/channel/UCXHt0mdmd-VIv8SuD6bhdZA\",\n    value: channelLink,\n    onChange: ev => setChannelLink(ev.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"column is-paddingless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(InputField, {\n    disabled: disableInput,\n    fieldName: \"\\uCC44\\uB110 \\uB9C1\\uD06C ID\",\n    name: \"youtubeId\",\n    placeholder: \"\\uCC44\\uB110 \\uB9C1\\uD06C ID\",\n    value: channelState.youtubeId,\n    onChange: handleChangeInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(InputField, {\n    disabled: disableInput,\n    fieldName: \"\\uCC44\\uB110\\uBA85\",\n    name: \"youtubeName\",\n    placeholder: \"\\uCD94\\uAC00\\uD560 \\uCC44\\uB110 \\uC774\\uB984\",\n    value: channelState.youtubeName,\n    onChange: handleChangeInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(InputField, {\n    disabled: disableInput,\n    fieldName: \"\\uCC44\\uB110 \\uCE74\\uD14C\\uACE0\\uB9AC\",\n    name: \"category\",\n    placeholder: \"\\uCC44\\uB110 \\uCE74\\uD14C\\uACE0\\uB9AC\",\n    value: channelState.category,\n    onChange: handleChangeInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(InputField, {\n    disabled: disableInput,\n    fieldName: \"\\uC774\\uBBF8\\uC9C0 Link\",\n    name: \"profileImg\",\n    placeholder: \"\\uCC44\\uB110 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0 \\uC8FC\\uC18C\",\n    value: channelState.profileImg,\n    onChange: handleChangeInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    disabled: disableInput,\n    className: \"button is-primary is-pulled-right\",\n    type: \"button\",\n    onClick: addChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\\uCC44\\uB110\\uCD94\\uAC00\"))));\n};\n\nexport default ChannelRegistForm;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/admin/ChannelRegistForm.jsx"],"names":["React","useState","axios","buildUrl","ifNullEmpty","updateObject","isEmpty","_isEmpty","InputField","useDispatch","fetchChannel","insertChannels","ChannelRegistForm","initChannelState","youtubeId","youtubeName","category","profileImg","channelLink","setChannelLink","channelState","setChannelState","disableInput","setDisableInput","dispatch","handleChangeInput","ev","inputName","target","name","value","checkChannelLink","alert","get","encodeURIComponent","withCredentials","then","response","data","status","finally","addChannel","FormData","form"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport {buildUrl, ifNullEmpty, updateObject} from \"data/util\";\nimport {isEmpty as _isEmpty} from \"lodash\";\nimport {InputField} from \"components/admin/AdminFields\";\nimport {useDispatch} from \"react-redux\";\nimport {fetchChannel} from \"data/redux/action/channel\";\nimport {insertChannels} from \"data/api\";\n\nconst ChannelRegistForm = () => {\n    const initChannelState = {\n        youtubeId: '',\n        youtubeName: '',\n        category: '',\n        profileImg: ''\n    }\n    const [channelLink, setChannelLink] = useState('');\n    const [channelState, setChannelState] = useState(initChannelState);\n    const [disableInput, setDisableInput] = useState(false);\n    const dispatch = useDispatch();\n\n    const handleChangeInput = (ev) => {\n        const inputName = ev.target.name;\n        setChannelState(updateObject(channelState, {[inputName]: ev.target.value}));\n    }\n\n    const checkChannelLink = (ev) => {\n        if (_isEmpty(channelLink)) {\n            alert(\"channel link가 비어있습니다.\");\n            return ;\n        }\n        setDisableInput(true)\n        axios.get(buildUrl(\"/admin/check/channelLink?link=\" + encodeURIComponent(channelLink)), {withCredentials: true})\n            .then(response => {\n                const data = response.data\n                if (response.status == 200 && !_isEmpty(data.youtubeName)) {\n                    setChannelState(updateObject(channelState, {\n                        youtubeId: ifNullEmpty(data.youtubeId),\n                        youtubeName: ifNullEmpty(data.youtubeName),\n                        profileImg: ifNullEmpty(data.profileImg)\n                    }))\n                } else {\n                    alert(\"채널 링크를 다시 확인해주세요!\");\n                    setChannelLink('');\n                }\n            }).finally(() => {\n                setDisableInput(false)\n        })\n    }\n\n    const addChannel = (ev) => {\n        const data = new FormData(ev.target.form);\n        setDisableInput(true)\n        insertChannels(data)\n            .then(response => {\n                if (response.data === \"success\") {\n                    alert(\"정상적으로 등록되었습니다.\")\n                    setChannelState(initChannelState);\n                } else {\n                    alert(\"등록에 실패하였습니다.\")\n                }\n            }).finally(() => {\n                setDisableInput(false)\n                dispatch(fetchChannel(null));\n        });\n    }\n\n    return (\n        <form>\n            <div className=\"row\">\n                <div className=\"column is-paddingless\">\n                    <a disabled={disableInput} className=\"button is-success is-pulled-right\" type=\"button\" onClick={checkChannelLink}>채널링크확인</a>\n                    <InputField disabled={disableInput} fieldName=\"추가할 채널 링크\" name=\"channelLink\" placeholder=\"ex : https://www.youtube.com/channel/UCXHt0mdmd-VIv8SuD6bhdZA\" value={channelLink} onChange={(ev) => setChannelLink(ev.target.value)}/>\n                </div>\n                <div className=\"column is-paddingless\">\n                    <InputField disabled={disableInput} fieldName=\"채널 링크 ID\" name=\"youtubeId\" placeholder=\"채널 링크 ID\" value={channelState.youtubeId} onChange={handleChangeInput}/>\n                    <InputField disabled={disableInput} fieldName=\"채널명\" name=\"youtubeName\" placeholder=\"추가할 채널 이름\" value={channelState.youtubeName} onChange={handleChangeInput}/>\n                    <InputField disabled={disableInput} fieldName=\"채널 카테고리\" name=\"category\" placeholder=\"채널 카테고리\" value={channelState.category} onChange={handleChangeInput}/>\n                    <InputField disabled={disableInput} fieldName=\"이미지 Link\" name=\"profileImg\" placeholder=\"채널 프로필 이미지 주소\" value={channelState.profileImg} onChange={handleChangeInput}/>\n                    <button disabled={disableInput} className=\"button is-primary is-pulled-right\" type=\"button\" onClick={addChannel}>채널추가</button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default ChannelRegistForm;"]},"metadata":{},"sourceType":"module"}