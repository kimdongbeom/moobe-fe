{"ast":null,"code":"import { CHANNEL_FETCH_CHANNEL, CHANNEL_FETCH_CHANNEL_SUCCESS, CHANNEL_FETCH_CHANNEL_ERROR, CHANNEL_SET_ACTIVE_CHANNEL, fetchChannelData, fetchSuccessChannelData, fetchErrorChannelData } from '../action/channel';\nimport { updateObject } from './util';\nimport Channel from \"../model/Channel\";\nconst initialStateChannel = {\n  channelList: [],\n  activeChannel: null,\n  channelLoading: false\n};\n\nfunction fetchSuccess(channelState, response) {\n  const data = response.data,\n        activeChannelId = response.activeChannelId; //TODO change result from api\n\n  let results = [{\n    id: 1,\n    youtubeId: \"UCsNVs68quFJMaDmR6frfUsQ\",\n    youtubeName: \"야식이\",\n    category: \"먹방\",\n    channelImageUrl: \"https://yt3.ggpht.com/a/AGF-l7-9PHueZqzkep6GKxf0ew-deD5WUrtWeIoU3Q=s288-c-k-c0xffffffff-no-rj-mo\"\n  }, {\n    id: 2,\n    youtubeId: \"UCsNVs68quFJMaDmR6frfUsQ\",\n    youtubeName: \"야식이2\",\n    category: \"먹방\",\n    channelImageUrl: \"https://yt3.ggpht.com/a/AGF-l7-9PHueZqzkep6GKxf0ew-deD5WUrtWeIoU3Q=s288-c-k-c0xffffffff-no-rj-mo\"\n  }];\n  let channelList = results.map(result => new Channel(result));\n  let activeChannel = null;\n  channelList.map(channel => {\n    if (\"\" + channel.id === activeChannelId) {\n      activeChannel = channel;\n    }\n  });\n  return updateObject(channelState, {\n    channelList: channelList,\n    activeChannel: activeChannel,\n    channelLoading: false\n  });\n}\n\nfunction setActiveChannel(channelState, channelId) {\n  let activeChannel = null;\n  channelState.channelList.map(channel => {\n    if (\"\" + channel.id === channelId) {\n      activeChannel = channel;\n    }\n  });\n  return updateObject(channelState, {\n    activeChannel: activeChannel\n  });\n}\n\nexport default function (channelState = initialStateChannel, action) {\n  switch (action.type) {\n    case CHANNEL_SET_ACTIVE_CHANNEL:\n      return setActiveChannel(channelState, action.channelId);\n\n    case CHANNEL_FETCH_CHANNEL:\n      return updateObject(channelState, {\n        channelLoading: true\n      });\n\n    case CHANNEL_FETCH_CHANNEL_SUCCESS:\n      return fetchSuccess(channelState, action.data);\n\n    default:\n      return channelState;\n  }\n}","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/redux/reducers/channelReducer.js"],"names":["CHANNEL_FETCH_CHANNEL","CHANNEL_FETCH_CHANNEL_SUCCESS","CHANNEL_FETCH_CHANNEL_ERROR","CHANNEL_SET_ACTIVE_CHANNEL","fetchChannelData","fetchSuccessChannelData","fetchErrorChannelData","updateObject","Channel","initialStateChannel","channelList","activeChannel","channelLoading","fetchSuccess","channelState","response","data","activeChannelId","results","id","youtubeId","youtubeName","category","channelImageUrl","map","result","channel","setActiveChannel","channelId","action","type"],"mappings":"AAAA,SACIA,qBADJ,EAEIC,6BAFJ,EAGIC,2BAHJ,EAIIC,0BAJJ,EAKIC,gBALJ,EAMIC,uBANJ,EAOIC,qBAPJ,QAQO,mBARP;AAUA,SAASC,YAAT,QAA6B,QAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,mBAAmB,GAAG;AACxBC,EAAAA,WAAW,EAAE,EADW;AAExBC,EAAAA,aAAa,EAAE,IAFS;AAGxBC,EAAAA,cAAc,EAAE;AAHQ,CAA5B;;AAMA,SAASC,YAAT,CAAsBC,YAAtB,EAAoCC,QAApC,EAA8C;AAAA,QACnCC,IADmC,GACVD,QADU,CACnCC,IADmC;AAAA,QAC7BC,eAD6B,GACVF,QADU,CAC7BE,eAD6B,EAE1C;;AACA,MAAIC,OAAO,GAAG,CAAC;AACXC,IAAAA,EAAE,EAAC,CADQ;AAEXC,IAAAA,SAAS,EAAE,0BAFA;AAGXC,IAAAA,WAAW,EAAE,KAHF;AAIXC,IAAAA,QAAQ,EAAE,IAJC;AAKXC,IAAAA,eAAe,EAAE;AALN,GAAD,EAMZ;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,SAAS,EAAE,0BAFb;AAGEC,IAAAA,WAAW,EAAE,MAHf;AAIEC,IAAAA,QAAQ,EAAE,IAJZ;AAKEC,IAAAA,eAAe,EAAE;AALnB,GANY,CAAd;AAaA,MAAIb,WAAW,GAAGQ,OAAO,CAACM,GAAR,CAAYC,MAAM,IAAI,IAAIjB,OAAJ,CAAYiB,MAAZ,CAAtB,CAAlB;AACA,MAAId,aAAa,GAAG,IAApB;AACAD,EAAAA,WAAW,CAACc,GAAZ,CAAgBE,OAAO,IAAI;AACvB,QAAG,KAAKA,OAAO,CAACP,EAAb,KAAoBF,eAAvB,EAAwC;AACpCN,MAAAA,aAAa,GAAGe,OAAhB;AACH;AACJ,GAJD;AAKA,SAAOnB,YAAY,CAACO,YAAD,EAAe;AAACJ,IAAAA,WAAW,EAAEA,WAAd;AAA2BC,IAAAA,aAAa,EAAEA,aAA1C;AAAyDC,IAAAA,cAAc,EAAE;AAAzE,GAAf,CAAnB;AACH;;AAED,SAASe,gBAAT,CAA0Bb,YAA1B,EAAwCc,SAAxC,EAAmD;AAC/C,MAAIjB,aAAa,GAAG,IAApB;AACAG,EAAAA,YAAY,CAACJ,WAAb,CAAyBc,GAAzB,CAA6BE,OAAO,IAAI;AACpC,QAAG,KAAKA,OAAO,CAACP,EAAb,KAAoBS,SAAvB,EAAkC;AAC9BjB,MAAAA,aAAa,GAAGe,OAAhB;AACH;AACJ,GAJD;AAMA,SAAOnB,YAAY,CAACO,YAAD,EAAe;AAACH,IAAAA,aAAa,EAAEA;AAAhB,GAAf,CAAnB;AACH;;AAED,eAAe,UAASG,YAAY,GAAGL,mBAAxB,EAA6CoB,MAA7C,EAAqD;AAChE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK3B,0BAAL;AAAkC,aAAOwB,gBAAgB,CAACb,YAAD,EAAee,MAAM,CAACD,SAAtB,CAAvB;;AAClC,SAAK5B,qBAAL;AAA6B,aAAOO,YAAY,CAACO,YAAD,EAAe;AAACF,QAAAA,cAAc,EAAE;AAAjB,OAAf,CAAnB;;AAC7B,SAAKX,6BAAL;AAAqC,aAAOY,YAAY,CAACC,YAAD,EAAee,MAAM,CAACb,IAAtB,CAAnB;;AACrC;AAAU,aAAOF,YAAP;AAJd;AAMH","sourcesContent":["import {\n    CHANNEL_FETCH_CHANNEL,\n    CHANNEL_FETCH_CHANNEL_SUCCESS,\n    CHANNEL_FETCH_CHANNEL_ERROR,\n    CHANNEL_SET_ACTIVE_CHANNEL,\n    fetchChannelData,\n    fetchSuccessChannelData,\n    fetchErrorChannelData,\n} from '../action/channel';\n\nimport { updateObject } from './util';\nimport Channel from \"../model/Channel\";\n\nconst initialStateChannel = {\n    channelList: [],\n    activeChannel: null,\n    channelLoading: false\n};\n\nfunction fetchSuccess(channelState, response) {\n    const {data, activeChannelId} = response;\n    //TODO change result from api\n    let results = [{\n        id:1,\n        youtubeId: \"UCsNVs68quFJMaDmR6frfUsQ\",\n        youtubeName: \"야식이\",\n        category: \"먹방\",\n        channelImageUrl: \"https://yt3.ggpht.com/a/AGF-l7-9PHueZqzkep6GKxf0ew-deD5WUrtWeIoU3Q=s288-c-k-c0xffffffff-no-rj-mo\"\n    },{\n        id: 2,\n        youtubeId: \"UCsNVs68quFJMaDmR6frfUsQ\",\n        youtubeName: \"야식이2\",\n        category: \"먹방\",\n        channelImageUrl: \"https://yt3.ggpht.com/a/AGF-l7-9PHueZqzkep6GKxf0ew-deD5WUrtWeIoU3Q=s288-c-k-c0xffffffff-no-rj-mo\"\n    }]\n    let channelList = results.map(result => new Channel(result));\n    let activeChannel = null;\n    channelList.map(channel => {\n        if(\"\" + channel.id === activeChannelId) {\n            activeChannel = channel;\n        }\n    });\n    return updateObject(channelState, {channelList: channelList, activeChannel: activeChannel, channelLoading: false})\n}\n\nfunction setActiveChannel(channelState, channelId) {\n    let activeChannel = null;\n    channelState.channelList.map(channel => {\n        if(\"\" + channel.id === channelId) {\n            activeChannel = channel;\n        }\n    });\n\n    return updateObject(channelState, {activeChannel: activeChannel})\n}\n\nexport default function(channelState = initialStateChannel, action) {\n    switch(action.type) {\n        case CHANNEL_SET_ACTIVE_CHANNEL : return setActiveChannel(channelState, action.channelId);\n        case CHANNEL_FETCH_CHANNEL : return updateObject(channelState, {channelLoading: true});\n        case CHANNEL_FETCH_CHANNEL_SUCCESS : return fetchSuccess(channelState, action.data);\n        default : return channelState;\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}