{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _function = require('react-pure-render/function');\n\nvar _function2 = _interopRequireDefault(_function);\n\nvar _reduxDevtools = require('redux-devtools');\n\nvar _LogMonitorButton = require('./LogMonitorButton');\n\nvar _LogMonitorButton2 = _interopRequireDefault(_LogMonitorButton);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar reset = _reduxDevtools.ActionCreators.reset;\nvar rollback = _reduxDevtools.ActionCreators.rollback;\nvar commit = _reduxDevtools.ActionCreators.commit;\nvar sweep = _reduxDevtools.ActionCreators.sweep;\nvar style = {\n  textAlign: 'center',\n  borderBottomWidth: 1,\n  borderBottomStyle: 'solid',\n  borderColor: 'transparent',\n  zIndex: 1,\n  display: 'flex',\n  flexDirection: 'row'\n};\n\nvar LogMonitorButtonBar = function (_Component) {\n  _inherits(LogMonitorButtonBar, _Component);\n\n  function LogMonitorButtonBar(props) {\n    _classCallCheck(this, LogMonitorButtonBar);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.shouldComponentUpdate = _function2.default;\n    _this.handleReset = _this.handleReset.bind(_this);\n    _this.handleRollback = _this.handleRollback.bind(_this);\n    _this.handleSweep = _this.handleSweep.bind(_this);\n    _this.handleCommit = _this.handleCommit.bind(_this);\n    return _this;\n  }\n\n  LogMonitorButtonBar.prototype.handleRollback = function handleRollback() {\n    this.props.dispatch(rollback());\n  };\n\n  LogMonitorButtonBar.prototype.handleSweep = function handleSweep() {\n    this.props.dispatch(sweep());\n  };\n\n  LogMonitorButtonBar.prototype.handleCommit = function handleCommit() {\n    this.props.dispatch(commit());\n  };\n\n  LogMonitorButtonBar.prototype.handleReset = function handleReset() {\n    this.props.dispatch(reset());\n  };\n\n  LogMonitorButtonBar.prototype.render = function render() {\n    var _props = this.props;\n    var theme = _props.theme;\n    var hasStates = _props.hasStates;\n    var hasSkippedActions = _props.hasSkippedActions;\n    return _react2.default.createElement('div', {\n      style: _extends({}, style, {\n        borderColor: theme.base02\n      })\n    }, _react2.default.createElement(_LogMonitorButton2.default, {\n      theme: theme,\n      onClick: this.handleReset,\n      enabled: true\n    }, 'Reset'), _react2.default.createElement(_LogMonitorButton2.default, {\n      theme: theme,\n      onClick: this.handleRollback,\n      enabled: hasStates\n    }, 'Revert'), _react2.default.createElement(_LogMonitorButton2.default, {\n      theme: theme,\n      onClick: this.handleSweep,\n      enabled: hasSkippedActions\n    }, 'Sweep'), _react2.default.createElement(_LogMonitorButton2.default, {\n      theme: theme,\n      onClick: this.handleCommit,\n      enabled: hasStates\n    }, 'Commit'));\n  };\n\n  return LogMonitorButtonBar;\n}(_react.Component);\n\nLogMonitorButtonBar.propTypes = {\n  dispatch: _propTypes2.default.func,\n  theme: _propTypes2.default.object\n};\nexports.default = LogMonitorButtonBar;","map":null,"metadata":{},"sourceType":"script"}