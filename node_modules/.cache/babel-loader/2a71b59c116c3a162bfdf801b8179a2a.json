{"ast":null,"code":"var _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/MapLocationOverlay.jsx\";\nimport React, { useEffect } from 'react';\nimport MarkerArrow from 'assets/images/overlay_bottom_arrow.png';\nimport { useSelector } from \"react-redux\";\nimport { toString as _toString } from \"lodash\";\nimport { buildContentPath } from \"data/util\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\n\nconst MapLocationOverlay = ({\n  mapLocation,\n  hasShadow = true,\n  hoverShadow = false,\n  showTag = true,\n  showArrow = true,\n  handleClick = null,\n  handleMouseEnter = null,\n  handleMouseLeave = null\n}) => {\n  const _useSelector = useSelector(state => state.channel),\n        activeChannel = _useSelector.activeChannel;\n\n  const history = useHistory();\n\n  const _useParams = useParams(),\n        contentId = _useParams.contentId;\n\n  const location = useLocation();\n\n  const updateActiveContent = mapLocation => {\n    if (handleClick) {\n      handleClick();\n    } else {\n      if (contentId !== _toString(mapLocation.id)) {\n        history.push({\n          pathname: buildContentPath(activeChannel, mapLocation),\n          search: location.search\n        });\n      }\n    }\n  };\n\n  const getShadowClassName = () => {\n    let classNameList = [];\n    if (hasShadow) classNameList.push(\"location-overlay-box-shadow\");\n    if (hoverShadow) classNameList.push(\"location-overlay-box-shadow-hover\");\n    return classNameList.join(\" \");\n  };\n\n  const onMouseEnter = e => {\n    if (handleMouseEnter) handleMouseEnter();\n  };\n\n  const onMouseLeave = e => {\n    if (handleMouseLeave) handleMouseLeave();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"has-cursor-pointer\",\n    onClick: e => updateActiveContent(mapLocation),\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card has-min-width-200 has-max-width-200 has-border-radius-6 white-space-normal has-text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-content has-padding-10 has-text-weight-semibold \" + getShadowClassName(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, mapLocation.name), showTag ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, mapLocation.tagList.map(tag => React.createElement(\"span\", {\n    key: tag,\n    className: \"fa-0-87x has-text-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"#\", tag))) : null)), showArrow ? React.createElement(\"img\", {\n    className: \"marker-arrow\",\n    src: MarkerArrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }) : null);\n};\n\nexport default MapLocationOverlay;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/MapLocationOverlay.jsx"],"names":["React","useEffect","MarkerArrow","useSelector","toString","_toString","buildContentPath","useHistory","useLocation","useParams","MapLocationOverlay","mapLocation","hasShadow","hoverShadow","showTag","showArrow","handleClick","handleMouseEnter","handleMouseLeave","state","channel","activeChannel","history","contentId","location","updateActiveContent","id","push","pathname","search","getShadowClassName","classNameList","join","onMouseEnter","e","onMouseLeave","name","tagList","map","tag"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport MarkerArrow from 'assets/images/overlay_bottom_arrow.png';\nimport {useSelector} from \"react-redux\";\nimport {toString as _toString} from \"lodash\";\nimport {buildContentPath} from \"data/util\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\n\nconst MapLocationOverlay = ({mapLocation, hasShadow=true, hoverShadow=false, showTag=true, showArrow=true, handleClick=null, handleMouseEnter=null, handleMouseLeave=null}) => {\n    const {activeChannel} = useSelector(state => state.channel);\n    const history = useHistory();\n    const {contentId} = useParams();\n    const location = useLocation();\n    const updateActiveContent = (mapLocation) => {\n        if (handleClick) {\n            handleClick()\n        } else {\n            if (contentId !== _toString(mapLocation.id)) {\n                history.push({\n                    pathname: buildContentPath(activeChannel, mapLocation),\n                    search: location.search\n                });\n            }\n        }\n    };\n\n    const getShadowClassName = () => {\n        let classNameList = [];\n        if (hasShadow) classNameList.push(\"location-overlay-box-shadow\")\n        if (hoverShadow) classNameList.push(\"location-overlay-box-shadow-hover\")\n        return classNameList.join(\" \")\n    }\n\n    const onMouseEnter = (e) => {\n        if (handleMouseEnter) handleMouseEnter()\n    }\n    const onMouseLeave = (e) => {\n        if (handleMouseLeave) handleMouseLeave()\n    }\n\n    return (\n        <div className=\"has-cursor-pointer\"\n             onClick={(e) => updateActiveContent(mapLocation)}\n             onMouseEnter={onMouseEnter}\n             onMouseLeave={onMouseLeave}>\n            <div className=\"card has-min-width-200 has-max-width-200 has-border-radius-6 white-space-normal has-text-left\" >\n                <div className={\"card-content has-padding-10 has-text-weight-semibold \" + getShadowClassName()}>\n                    <p>{mapLocation.name}</p>\n                    {showTag\n                    ? <p>{mapLocation.tagList.map(tag => <span key={tag} className=\"fa-0-87x has-text-link\" >#{tag}</span>)}</p>\n                    : null}\n                </div>\n            </div>\n            {showArrow ? <img className=\"marker-arrow\" src={MarkerArrow}/> : null}\n        </div>\n    )\n};\n\nexport default MapLocationOverlay"]},"metadata":{},"sourceType":"module"}