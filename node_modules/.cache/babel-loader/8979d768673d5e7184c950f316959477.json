{"ast":null,"code":"var _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/map/DesktopKakaoMap.jsx\";\nimport React from 'react';\nimport MoobeKakaoMap from \"../../common/map/MoobeKakaoMap\";\nimport MarkerClusterer from \"../../common/map/MarkerClusterer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { showOverlayContentWithDiff } from \"../../../redux/action/content\";\nimport InfoWindoWithMarker from \"../../common/map/InfoWindowWithMarker\";\nimport MarkerImage from 'assets/images/marker_gra_42x50.png';\nimport CustomOverlay from \"../../common/map/CustomOverlay\";\nimport DesktopOverlay from \"./DesktopOverlay\";\nimport { isNil as _isNil, toString as _toString } from 'lodash';\nimport { buildContentPath } from \"../../../redux/reducers/util\";\nimport { useHistory, useParams } from \"react-router\";\n\nconst DesktopKakaoMap = () => {\n  const contentList = useSelector(state => state.content.contentList);\n  return React.createElement(React.Fragment, null, React.createElement(MoobeKakaoMap, {\n    className: \"column box is-paddingless kakao-map is-fullheight-with-navbar-tablet is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(MarkerClusterer, {\n    options: {\n      averageCenter: true,\n      minLevel: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, contentList.map(content => React.createElement(MarkerWithCustomOverlay, {\n    key: content.id,\n    content: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })))));\n};\n\nconst MarkerWithCustomOverlay = ({\n  content\n}) => {\n  const _useSelector = useSelector(state => state.channel),\n        activeChannel = _useSelector.activeChannel;\n\n  const _useSelector2 = useSelector(state => state.content),\n        activeOverlayContent = _useSelector2.activeOverlayContent;\n\n  let visible = !_isNil(activeOverlayContent) && content.id === activeOverlayContent.id;\n\n  const _useParams = useParams(),\n        contentId = _useParams.contentId;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const updateActiveContent = content => {\n    dispatch(showOverlayContentWithDiff(content));\n\n    if (contentId !== _toString(content.id)) {\n      history.push(buildContentPath(activeChannel, content));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(InfoWindoWithMarker, {\n    onClick: marker => updateActiveContent(content),\n    options: {\n      lat: content.store.latitude,\n      lng: content.store.longitude,\n      content: content.store.name,\n      image: {\n        url: MarkerImage,\n        width: 34,\n        height: 42\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(CustomOverlay, {\n    options: {\n      lat: content.store.latitude,\n      lng: content.store.longitude,\n      visible: visible,\n      yAnchor: 1.1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(DesktopOverlay, {\n    store: content.store,\n    visible: visible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n};\n\nexport default DesktopKakaoMap;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/map/DesktopKakaoMap.jsx"],"names":["React","MoobeKakaoMap","MarkerClusterer","useDispatch","useSelector","showOverlayContentWithDiff","InfoWindoWithMarker","MarkerImage","CustomOverlay","DesktopOverlay","isNil","_isNil","toString","_toString","buildContentPath","useHistory","useParams","DesktopKakaoMap","contentList","state","content","averageCenter","minLevel","map","id","MarkerWithCustomOverlay","channel","activeChannel","activeOverlayContent","visible","contentId","dispatch","history","updateActiveContent","push","marker","lat","store","latitude","lng","longitude","name","image","url","width","height","yAnchor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MoobeKakaoMap from \"../../common/map/MoobeKakaoMap\";\nimport MarkerClusterer from \"../../common/map/MarkerClusterer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {showOverlayContentWithDiff} from \"../../../redux/action/content\";\nimport InfoWindoWithMarker from \"../../common/map/InfoWindowWithMarker\";\nimport MarkerImage from 'assets/images/marker_gra_42x50.png';\nimport CustomOverlay from \"../../common/map/CustomOverlay\";\nimport DesktopOverlay from \"./DesktopOverlay\";\nimport {isNil as _isNil, toString as _toString} from 'lodash';\nimport {buildContentPath} from \"../../../redux/reducers/util\";\nimport {useHistory, useParams} from \"react-router\";\n\nconst DesktopKakaoMap = () => {\n    const contentList = useSelector(state => state.content.contentList);\n    return (\n        <>\n            <MoobeKakaoMap className=\"column box is-paddingless kakao-map is-fullheight-with-navbar-tablet is-marginless\">\n                <MarkerClusterer options={{averageCenter: true, minLevel: 6}}>\n                    {contentList.map(content => <MarkerWithCustomOverlay key={content.id} content={content} />)}\n                </MarkerClusterer>\n            </MoobeKakaoMap>\n        </>\n    )\n};\n\nconst MarkerWithCustomOverlay = ({content}) => {\n    const {activeChannel} = useSelector(state => state.channel);\n    const {activeOverlayContent} = useSelector(state => state.content);\n    let visible = (!_isNil(activeOverlayContent) && content.id === activeOverlayContent.id);\n    const {contentId} = useParams();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const updateActiveContent = (content) => {\n        dispatch(showOverlayContentWithDiff(content));\n        if (contentId !== _toString(content.id)) {\n            history.push(buildContentPath(activeChannel, content))\n        }\n    };\n    return (\n        <>\n            <InfoWindoWithMarker onClick={(marker) => updateActiveContent(content)}\n                                 options={{lat: content.store.latitude, lng: content.store.longitude, content: content.store.name,\n                                     image: {url: MarkerImage, width: 34, height: 42}}}/>\n            <CustomOverlay options={{lat: content.store.latitude, lng: content.store.longitude, visible: visible, yAnchor: 1.1}}>\n                <DesktopOverlay store={content.store} visible={visible}/>\n            </CustomOverlay>\n        </>\n    )\n};\n\n\nexport default DesktopKakaoMap;"]},"metadata":{},"sourceType":"module"}