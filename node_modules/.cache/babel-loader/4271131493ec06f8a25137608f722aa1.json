{"ast":null,"code":"import axios from \"axios\";\nexport const USER_SET_USER = 'USER/USER_SET_USER';\nexport const USER_RESET_USER = 'USER/USER_RESET_USER';\nexport const fetchUser = () => {\n  return dispatch => {\n    return axios.get(process.env.REACT_APP_API_URL + \"/api/session\", {\n      withCredentials: true\n    }).then(response => {\n      dispatch(setUser(response.data));\n    }).catch(function (error) {\n      dispatch(resetUser());\n    });\n  };\n};\nexport const setUser = user => {\n  return {\n    type: USER_SET_USER,\n    user\n  };\n};\nexport const resetUser = () => {\n  return {\n    type: USER_RESET_USER\n  };\n};","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/redux/action/user.js"],"names":["axios","USER_SET_USER","USER_RESET_USER","fetchUser","dispatch","get","process","env","REACT_APP_API_URL","withCredentials","then","response","setUser","data","catch","error","resetUser","user","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,oBAAtB;AACP,OAAO,MAAMC,eAAe,GAAG,sBAAxB;AAEP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAQC,QAAD,IAAc;AACjB,WAAOJ,KAAK,CAACK,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,cAA1C,EAAyD;AACxDC,MAAAA,eAAe,EAAE;AADuC,KAAzD,EAGFC,IAHE,CAGGC,QAAQ,IAAI;AACdP,MAAAA,QAAQ,CAACQ,OAAO,CAACD,QAAQ,CAACE,IAAV,CAAR,CAAR;AACH,KALE,EAKAC,KALA,CAKM,UAAUC,KAAV,EAAiB;AACtBX,MAAAA,QAAQ,CAACY,SAAS,EAAV,CAAR;AACH,KAPE,CAAP;AAQH,GATD;AAUH,CAXM;AAaP,OAAO,MAAMJ,OAAO,GAAIK,IAAD,IAAU;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAEjB,aADH;AAEHgB,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMD,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHE,IAAAA,IAAI,EAAEhB;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from \"axios\";\n\nexport const USER_SET_USER = 'USER/USER_SET_USER';\nexport const USER_RESET_USER = 'USER/USER_RESET_USER';\n\nexport const fetchUser = () => {\n    return (dispatch) => {\n        return axios.get(process.env.REACT_APP_API_URL + \"/api/session\",{\n                withCredentials: true\n            })\n            .then(response => {\n                dispatch(setUser(response.data))\n            }).catch(function (error) {\n                dispatch(resetUser());\n            });\n    }\n}\n\nexport const setUser = (user) => {\n    return {\n        type: USER_SET_USER,\n        user\n    }\n};\n\nexport const resetUser = () => {\n    return {\n        type: USER_RESET_USER\n    }\n};"]},"metadata":{},"sourceType":"module"}