{"ast":null,"code":"var _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/mobile/store/StoreList.jsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LoadingSpinner, LoadingVideo } from '../../common/layout/PresentUtil';\nimport Store from \"./Store\";\nimport { setPageNum } from \"../../../redux/action/content\";\nconst LoadingList = React.createElement(React.Fragment, null, React.createElement(LoadingVideo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}), React.createElement(LoadingVideo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}), React.createElement(LoadingVideo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}), React.createElement(LoadingVideo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), React.createElement(LoadingVideo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}), React.createElement(LoadingVideo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}));\nexport const StoreList = () => {\n  const _useSelector = useSelector(state => state.content),\n        appendedContentList = _useSelector.appendedContentList,\n        contentLoading = _useSelector.contentLoading,\n        activeContent = _useSelector.activeContent,\n        pageNum = _useSelector.pageNum,\n        pageSize = _useSelector.pageSize,\n        maxPage = _useSelector.maxPage;\n\n  const _useSelector2 = useSelector(state => state.channel),\n        channelLoading = _useSelector2.channelLoading;\n\n  const dispatch = useDispatch();\n\n  const renderContentList = () => {\n    return appendedContentList.map(content => React.createElement(Store, {\n      key: content.id,\n      content: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  };\n\n  const isLoadMore = () => !(pageNum === maxPage);\n\n  const loadMore = () => {\n    dispatch(setPageNum(pageNum + 1));\n  };\n\n  return React.createElement(React.Fragment, null, channelLoading || contentLoading ? LoadingList : renderContentList(), channelLoading || contentLoading || appendedContentList.length === 0 ? React.createElement(LoadingSpinner, {\n    color: \"#000\",\n    loading: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: isLoadMore() ? \"box has-text-centered\" : \"is-hidden\",\n    onClick: loadMore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\uB354\\uBCF4\\uAE30\")));\n};\nexport default StoreList;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/mobile/store/StoreList.jsx"],"names":["React","useDispatch","useSelector","LoadingSpinner","LoadingVideo","Store","setPageNum","LoadingList","StoreList","state","content","appendedContentList","contentLoading","activeContent","pageNum","pageSize","maxPage","channel","channelLoading","dispatch","renderContentList","map","id","isLoadMore","loadMore","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,iCAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,UAAR,QAAyB,+BAAzB;AAGA,MAAMC,WAAW,GAAG,0CACZ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADY,EAEZ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFY,EAGZ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHY,EAIZ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJY,EAKZ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALY,EAMZ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANY,CAApB;AAUA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA,uBAC8DN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,OAAhB,CADzE;AAAA,QACpBC,mBADoB,gBACpBA,mBADoB;AAAA,QACCC,cADD,gBACCA,cADD;AAAA,QACiBC,aADjB,gBACiBA,aADjB;AAAA,QACgCC,OADhC,gBACgCA,OADhC;AAAA,QACyCC,QADzC,gBACyCA,QADzC;AAAA,QACmDC,OADnD,gBACmDA,OADnD;;AAAA,wBAEFd,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACQ,OAAhB,CAFT;AAAA,QAEpBC,cAFoB,iBAEpBA,cAFoB;;AAG3B,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;;AACA,QAAMmB,iBAAiB,GAAG,MAAM;AAC5B,WAAOT,mBAAmB,CAACU,GAApB,CAAwBX,OAAO,IAClC,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,OAAO,CAACY,EAApB;AAAwB,MAAA,OAAO,EAAEZ,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAAP;AAGH,GAJD;;AAKA,QAAMa,UAAU,GAAG,MAAM,EAAET,OAAO,KAAKE,OAAd,CAAzB;;AACA,QAAMQ,QAAQ,GAAG,MAAM;AACnBL,IAAAA,QAAQ,CAACb,UAAU,CAACQ,OAAO,GAAG,CAAX,CAAX,CAAR;AACH,GAFD;;AAGA,SACI,0CACKI,cAAc,IAAIN,cAAlB,GAAkCL,WAAlC,GAAgDa,iBAAiB,EADtE,EAEKF,cAAc,IAAIN,cAAlB,IAAoCD,mBAAmB,CAACc,MAApB,KAA+B,CAAnE,GAAuE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE,MAAvB;AAA+B,IAAA,OAAO,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvE,GAA0H;AAAK,IAAA,SAAS,EAAEF,UAAU,KAAK,uBAAL,GAA+B,WAAzD;AAAsE,IAAA,OAAO,EAAEC,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAzF,CAF/H,CADJ;AAMH,CAnBM;AAqBP,eAAehB,SAAf","sourcesContent":["import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {LoadingSpinner, LoadingVideo} from '../../common/layout/PresentUtil';\nimport Store from \"./Store\";\nimport {setPageNum} from \"../../../redux/action/content\";\n\n\nconst LoadingList = <>\n        <LoadingVideo />\n        <LoadingVideo />\n        <LoadingVideo />\n        <LoadingVideo />\n        <LoadingVideo />\n        <LoadingVideo />\n    </>;\n\n\nexport const StoreList = () => {\n    const {appendedContentList, contentLoading, activeContent, pageNum, pageSize, maxPage} = useSelector(state => state.content);\n    const {channelLoading} = useSelector(state => state.channel);\n    const dispatch = useDispatch();\n    const renderContentList = () => {\n        return appendedContentList.map(content =>\n            <Store key={content.id} content={content} />)\n\n    };\n    const isLoadMore = () => !(pageNum === maxPage);\n    const loadMore = () => {\n        dispatch(setPageNum(pageNum + 1));\n    };\n    return (\n        <>\n            {channelLoading || contentLoading? LoadingList : renderContentList() }\n            {channelLoading || contentLoading || appendedContentList.length === 0 ? <LoadingSpinner color={\"#000\"} loading={true} /> : <div className={isLoadMore() ? \"box has-text-centered\" : \"is-hidden\"} onClick={loadMore}><strong>더보기</strong></div>}\n        </>\n    )\n};\n\nexport default StoreList;"]},"metadata":{},"sourceType":"module"}