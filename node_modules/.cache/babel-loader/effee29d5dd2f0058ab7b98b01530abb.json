{"ast":null,"code":"var _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/youtube/Metric.jsx\";\nimport React from 'react';\nimport Numbers from \"components/common/youtube/Numbers\";\nimport Moment from \"react-moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faThumbsDown as fasThumbsDown, faThumbsUp as fasTumbsUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { COMMENT_LIKED, COMMENT_UNLIKED, METRIC_THUMBS } from \"assets/styles/colors\";\nexport const YoutubeMetric = ({\n  content\n}) => {\n  return React.createElement(\"div\", {\n    className: \"columns is-marginless has-text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column has-text-left-desktop is-right-paddingless-desktop is-top-paddingless-mobile is-bottom-paddingless-mobile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    className: \"has-padding-left-5 has-text-weight-semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(ViewCountNumber, {\n    content: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"has-padding-like-column is-top-paddingless-mobile is-bottom-paddingless-mobile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"has-padding-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: fasTumbsUp,\n    color: METRIC_THUMBS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Numbers, {\n    shorten: true,\n    shortenPrecision: 1,\n    shortFormatMinValue: 1000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, content.likeCount)), React.createElement(\"span\", {\n    className: \"has-padding-left-15 has-padding-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: fasThumbsDown,\n    color: METRIC_THUMBS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Numbers, {\n    shorten: true,\n    shortenPrecision: 1,\n    shortFormatMinValue: 1000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, content.dislikeCount))));\n};\nexport const YoutubeMetricVertical = ({\n  content\n}) => {\n  return React.createElement(\"div\", {\n    className: \"is-flex justify-center has-padding-15 has-text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"flex-column align-items-center has-padding-5 has-padding-left-15 has-padding-right-15 has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: fasTumbsUp,\n    color: METRIC_THUMBS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Numbers, {\n    shorten: true,\n    shortenPrecision: 1,\n    shortFormatMinValue: 1000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, content.likeCount)), React.createElement(\"span\", {\n    className: \"flex-column align-items-center has-padding-5 has-padding-left-15 has-padding-right-15 has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: fasThumbsDown,\n    color: METRIC_THUMBS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Numbers, {\n    shorten: true,\n    shortenPrecision: 1,\n    shortFormatMinValue: 1000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, content.dislikeCount)));\n};\nexport const ViewCountNumber = ({\n  content\n}) => {\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"video-view-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Numbers, {\n    prefix: \"\\uC870\\uD68C\\uC218 \",\n    postfix: \"\\uD68C\",\n    shorten: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, content.viewCount)), React.createElement(\"span\", {\n    className: \"video-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, content.registerDate ? React.createElement(Moment, {\n    format: 'LL',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, content.registerDate) : \"알수 없음\"));\n};\nexport default YoutubeMetric;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/youtube/Metric.jsx"],"names":["React","Numbers","Moment","FontAwesomeIcon","faThumbsDown","fasThumbsDown","faThumbsUp","fasTumbsUp","COMMENT_LIKED","COMMENT_UNLIKED","METRIC_THUMBS","YoutubeMetric","content","likeCount","dislikeCount","YoutubeMetricVertical","ViewCountNumber","viewCount","registerDate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Numbers from \"components/common/youtube/Numbers\";\nimport Moment from \"react-moment\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faThumbsDown as fasThumbsDown, faThumbsUp as fasTumbsUp} from \"@fortawesome/free-solid-svg-icons\";\nimport {COMMENT_LIKED, COMMENT_UNLIKED, METRIC_THUMBS} from \"assets/styles/colors\";\n\nexport const YoutubeMetric = ({content}) => {\n    return (\n        <div className=\"columns is-marginless has-text-right\">\n            <div className=\"column has-text-left-desktop is-right-paddingless-desktop is-top-paddingless-mobile is-bottom-paddingless-mobile\">\n                <small className=\"has-padding-left-5 has-text-weight-semibold\">\n                    <ViewCountNumber content={content} />\n                </small>\n            </div>\n            <div className=\"has-padding-like-column is-top-paddingless-mobile is-bottom-paddingless-mobile\">\n                <span className=\"has-padding-5\">\n                    <FontAwesomeIcon icon={fasTumbsUp} color={METRIC_THUMBS}/>\n                </span>\n                <span>\n                     <Numbers shorten={true} shortenPrecision={1} shortFormatMinValue={1000}>{content.likeCount}</Numbers>\n                </span>\n                <span className=\"has-padding-left-15 has-padding-5\">\n                    <FontAwesomeIcon icon={fasThumbsDown} color={METRIC_THUMBS}/>\n                </span>\n                <span>\n                     <Numbers shorten={true} shortenPrecision={1} shortFormatMinValue={1000}>{content.dislikeCount}</Numbers>\n                 </span>\n            </div>\n        </div>\n    );\n}\n\nexport const YoutubeMetricVertical = ({content}) => {\n    return (\n        <div className=\"is-flex justify-center has-padding-15 has-text-right\">\n            <span className=\"flex-column align-items-center has-padding-5 has-padding-left-15 has-padding-right-15 has-text-centered\">\n                <FontAwesomeIcon size={\"lg\"} icon={fasTumbsUp} color={METRIC_THUMBS}/>\n                <Numbers shorten={true} shortenPrecision={1} shortFormatMinValue={1000}>{content.likeCount}</Numbers>\n            </span>\n            <span className=\"flex-column align-items-center has-padding-5 has-padding-left-15 has-padding-right-15 has-text-centered\">\n                <FontAwesomeIcon size={\"lg\"}  icon={fasThumbsDown} color={METRIC_THUMBS}/>\n                <Numbers shorten={true} shortenPrecision={1} shortFormatMinValue={1000}>{content.dislikeCount}</Numbers>\n            </span>\n        </div>\n    )\n}\n\nexport const ViewCountNumber = ({content}) => {\n    return (\n        <>\n            <span className=\"video-view-count\">\n                <Numbers prefix=\"조회수 \" postfix=\"회\" shorten={false}>{content.viewCount}</Numbers>\n            </span>\n            <span className=\"video-date\">\n                {content.registerDate ? (<Moment format={'LL'}>{content.registerDate}</Moment>) : \"알수 없음\"}\n            </span>\n        </>\n    )\n}\n\nexport default YoutubeMetric;"]},"metadata":{},"sourceType":"module"}