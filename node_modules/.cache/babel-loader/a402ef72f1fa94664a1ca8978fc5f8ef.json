{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/content/ContentDetail.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft, faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport YouTube from \"react-youtube\";\nimport CommentList from \"components/common/comment/CommentList\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport ScrollManager from \"components/common/scroll/ScrollManager\";\nimport { fetchUpdateContentLike, updateContentUpdated } from \"data/redux/action/content\";\nimport { faStar as fasStar } from '@fortawesome/free-regular-svg-icons';\nimport { STORE_LIKED } from \"assets/styles/colors\";\nimport { requireUser } from \"data/redux/action/user\";\nimport { fetchContentDetail, resetContentDetailData, updateContentDetail } from \"data/redux/action/contentDetail\";\nimport { fetchChannel } from \"data/redux/action/channel\";\nimport { isNil as _isNil } from \"lodash\";\nimport { useLastLocation } from \"react-router-last-location\";\nimport YoutubeMetric from \"components/common/youtube/Metric\";\nimport { buildChannelPath } from \"data/util\";\n\nconst ContentDetail = () => {\n  const _useSelector = useSelector(state => state.contentDetail),\n        contentDetail = _useSelector.contentDetail;\n\n  const _useState = useState(contentDetail ? contentDetail.liked : false),\n        _useState2 = _slicedToArray(_useState, 2),\n        liked = _useState2[0],\n        setLiked = _useState2[1];\n\n  const dispatch = useDispatch();\n\n  const _useParams = useParams(),\n        channelId = _useParams.channelId,\n        contentId = _useParams.contentId;\n\n  const history = useHistory();\n  const location = useLocation();\n  const lastLocation = useLastLocation();\n\n  const backToContentList = e => {\n    if (_isNil(lastLocation)) {\n      history.push({\n        pathname: buildChannelPath({\n          id: channelId\n        }),\n        search: location.search\n      });\n    } else {\n      history.goBack(1);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(fetchChannel(channelId));\n    dispatch(fetchContentDetail(channelId, contentId));\n    return () => {\n      dispatch(resetContentDetailData());\n    };\n  }, [channelId, contentId]);\n  useEffect(() => {\n    setLiked(contentDetail ? contentDetail.liked : false);\n  }, [contentDetail]);\n\n  const updateLike = () => {\n    let origin = liked;\n    let updated = !liked;\n    dispatch(requireUser(user => {\n      setLiked(updated);\n      dispatch(fetchUpdateContentLike(user.email, contentDetail.id, updated, () => {\n        dispatch(updateContentUpdated(contentDetail, {\n          liked: updated\n        }));\n        dispatch(updateContentDetail({\n          liked: updated\n        }));\n      }, () => setLiked(origin)));\n    }));\n  };\n\n  return React.createElement(ScrollManager, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"columns is-block is-paddingless is-fullheight-with-navbar-fixed-height has-padding-right-10 has-padding-left-10 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"columns is-marginless is-bottom-borderless\",\n    style: {\n      'lineHeight': '2'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column text-overflow-ellipsis has-padding-right-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"back-content-detail is-pulled-left has-margin-right-15\",\n    icon: faChevronLeft,\n    size: '2x',\n    onClick: backToContentList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, contentDetail.title))), React.createElement(\"div\", {\n    className: \"has-padding-like-column is-left-paddingless is-right-paddingless is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: liked ? faStar : fasStar,\n    className: \"clickable fa-1-25x\",\n    color: liked ? STORE_LIKED : \"\",\n    onClick: updateLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))), React.createElement(YouTube, {\n    videoId: contentDetail.videoLinkId // defaults -> null\n    ,\n    id: contentDetail.videoLinkId // defaults -> null\n    ,\n    className: \"youtube-container\" // defaults -> null\n    ,\n    containerClassName: \"column is-full is-marginless is-paddingless is-top-borderless has-text-centered\" // defaults -> ''\n    // opts={opts}                        // defaults -> {}\n    // onReady={func}                    // defaults -> noop\n    // onPlay={func}                     // defaults -> noop\n    // onPause={func}                    // defaults -> noop\n    // onEnd={func}                      // defaults -> noop\n    // onError={func}                    // defaults -> noop\n    // onStateChange={func}              // defaults -> noop\n    // onPlaybackRateChange={func}       // defaults -> noop\n    // onPlaybackQualityChange={func}    // defaults -> noop\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(YoutubeMetric, {\n    content: contentDetail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(CommentList, {\n    content: contentDetail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })));\n};\n\nexport default ContentDetail;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/content/ContentDetail.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","FontAwesomeIcon","faChevronLeft","faStar","YouTube","CommentList","useHistory","useLocation","useParams","ScrollManager","fetchUpdateContentLike","updateContentUpdated","fasStar","STORE_LIKED","requireUser","fetchContentDetail","resetContentDetailData","updateContentDetail","fetchChannel","isNil","_isNil","useLastLocation","YoutubeMetric","buildChannelPath","ContentDetail","state","contentDetail","liked","setLiked","dispatch","channelId","contentId","history","location","lastLocation","backToContentList","e","push","pathname","id","search","goBack","updateLike","origin","updated","user","email","title","videoLinkId"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronLeft, faStar} from \"@fortawesome/free-solid-svg-icons\";\nimport YouTube from \"react-youtube\";\nimport CommentList from \"components/common/comment/CommentList\";\nimport {useHistory, useLocation, useParams} from \"react-router\";\nimport ScrollManager from \"components/common/scroll/ScrollManager\";\nimport {fetchUpdateContentLike, updateContentUpdated} from \"data/redux/action/content\";\nimport {faStar as fasStar} from '@fortawesome/free-regular-svg-icons';\nimport {STORE_LIKED} from \"assets/styles/colors\";\nimport {requireUser} from \"data/redux/action/user\";\nimport {fetchContentDetail, resetContentDetailData, updateContentDetail} from \"data/redux/action/contentDetail\";\nimport {fetchChannel} from \"data/redux/action/channel\";\nimport {isNil as _isNil} from \"lodash\";\nimport {useLastLocation} from \"react-router-last-location\";\nimport YoutubeMetric from \"components/common/youtube/Metric\";\nimport {buildChannelPath} from \"data/util\";\n\nconst ContentDetail = () => {\n\n    const {contentDetail} = useSelector(state => state.contentDetail);\n    const [liked, setLiked] = useState(contentDetail ? contentDetail.liked : false);\n\n    const dispatch = useDispatch();\n    const {channelId, contentId} = useParams();\n    const history = useHistory();\n    const location = useLocation();\n    const lastLocation = useLastLocation();\n    const backToContentList = (e) => {\n        if (_isNil(lastLocation)) {\n            history.push({\n                pathname: buildChannelPath({id: channelId}),\n                search: location.search\n            });\n        } else {\n            history.goBack(1);\n        }\n    };\n\n    useEffect(() => {\n        dispatch(fetchChannel(channelId));\n        dispatch(fetchContentDetail(channelId, contentId));\n        return () => {\n            dispatch(resetContentDetailData());\n        }\n    }, [channelId, contentId])\n\n    useEffect(() => {\n        setLiked(contentDetail ? contentDetail.liked : false)\n    }, [contentDetail]);\n\n    const updateLike = () => {\n        let origin = liked;\n        let updated = !liked;\n        dispatch(requireUser((user) => {\n            setLiked(updated);\n            dispatch(fetchUpdateContentLike(user.email, contentDetail.id, updated,() => {\n                dispatch(updateContentUpdated(contentDetail, {liked: updated}));\n                dispatch(updateContentDetail({liked: updated}));\n            },() => setLiked(origin)));\n        }));\n    }\n\n    return (\n        <ScrollManager>\n            <div className=\"columns is-block is-paddingless is-fullheight-with-navbar-fixed-height has-padding-right-10 has-padding-left-10 \">\n                <div className=\"columns is-marginless is-bottom-borderless\" style={{'lineHeight': '2'}}>\n                    <div className=\"column text-overflow-ellipsis has-padding-right-5\">\n                        <FontAwesomeIcon className=\"back-content-detail is-pulled-left has-margin-right-15\"\n                                         icon={faChevronLeft} size={'2x'} onClick={backToContentList}/>\n                        <span><strong>{contentDetail.title}</strong></span>\n                    </div>\n                    <div className=\"has-padding-like-column is-left-paddingless is-right-paddingless is-marginless\">\n                        <FontAwesomeIcon\n                            icon={liked ? faStar : fasStar}\n                            className=\"clickable fa-1-25x\"\n                            color={liked ? STORE_LIKED : \"\"}\n                            onClick={updateLike}/>\n                    </div>\n                </div>\n                <YouTube\n                    videoId={contentDetail.videoLinkId}                  // defaults -> null\n                    id={contentDetail.videoLinkId}                       // defaults -> null\n                    className=\"youtube-container\"                // defaults -> null\n                    containerClassName=\"column is-full is-marginless is-paddingless is-top-borderless has-text-centered\"       // defaults -> ''\n                    // opts={opts}                        // defaults -> {}\n                    // onReady={func}                    // defaults -> noop\n                    // onPlay={func}                     // defaults -> noop\n                    // onPause={func}                    // defaults -> noop\n                    // onEnd={func}                      // defaults -> noop\n                    // onError={func}                    // defaults -> noop\n                    // onStateChange={func}              // defaults -> noop\n                    // onPlaybackRateChange={func}       // defaults -> noop\n                    // onPlaybackQualityChange={func}    // defaults -> noop\n                />\n                <YoutubeMetric content={contentDetail} />\n                <CommentList content={contentDetail}/>\n            </div>\n        </ScrollManager>\n\n    )\n};\n\nexport default ContentDetail;"]},"metadata":{},"sourceType":"module"}