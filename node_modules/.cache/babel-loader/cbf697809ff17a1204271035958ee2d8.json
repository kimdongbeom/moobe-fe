{"ast":null,"code":"import _objectSpread from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/google/Analytics.jsx\";\nimport React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { GOOGLE_ANALYTICS_TRACKER_ID, isEnableAnalytics } from \"assets/styles/const\";\nimport { useLocation } from \"react-router\";\n\nif (isEnableAnalytics()) {\n  ReactGA.initialize(GOOGLE_ANALYTICS_TRACKER_ID);\n}\n\nconst withGA = (BaseComponent, options = {}) => {\n  const trackPage = page => {\n    ReactGA.set(_objectSpread({\n      page\n    }, options));\n    ReactGA.pageview(page);\n  };\n\n  return props => {\n    const location = useLocation();\n    useEffect(() => {\n      trackPage(location.pathname + location.search);\n    }, [location.pathname, location.search]);\n    return React.createElement(BaseComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  };\n};\n\nexport default isEnableAnalytics() ? withGA : BaseComponent => props => React.createElement(BaseComponent, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}));","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/google/Analytics.jsx"],"names":["React","useEffect","ReactGA","GOOGLE_ANALYTICS_TRACKER_ID","isEnableAnalytics","useLocation","initialize","withGA","BaseComponent","options","trackPage","page","set","pageview","props","location","pathname","search"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAAQC,2BAAR,EAAqCC,iBAArC,QAA6D,qBAA7D;AACA,SAAQC,WAAR,QAA0B,cAA1B;;AAEA,IAAID,iBAAiB,EAArB,EAAyB;AACrBF,EAAAA,OAAO,CAACI,UAAR,CAAmBH,2BAAnB;AACH;;AAED,MAAMI,MAAM,GAAG,CAACC,aAAD,EAAgBC,OAAO,GAAG,EAA1B,KAAiC;AAE5C,QAAMC,SAAS,GAAGC,IAAI,IAAI;AACtBT,IAAAA,OAAO,CAACU,GAAR;AACID,MAAAA;AADJ,OAEOF,OAFP;AAIAP,IAAAA,OAAO,CAACW,QAAR,CAAiBF,IAAjB;AACH,GAND;;AAQA,SAAQG,KAAD,IAAW;AACd,UAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEAJ,IAAAA,SAAS,CAAC,MAAM;AACZS,MAAAA,SAAS,CAACK,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACE,MAA9B,CAAT;AACH,KAFQ,EAEN,CAACF,QAAQ,CAACC,QAAV,EAAoBD,QAAQ,CAACE,MAA7B,CAFM,CAAT;AAIA,WAAO,oBAAC,aAAD,oBAAmBH,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GARD;AASH,CAnBD;;AAqBA,eAAeV,iBAAiB,KAAKG,MAAL,GAAeC,aAAD,IAAoBM,KAAD,IAAW,oBAAC,aAAD,oBAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5E","sourcesContent":["import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport {GOOGLE_ANALYTICS_TRACKER_ID, isEnableAnalytics} from \"assets/styles/const\";\nimport {useLocation} from \"react-router\";\n\nif (isEnableAnalytics()) {\n    ReactGA.initialize(GOOGLE_ANALYTICS_TRACKER_ID);\n}\n\nconst withGA = (BaseComponent, options = {}) => {\n\n    const trackPage = page => {\n        ReactGA.set({\n            page,\n            ...options\n        });\n        ReactGA.pageview(page);\n    };\n\n    return (props) => {\n        const location = useLocation();\n\n        useEffect(() => {\n            trackPage(location.pathname + location.search)\n        }, [location.pathname, location.search]);\n\n        return <BaseComponent {...props} />;\n    };\n};\n\nexport default isEnableAnalytics() ? withGA : (BaseComponent) => (props) => <BaseComponent {...props} />;\n"]},"metadata":{},"sourceType":"module"}