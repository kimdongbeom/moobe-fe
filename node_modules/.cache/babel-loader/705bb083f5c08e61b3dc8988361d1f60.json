{"ast":null,"code":"import axios from 'axios';\nimport { getContents } from \"data/api\";\nexport const CHANNEL_ADD_CHANNEL = 'CHANNEL/ADD_CHANNEL';\nexport const CHANNEL_SET_ACTIVE_CHANNEL = 'CHANNEL/SET_ACTIVE_CHANNEL';\nexport const CHANNEL_FETCH_CHANNEL = 'CHANNEL/FETCH_CHANNEL';\nexport const CHANNEL_FETCH_CHANNEL_SUCCESS = 'CHANNEL/FETCH_CHANNEL_SUCCESS';\nexport const CHANNEL_FETCH_CHANNEL_ERROR = 'CHANNEL/FETCH_CHANNEL_ERROR';\nexport const fetchChannel = activeChannelId => {\n  return dispatch => {\n    dispatch(fetchChannelData()); //TODO set channel list from api\n\n    return getContents().then(response => {\n      setTimeout(() => {\n        dispatch(fetchSuccessChannelData({\n          data: response.data,\n          activeChannelId: activeChannelId\n        }));\n      }, 1000);\n    }).catch(function (error) {\n      dispatch(fetchErrorChannelData(error));\n    });\n  };\n};\nexport const fetchChannelData = () => {\n  return {\n    type: CHANNEL_FETCH_CHANNEL\n  };\n};\nexport const fetchSuccessChannelData = data => {\n  return {\n    type: CHANNEL_FETCH_CHANNEL_SUCCESS,\n    data\n  };\n};\nexport const fetchErrorChannelData = err => {\n  return {\n    type: CHANNEL_FETCH_CHANNEL_ERROR,\n    err\n  };\n};\nexport const setActiveChannel = channelId => {\n  return {\n    type: CHANNEL_SET_ACTIVE_CHANNEL,\n    channelId\n  };\n};","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/action/channel.js"],"names":["axios","getContents","CHANNEL_ADD_CHANNEL","CHANNEL_SET_ACTIVE_CHANNEL","CHANNEL_FETCH_CHANNEL","CHANNEL_FETCH_CHANNEL_SUCCESS","CHANNEL_FETCH_CHANNEL_ERROR","fetchChannel","activeChannelId","dispatch","fetchChannelData","then","response","setTimeout","fetchSuccessChannelData","data","catch","error","fetchErrorChannelData","type","err","setActiveChannel","channelId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,UAA1B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,6BAA6B,GAAG,+BAAtC;AACP,OAAO,MAAMC,2BAA2B,GAAG,6BAApC;AAGP,OAAO,MAAMC,YAAY,GAAIC,eAAD,IAAqB;AAC7C,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR,CADiB,CAEjB;;AACA,WAAOT,WAAW,GAAGU,IAAd,CAAmBC,QAAQ,IAAI;AAC9BC,MAAAA,UAAU,CAAC,MAAM;AACbJ,QAAAA,QAAQ,CAACK,uBAAuB,CAAC;AAACC,UAAAA,IAAI,EAAEH,QAAQ,CAACG,IAAhB;AAAsBP,UAAAA,eAAe,EAAEA;AAAvC,SAAD,CAAxB,CAAR;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAJE,EAIAQ,KAJA,CAIM,UAAUC,KAAV,EAAiB;AACtBR,MAAAA,QAAQ,CAACS,qBAAqB,CAACD,KAAD,CAAtB,CAAR;AACH,KANE,CAAP;AAOH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMP,gBAAgB,GAAG,MAAM;AAClC,SAAO;AACHS,IAAAA,IAAI,EAAEf;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMU,uBAAuB,GAAIC,IAAD,IAAU;AAC7C,SAAO;AACHI,IAAAA,IAAI,EAAEd,6BADH;AAEHU,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,qBAAqB,GAAIE,GAAD,IAAS;AAC1C,SAAO;AACHD,IAAAA,IAAI,EAAEb,2BADH;AAEHc,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,SAAO;AACHH,IAAAA,IAAI,EAAEhB,0BADH;AAEHmB,IAAAA;AAFG,GAAP;AAIH,CALM","sourcesContent":["import axios from 'axios';\nimport {getContents} from \"data/api\";\n\nexport const CHANNEL_ADD_CHANNEL = 'CHANNEL/ADD_CHANNEL';\nexport const CHANNEL_SET_ACTIVE_CHANNEL = 'CHANNEL/SET_ACTIVE_CHANNEL';\nexport const CHANNEL_FETCH_CHANNEL = 'CHANNEL/FETCH_CHANNEL';\nexport const CHANNEL_FETCH_CHANNEL_SUCCESS = 'CHANNEL/FETCH_CHANNEL_SUCCESS';\nexport const CHANNEL_FETCH_CHANNEL_ERROR = 'CHANNEL/FETCH_CHANNEL_ERROR';\n\n\nexport const fetchChannel = (activeChannelId) => {\n    return (dispatch) => {\n        dispatch(fetchChannelData());\n        //TODO set channel list from api\n        return getContents().then(response => {\n                setTimeout(() => {\n                    dispatch(fetchSuccessChannelData({data: response.data, activeChannelId: activeChannelId}))\n                }, 1000)\n            }).catch(function (error) {\n                dispatch(fetchErrorChannelData(error))\n            });\n    }\n};\n\nexport const fetchChannelData = () => {\n    return {\n        type: CHANNEL_FETCH_CHANNEL\n    }\n};\n\nexport const fetchSuccessChannelData = (data) => {\n    return {\n        type: CHANNEL_FETCH_CHANNEL_SUCCESS,\n        data\n    }\n};\n\nexport const fetchErrorChannelData = (err) => {\n    return {\n        type: CHANNEL_FETCH_CHANNEL_ERROR,\n        err\n    }\n};\n\nexport const setActiveChannel = (channelId) => {\n    return {\n        type: CHANNEL_SET_ACTIVE_CHANNEL,\n        channelId\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}