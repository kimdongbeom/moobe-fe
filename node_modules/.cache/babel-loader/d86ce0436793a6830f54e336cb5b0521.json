{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/search/Search.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty as _isEmpty } from \"lodash\";\nimport { searchTypeList } from \"data/redux/action/content\";\nimport { buildChannelPath, buildContentPath, buildQuery, nullFunction } from \"data/util\";\nimport { useHistory } from \"react-router\";\n\nconst SearchBar = () => {\n  const _useSelector = useSelector(state => state.channel),\n        activeChannel = _useSelector.activeChannel;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchText = _useState2[0],\n        setSearchText = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isDropdownActive = _useState4[0],\n        setIsDropdownActive = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        focusedIndex = _useState6[0],\n        setFocusedIndex = _useState6[1];\n\n  const _useSelector2 = useSelector(state => state.map),\n        mapBounds = _useSelector2.mapBounds;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    if (!isDropdownActive) {\n      setFocusedIndex(0);\n    }\n  }, [isDropdownActive]);\n\n  const handleKeyDown = e => {\n    // down 40 up 38 enter 13\n    if (e.keyCode == 40) {\n      setFocusedIndex((focusedIndex + 1) % 5);\n      e.preventDefault();\n    } else if (e.keyCode == 38) {\n      setFocusedIndex((focusedIndex + 5 - 1) % 5);\n      e.preventDefault();\n    } else if (e.keyCode == 13) {\n      search(focusedIndex);\n      e.target.blur();\n      e.preventDefault();\n    }\n  };\n\n  const handleChange = e => {\n    setSearchText(e.target.value);\n\n    if (_isEmpty(e.target.value) || e.target.value.length <= 1) {\n      setIsDropdownActive(false);\n    } else {\n      setIsDropdownActive(true);\n    }\n  };\n\n  const handleBlur = e => {\n    setTimeout(() => {\n      setIsDropdownActive(false);\n    }, 200);\n  };\n\n  const handleFocus = e => {\n    if (!_isEmpty(searchText)) {\n      setIsDropdownActive(true);\n    }\n  };\n\n  const handleDropdownClick = idx => {\n    search(idx);\n  };\n\n  const search = idx => {\n    setIsDropdownActive(false);\n    setSearchText(\"\");\n    history.push({\n      pathname: buildContentPath(activeChannel, null),\n      search: buildQuery({\n        query: searchText,\n        searchType: searchTypeList[idx].type,\n        page: 1,\n        swLat: mapBounds.sw.lat,\n        swLng: mapBounds.sw.lng,\n        neLat: mapBounds.ne.lat,\n        neLng: mapBounds.ne.lng\n      })\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"dropdown is-right is-full-width searchbar-dropdown \" + (isDropdownActive ? \"is-active\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(SearchBarText, {\n    onFocus: handleFocus,\n    className: \"is-flex is-full-width dropdown-trigger\",\n    onChange: handleChange,\n    onKeyDown: handleKeyDown,\n    onBlur: handleBlur,\n    value: searchText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"dropdown-menu is-full-width is-paddingless\",\n    id: \"dropdown-menu\",\n    role: \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dropdown-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, searchTypeList.map((type, idx) => {\n    return React.createElement(\"div\", {\n      key: type.type,\n      className: \"dropdown-item searchbar-dropdown-item text-overflow-ellipsis \" + (focusedIndex === idx ? \"is-active\" : \"\"),\n      onClick: () => handleDropdownClick(idx),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"search-content-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, type.title, \" \"), \":\\xA0\", React.createElement(\"span\", {\n      className: \"has-text-link has-text-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, searchText));\n  }))));\n};\n\nconst SearchBarText = ({\n  className,\n  onChange = nullFunction,\n  onKeyDown = nullFunction,\n  onBlur = nullFunction,\n  onFocus = nullFunction,\n  value = \"\"\n}) => {\n  return React.createElement(\"div\", {\n    className: className ? className : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(SearchBarTextChannelAddon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"field is-full-width\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"input\",\n    type: \"search\",\n    value: value,\n    placeholder: \"\\uC74C\\uC2DD, \\uD0DC\\uADF8, \\uC81C\\uBAA9, \\uC8FC\\uC18C\\uB85C \\uAC80\\uC0C9\\uD558\\uC2E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\",\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))));\n};\n\nconst SearchBarTextChannelAddon = () => {\n  const _useSelector3 = useSelector(state => state.channel),\n        activeChannel = _useSelector3.activeChannel;\n\n  return React.createElement(React.Fragment, null, activeChannel ? React.createElement(\"p\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"button searchbar-addon is-static has-cursor-default\",\n    style: {\n      backgroundImage: `url(${activeChannel.profileImg})`,\n      backgroundSize: \"cover\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })) : null);\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/search/Search.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","isEmpty","_isEmpty","searchTypeList","buildChannelPath","buildContentPath","buildQuery","nullFunction","useHistory","SearchBar","state","channel","activeChannel","searchText","setSearchText","isDropdownActive","setIsDropdownActive","focusedIndex","setFocusedIndex","map","mapBounds","dispatch","history","handleKeyDown","e","keyCode","preventDefault","search","target","blur","handleChange","value","length","handleBlur","setTimeout","handleFocus","handleDropdownClick","idx","push","pathname","query","searchType","type","page","swLat","sw","lat","swLng","lng","neLat","ne","neLng","title","SearchBarText","className","onChange","onKeyDown","onBlur","onFocus","SearchBarTextChannelAddon","backgroundImage","profileImg","backgroundSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,OAAO,IAAIC,QAAnB,QAAkC,QAAlC;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,SAAQC,gBAAR,EAA0BC,gBAA1B,EAA4CC,UAA5C,EAAwDC,YAAxD,QAA2E,WAA3E;AACA,SAAQC,UAAR,QAAyB,cAAzB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA,uBACIT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,OAAhB,CADf;AAAA,QACbC,aADa,gBACbA,aADa;;AAAA,oBAEgBd,QAAQ,CAAC,EAAD,CAFxB;AAAA;AAAA,QAEbe,UAFa;AAAA,QAEDC,aAFC;;AAAA,qBAG4BhB,QAAQ,CAAC,KAAD,CAHpC;AAAA;AAAA,QAGbiB,gBAHa;AAAA,QAGKC,mBAHL;;AAAA,qBAIoBlB,QAAQ,CAAC,CAAD,CAJ5B;AAAA;AAAA,QAIbmB,YAJa;AAAA,QAICC,eAJD;;AAAA,wBAKAlB,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACS,GAAhB,CALX;AAAA,QAKbC,SALa,iBAKbA,SALa;;AAMpB,QAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,OAAO,GAAGd,UAAU,EAA1B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACkB,gBAAL,EAAuB;AACnBG,MAAAA,eAAe,CAAC,CAAD,CAAf;AACH;AACJ,GAJQ,EAIN,CAACH,gBAAD,CAJM,CAAT;;AAMA,QAAMQ,aAAa,GAAIC,CAAD,IAAO;AACzB;AACA,QAAIA,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAqB;AACjBP,MAAAA,eAAe,CAAC,CAACD,YAAY,GAAG,CAAhB,IAAqB,CAAtB,CAAf;AACAO,MAAAA,CAAC,CAACE,cAAF;AACH,KAHD,MAGO,IAAIF,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAqB;AACxBP,MAAAA,eAAe,CAAC,CAACD,YAAY,GAAG,CAAf,GAAmB,CAApB,IAAyB,CAA1B,CAAf;AACAO,MAAAA,CAAC,CAACE,cAAF;AACH,KAHM,MAGA,IAAIF,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAqB;AACxBE,MAAAA,MAAM,CAACV,YAAD,CAAN;AACAO,MAAAA,CAAC,CAACI,MAAF,CAASC,IAAT;AACAL,MAAAA,CAAC,CAACE,cAAF;AACH;AACJ,GAbD;;AAeA,QAAMI,YAAY,GAAIN,CAAD,IAAO;AACxBV,IAAAA,aAAa,CAACU,CAAC,CAACI,MAAF,CAASG,KAAV,CAAb;;AACA,QAAI7B,QAAQ,CAACsB,CAAC,CAACI,MAAF,CAASG,KAAV,CAAR,IAA4BP,CAAC,CAACI,MAAF,CAASG,KAAT,CAAeC,MAAf,IAAyB,CAAzD,EAA4D;AACxDhB,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,KAFD,MAEO;AACHA,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH;AACJ,GAPD;;AASA,QAAMiB,UAAU,GAAIT,CAAD,IAAO;AACtBU,IAAAA,UAAU,CAAC,MAAM;AACblB,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,KAFS,EAEP,GAFO,CAAV;AAGH,GAJD;;AAMA,QAAMmB,WAAW,GAAIX,CAAD,IAAO;AACvB,QAAI,CAACtB,QAAQ,CAACW,UAAD,CAAb,EAA2B;AACvBG,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH;AACJ,GAJD;;AAMA,QAAMoB,mBAAmB,GAAIC,GAAD,IAAS;AACjCV,IAAAA,MAAM,CAACU,GAAD,CAAN;AACH,GAFD;;AAIA,QAAMV,MAAM,GAAIU,GAAD,IAAS;AACpBrB,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAF,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAQ,IAAAA,OAAO,CAACgB,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAElC,gBAAgB,CAACO,aAAD,EAAgB,IAAhB,CADjB;AAETe,MAAAA,MAAM,EAAErB,UAAU,CAAC;AACfkC,QAAAA,KAAK,EAAE3B,UADQ;AAEf4B,QAAAA,UAAU,EAAEtC,cAAc,CAACkC,GAAD,CAAd,CAAoBK,IAFjB;AAGfC,QAAAA,IAAI,EAAE,CAHS;AAIfC,QAAAA,KAAK,EAAExB,SAAS,CAACyB,EAAV,CAAaC,GAJL;AAKfC,QAAAA,KAAK,EAAE3B,SAAS,CAACyB,EAAV,CAAaG,GALL;AAMfC,QAAAA,KAAK,EAAE7B,SAAS,CAAC8B,EAAV,CAAaJ,GANL;AAOfK,QAAAA,KAAK,EAAE/B,SAAS,CAAC8B,EAAV,CAAaF;AAPL,OAAD;AAFT,KAAb;AAYH,GAfD;;AAkBA,SACI;AAAK,IAAA,SAAS,EAAE,yDAAyDjC,gBAAgB,GAAG,WAAH,GAAiB,EAA1F,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEoB,WAAxB;AAAqC,IAAA,SAAS,EAAC,wCAA/C;AAAwF,IAAA,QAAQ,EAAEL,YAAlG;AAAgH,IAAA,SAAS,EAAEP,aAA3H;AACe,IAAA,MAAM,EAAEU,UADvB;AACmC,IAAA,KAAK,EAAEpB,UAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAK,IAAA,SAAS,EAAC,4CAAf;AAA4D,IAAA,EAAE,EAAC,eAA/D;AAA+E,IAAA,IAAI,EAAC,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,cAAc,CAACgB,GAAf,CAAmB,CAACuB,IAAD,EAAOL,GAAP,KAAe;AAC/B,WACI;AAAK,MAAA,GAAG,EAAEK,IAAI,CAACA,IAAf;AACK,MAAA,SAAS,EAAE,mEAAmEzB,YAAY,KAAKoB,GAAjB,GAAuB,WAAvB,GAAqC,EAAxG,CADhB;AAEK,MAAA,OAAO,EAAE,MAAMD,mBAAmB,CAACC,GAAD,CAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCK,IAAI,CAACU,KAA9C,MAHJ,WAKI;AAAM,MAAA,SAAS,EAAC,oCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsDvC,UAAtD,CALJ,CADJ;AASH,GAVA,CADL,CADJ,CAHJ,CADJ;AAqBH,CA9FD;;AAgGA,MAAMwC,aAAa,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,QAAQ,GAAChD,YAArB;AAAmCiD,EAAAA,SAAS,GAACjD,YAA7C;AAA2DkD,EAAAA,MAAM,GAAClD,YAAlE;AAAgFmD,EAAAA,OAAO,GAACnD,YAAxF;AAAsGwB,EAAAA,KAAK,GAAG;AAA9G,CAAD,KAAuH;AACzI,SACI;AAAK,IAAA,SAAS,EAAEuB,SAAS,GAAGA,SAAH,GAAe,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,IAAI,EAAC,QAA9B;AAAuC,IAAA,KAAK,EAAEvB,KAA9C;AACO,IAAA,WAAW,EAAC,wHADnB;AAEO,IAAA,QAAQ,EAAEwB,QAFjB;AAGO,IAAA,SAAS,EAAEC,SAHlB;AAIO,IAAA,OAAO,EAAEE,OAJhB;AAKO,IAAA,MAAM,EAAED,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,CAFJ,CADJ;AAeH,CAhBD;;AAkBA,MAAME,yBAAyB,GAAG,MAAM;AAAA,wBACZ3D,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,OAAhB,CADC;AAAA,QAC7BC,aAD6B,iBAC7BA,aAD6B;;AAEpC,SACI,0CACKA,aAAa,GACR;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,qDAAb;AACG,IAAA,KAAK,EAAE;AAACgD,MAAAA,eAAe,EAAG,OAAMhD,aAAa,CAACiD,UAAW,GAAlD;AAAsDC,MAAAA,cAAc,EAAE;AAAtE,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADQ,GAKR,IANV,CADJ;AAUH,CAZD;;AAcA,eAAerD,SAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {isEmpty as _isEmpty} from \"lodash\";\nimport {searchTypeList} from \"data/redux/action/content\";\nimport {buildChannelPath, buildContentPath, buildQuery, nullFunction} from \"data/util\";\nimport {useHistory} from \"react-router\";\n\n\nconst SearchBar = () => {\n    const {activeChannel} = useSelector(state => state.channel);\n    const [searchText, setSearchText] = useState(\"\");\n    const [isDropdownActive, setIsDropdownActive] = useState(false);\n    const [focusedIndex, setFocusedIndex] = useState(0);\n    const {mapBounds} = useSelector(state => state.map);\n    const dispatch = useDispatch()\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!isDropdownActive) {\n            setFocusedIndex(0);\n        }\n    }, [isDropdownActive])\n\n    const handleKeyDown = (e) => {\n        // down 40 up 38 enter 13\n        if (e.keyCode == 40) {\n            setFocusedIndex((focusedIndex + 1) % 5);\n            e.preventDefault()\n        } else if (e.keyCode == 38) {\n            setFocusedIndex((focusedIndex + 5 - 1) % 5);\n            e.preventDefault()\n        } else if (e.keyCode == 13) {\n            search(focusedIndex);\n            e.target.blur();\n            e.preventDefault()\n        }\n    };\n\n    const handleChange = (e) => {\n        setSearchText(e.target.value)\n        if (_isEmpty(e.target.value) || e.target.value.length <= 1) {\n            setIsDropdownActive(false)\n        } else {\n            setIsDropdownActive(true)\n        }\n    }\n\n    const handleBlur = (e) => {\n        setTimeout(() => {\n            setIsDropdownActive(false)\n        }, 200)\n    }\n\n    const handleFocus = (e) => {\n        if (!_isEmpty(searchText)) {\n            setIsDropdownActive(true)\n        }\n    }\n\n    const handleDropdownClick = (idx) => {\n        search(idx);\n    }\n\n    const search = (idx) => {\n        setIsDropdownActive(false)\n        setSearchText(\"\");\n        history.push({\n            pathname: buildContentPath(activeChannel, null),\n            search: buildQuery({\n                query: searchText,\n                searchType: searchTypeList[idx].type,\n                page: 1,\n                swLat: mapBounds.sw.lat,\n                swLng: mapBounds.sw.lng,\n                neLat: mapBounds.ne.lat,\n                neLng: mapBounds.ne.lng\n            })\n        });\n    }\n\n\n    return (\n        <div className={\"dropdown is-right is-full-width searchbar-dropdown \" + (isDropdownActive ? \"is-active\" : \"\")}>\n            <SearchBarText onFocus={handleFocus} className=\"is-flex is-full-width dropdown-trigger\" onChange={handleChange} onKeyDown={handleKeyDown}\n                           onBlur={handleBlur} value={searchText}/>\n            <div className=\"dropdown-menu is-full-width is-paddingless\" id=\"dropdown-menu\" role=\"menu\">\n                <div className=\"dropdown-content\">\n                    {searchTypeList.map((type, idx) => {\n                        return (\n                            <div key={type.type}\n                                 className={\"dropdown-item searchbar-dropdown-item text-overflow-ellipsis \" + (focusedIndex === idx ? \"is-active\" : \"\")}\n                                 onClick={() => handleDropdownClick(idx)}>\n                                <span className=\"search-content-header\">{type.title} </span>\n                                :&nbsp;\n                                <span className=\"has-text-link has-text-weight-bold\">{searchText}</span>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst SearchBarText = ({className, onChange=nullFunction, onKeyDown=nullFunction, onBlur=nullFunction, onFocus=nullFunction, value = \"\"}) => {\n    return (\n        <div className={className ? className : \"\"}>\n            <SearchBarTextChannelAddon/>\n            <div className=\"field is-full-width\">\n            <p className=\"control\">\n                <input className=\"input\" type=\"search\" value={value}\n                       placeholder=\"음식, 태그, 제목, 주소로 검색하실 수 있습니다.\"\n                       onChange={onChange}\n                       onKeyDown={onKeyDown}\n                       onFocus={onFocus}\n                       onBlur={onBlur}/>\n            </p>\n            </div>\n        </div>\n    )\n};\n\nconst SearchBarTextChannelAddon = () => {\n    const {activeChannel} = useSelector(state => state.channel);\n    return (\n        <>\n            {activeChannel\n                ? <p className=\"control\">\n                    <a className=\"button searchbar-addon is-static has-cursor-default\"\n                       style={{backgroundImage: `url(${activeChannel.profileImg})`, backgroundSize: \"cover\"}} />\n                </p>\n                : null}\n        </>\n    )\n};\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}