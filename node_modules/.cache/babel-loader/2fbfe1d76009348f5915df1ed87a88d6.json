{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/admin/NoticeEditor.jsx\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport Viewer from '@toast-ui/editor/dist/toastui-editor-viewer';\nimport { Editor } from '@toast-ui/react-editor';\nimport { nullFunction } from \"data/util\";\nimport { uploadImage } from \"data/api\";\n\nconst NoticeEditor = ({\n  callback = nullFunction,\n  onChange = nullFunction,\n  imageUploadStart = nullFunction,\n  imageUploadFailed = nullFunction,\n  imageUploadFinish = nullFunction\n}) => React.createElement(Editor, {\n  ref: callback,\n  initialValue: \"\",\n  previewStyle: \"vertical\",\n  height: \"300px\",\n  initialEditType: \"markdown\",\n  useCommandShortcut: true,\n  usageStatistics: false,\n  hideModeSwitch: true,\n  onChange: onChange,\n  hooks: {\n    addImageBlobHook: (blob, callback) => {\n      imageUploadStart(blob);\n      uploadImage(blob).then(response => {\n        console.log(\"upload result \", response.data);\n\n        if (response.data && response.data.url) {\n          callback(response.data.url, response.data.name);\n          imageUploadFinish(blob);\n        }\n      }).catch(err => {\n        console.log(\"image upload error \", err);\n        imageUploadFailed(err);\n      }).finally(() => {});\n    }\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n});\n\nexport const EditorViewer = ({\n  markdown\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewer = _useState2[0],\n        setViewer = _useState2[1];\n\n  const callback = useCallback(node => {\n    if (!node) {\n      return;\n    }\n\n    setViewer(new Viewer({\n      el: node,\n      height: '300px',\n      initialValue: ''\n    }));\n  }, []);\n  useEffect(() => {\n    if (!viewer) {\n      return;\n    }\n\n    viewer.setMarkdown(markdown.replaceAll(\".png\", \"_300x300.png\"));\n  }, [markdown]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Preview\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    ref: callback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Raw Markdown\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, markdown.replaceAll(\".png\", \"_300x300.png\")));\n};\nexport default NoticeEditor;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/admin/NoticeEditor.jsx"],"names":["React","useCallback","useEffect","useState","Viewer","Editor","nullFunction","uploadImage","NoticeEditor","callback","onChange","imageUploadStart","imageUploadFailed","imageUploadFinish","addImageBlobHook","blob","then","response","console","log","data","url","name","catch","err","finally","EditorViewer","markdown","viewer","setViewer","node","el","height","initialValue","setMarkdown","replaceAll"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport Viewer from '@toast-ui/editor/dist/toastui-editor-viewer';\n\nimport { Editor } from '@toast-ui/react-editor';\nimport {nullFunction} from \"data/util\";\nimport {uploadImage} from \"data/api\";\n\nconst NoticeEditor = ({callback = nullFunction, onChange = nullFunction, imageUploadStart = nullFunction, imageUploadFailed = nullFunction, imageUploadFinish = nullFunction}) => (\n    <Editor\n        ref={callback}\n        initialValue=\"\"\n        previewStyle=\"vertical\"\n        height=\"300px\"\n        initialEditType=\"markdown\"\n        useCommandShortcut={true}\n        usageStatistics={false}\n        hideModeSwitch={true}\n        onChange={onChange}\n        hooks={{\n            addImageBlobHook: (blob, callback) => {\n                imageUploadStart(blob)\n                uploadImage(blob)\n                    .then(response => {\n                        console.log(\"upload result \", response.data);\n                        if (response.data && response.data.url) {\n                            callback(response.data.url, response.data.name);\n                            imageUploadFinish(blob)\n                        }\n                    })\n                    .catch(err => {\n                        console.log(\"image upload error \", err);\n                        imageUploadFailed(err)\n                    })\n                    .finally(() => {\n\n                    })\n            }\n        }}\n    />\n);\n\nexport const EditorViewer = ({markdown}) => {\n    const [viewer, setViewer] = useState(null);\n    const callback = useCallback((node) => {\n        if (!node) {\n            return ;\n        }\n        setViewer(new Viewer({\n            el: node,\n            height: '300px',\n            initialValue: ''\n        }));\n    }, []);\n\n    useEffect(() => {\n        if (!viewer) {\n            return ;\n        }\n        viewer.setMarkdown(markdown.replaceAll(\".png\", \"_300x300.png\"));\n    }, [markdown])\n\n    return (\n        <div>\n            <span>Preview</span><br/>\n            <div ref={callback} />\n            <span>Raw Markdown</span><br/>\n            <span>{markdown.replaceAll(\".png\", \"_300x300.png\")}</span>\n        </div>\n    )\n}\n\nexport default NoticeEditor;"]},"metadata":{},"sourceType":"module"}