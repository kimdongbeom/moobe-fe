{"ast":null,"code":"import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from 'data/redux/reducers';\nimport checkLoginMiddleware from \"data/redux/middleware/loginCheck\";\nimport checkAdminMiddleware from \"data/redux/middleware/adminCheck\";\nimport Reactotron from 'components/dev/ReactotronConfig';\nReactotron.clear();\nlet middleware = compose(applyMiddleware(checkLoginMiddleware, checkAdminMiddleware, thunk));\n\nif (process.env.REACT_APP_ENV !== 'real') {\n  // let composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n  // middleware = composeEnhancers(applyMiddleware(checkLoginMiddleware, checkAdminMiddleware, thunk))\n  middleware = compose(applyMiddleware(checkLoginMiddleware, checkAdminMiddleware, thunk), Reactotron.createEnhancer()); //reactotron\n}\n\nconst store = createStore(rootReducer, middleware);\nexport default store;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/store.js"],"names":["applyMiddleware","compose","createStore","thunk","rootReducer","checkLoginMiddleware","checkAdminMiddleware","Reactotron","clear","middleware","process","env","REACT_APP_ENV","createEnhancer","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACAA,UAAU,CAACC,KAAX;AAEA,IAAIC,UAAU,GAAGR,OAAO,CAACD,eAAe,CAACK,oBAAD,EAAuBC,oBAAvB,EAA6CH,KAA7C,CAAhB,CAAxB;;AACA,IAAIO,OAAO,CAACC,GAAR,CAAYC,aAAZ,KAA8B,MAAlC,EAA0C;AACtC;AACA;AACAH,EAAAA,UAAU,GAAGR,OAAO,CAACD,eAAe,CAACK,oBAAD,EAAuBC,oBAAvB,EAA6CH,KAA7C,CAAhB,EAAqEI,UAAU,CAACM,cAAX,EAArE,CAApB,CAHsC,CAGgF;AACzH;;AACD,MAAMC,KAAK,GAAGZ,WAAW,CAACE,WAAD,EAAcK,UAAd,CAAzB;AACA,eAAeK,KAAf","sourcesContent":["import {applyMiddleware, compose, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from 'data/redux/reducers';\nimport checkLoginMiddleware from \"data/redux/middleware/loginCheck\";\nimport checkAdminMiddleware from \"data/redux/middleware/adminCheck\";\nimport Reactotron from 'components/dev/ReactotronConfig'\nReactotron.clear();\n\nlet middleware = compose(applyMiddleware(checkLoginMiddleware, checkAdminMiddleware, thunk))\nif (process.env.REACT_APP_ENV !== 'real') {\n    // let composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n    // middleware = composeEnhancers(applyMiddleware(checkLoginMiddleware, checkAdminMiddleware, thunk))\n    middleware = compose(applyMiddleware(checkLoginMiddleware, checkAdminMiddleware, thunk), Reactotron.createEnhancer()) //reactotron\n}\nconst store = createStore(rootReducer, middleware);\nexport default store;"]},"metadata":{},"sourceType":"module"}