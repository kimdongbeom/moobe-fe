{"ast":null,"code":"import { isNull as _isNull } from \"lodash\";\nimport { fetchUser } from \"data/redux/action/user\";\nimport { LOGIN_REDIRECT_URL } from \"data/api\";\n\nconst checkLoginMiddleware = store => next => action => {\n  if (!action.checkLogin) {\n    return next(action);\n  }\n\n  return fetchUser()(store.dispatch, store.getState).then(r => {\n    if (_isNull(store.getState().user.user)) {\n      if (action.before) {\n        action.before();\n      }\n\n      if (confirm(\"로그인이 필요한 기능입니다. 로그인 하시겠습니까?\")) {\n        window.location = LOGIN_REDIRECT_URL;\n      } else {\n        if (action.fail) {\n          action.fail();\n        }\n      }\n    } else {\n      if (action.success) {\n        action.success(store.getState().user.user);\n      }\n    }\n  });\n};\n\nexport default checkLoginMiddleware;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/middleware/loginCheck.js"],"names":["isNull","_isNull","fetchUser","LOGIN_REDIRECT_URL","checkLoginMiddleware","store","next","action","checkLogin","dispatch","getState","then","r","user","before","confirm","window","location","fail","success"],"mappings":"AAAA,SAAQA,MAAM,IAAIC,OAAlB,QAAgC,QAAhC;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,kBAAR,QAAiC,UAAjC;;AAEA,MAAMC,oBAAoB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACpD,MAAI,CAACA,MAAM,CAACC,UAAZ,EAAwB;AACpB,WAAOF,IAAI,CAACC,MAAD,CAAX;AACH;;AACD,SAAOL,SAAS,GAAGG,KAAK,CAACI,QAAT,EAAmBJ,KAAK,CAACK,QAAzB,CAAT,CACFC,IADE,CACGC,CAAC,IAAI;AACP,QAAIX,OAAO,CAACI,KAAK,CAACK,QAAN,GAAiBG,IAAjB,CAAsBA,IAAvB,CAAX,EAAyC;AACrC,UAAGN,MAAM,CAACO,MAAV,EAAkB;AACdP,QAAAA,MAAM,CAACO,MAAP;AACH;;AACD,UAAIC,OAAO,CAAC,6BAAD,CAAX,EAA4C;AACxCC,QAAAA,MAAM,CAACC,QAAP,GAAkBd,kBAAlB;AACH,OAFD,MAEO;AACH,YAAGI,MAAM,CAACW,IAAV,EAAgB;AACZX,UAAAA,MAAM,CAACW,IAAP;AACH;AACJ;AACJ,KAXD,MAWO;AACH,UAAGX,MAAM,CAACY,OAAV,EAAmB;AACfZ,QAAAA,MAAM,CAACY,OAAP,CAAed,KAAK,CAACK,QAAN,GAAiBG,IAAjB,CAAsBA,IAArC;AACH;AACJ;AACJ,GAlBE,CAAP;AAmBH,CAvBD;;AAyBA,eAAeT,oBAAf","sourcesContent":["import {isNull as _isNull} from \"lodash\";\nimport {fetchUser} from \"data/redux/action/user\";\nimport {LOGIN_REDIRECT_URL} from \"data/api\";\n\nconst checkLoginMiddleware = store => next => action => {\n    if (!action.checkLogin) {\n        return next(action)\n    }\n    return fetchUser()(store.dispatch, store.getState)\n        .then(r => {\n            if (_isNull(store.getState().user.user)) {\n                if(action.before) {\n                    action.before()\n                }\n                if (confirm(\"로그인이 필요한 기능입니다. 로그인 하시겠습니까?\")) {\n                    window.location = LOGIN_REDIRECT_URL;\n                } else {\n                    if(action.fail) {\n                        action.fail()\n                    }\n                }\n            } else {\n                if(action.success) {\n                    action.success(store.getState().user.user)\n                }\n            }\n        });\n};\n\nexport default checkLoginMiddleware;"]},"metadata":{},"sourceType":"module"}