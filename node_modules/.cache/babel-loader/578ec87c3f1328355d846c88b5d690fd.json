{"ast":null,"code":"import { getContentLocations, searchContentLocations } from \"data/api\";\nimport { isEmpty as _isEmpty } from \"lodash\";\nexport const LOCATION_RESET_LOCATION_DATA = 'LOCATION/RESET_LOCATION_DATA';\nexport const LOCATION_RESET_LOCATION_LIST = 'LOCATION/RESET_LOCATION_LIST';\nexport const LOCATION_FETCH_LOCATION_STARTED = 'LOCATION/FETCH_LOCATION_STARTED';\nexport const LOCATION_FETCH_LOCATION_FINISHED = 'LOCATION/FETCH_LOCATION_FINISHED';\nexport const LOCATION_FETCH_LOCATION_SUCCESS = 'LOCATION/FETCH_LOCATION_SUCCESS';\nexport const LOCATION_FETCH_LOCATION_ERROR = 'LOCATION/FETCH_LOCATION_ERROR';\nexport const LOCATION_SET_FOCUSED_LOCATION = 'LOCATION/SET_FOCUSED_LOCATION';\nexport const fetchLocation = (channel = null, query = null, searchType = null, mapBounds = null) => {\n  return dispatch => {\n    dispatch(fetchLocationStarted());\n    let getLocationApi;\n\n    if (_isEmpty(query)) {\n      getLocationApi = getContentLocations(channel, mapBounds);\n    } else {\n      getLocationApi = searchContentLocations(query, searchType, channel, mapBounds);\n    }\n\n    return getLocationApi.then(response => {\n      dispatch(fetchLocationSuccess({\n        data: response.data\n      }));\n    }).catch(function (error) {\n      dispatch(fetchLocationFail(error));\n    }).finally(() => {\n      dispatch(fetchLocationFinished());\n    });\n  };\n};\nexport const setFocusedLocation = mapLocation => {\n  return {\n    type: LOCATION_SET_FOCUSED_LOCATION,\n    data: mapLocation\n  };\n};\nexport const resetLocationData = () => {\n  return {\n    type: LOCATION_RESET_LOCATION_DATA\n  };\n};\nexport const resetLocationList = () => {\n  return {\n    type: LOCATION_RESET_LOCATION_LIST\n  };\n};\nexport const fetchLocationStarted = () => {\n  return {\n    type: LOCATION_FETCH_LOCATION_STARTED\n  };\n};\nexport const fetchLocationFinished = () => {\n  return {\n    type: LOCATION_FETCH_LOCATION_FINISHED\n  };\n};\nexport const fetchLocationSuccess = data => {\n  return {\n    type: LOCATION_FETCH_LOCATION_SUCCESS,\n    data: data\n  };\n};\nexport const fetchLocationFail = err => {\n  return {\n    type: LOCATION_FETCH_LOCATION_ERROR,\n    err\n  };\n};","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/action/location.js"],"names":["getContentLocations","searchContentLocations","isEmpty","_isEmpty","LOCATION_RESET_LOCATION_DATA","LOCATION_RESET_LOCATION_LIST","LOCATION_FETCH_LOCATION_STARTED","LOCATION_FETCH_LOCATION_FINISHED","LOCATION_FETCH_LOCATION_SUCCESS","LOCATION_FETCH_LOCATION_ERROR","LOCATION_SET_FOCUSED_LOCATION","fetchLocation","channel","query","searchType","mapBounds","dispatch","fetchLocationStarted","getLocationApi","then","response","fetchLocationSuccess","data","catch","error","fetchLocationFail","finally","fetchLocationFinished","setFocusedLocation","mapLocation","type","resetLocationData","resetLocationList","err"],"mappings":"AAAA,SAAQA,mBAAR,EAA6BC,sBAA7B,QAA0D,UAA1D;AACA,SAAQC,OAAO,IAAIC,QAAnB,QAAkC,QAAlC;AAEA,OAAO,MAAMC,4BAA4B,GAAG,8BAArC;AACP,OAAO,MAAMC,4BAA4B,GAAG,8BAArC;AACP,OAAO,MAAMC,+BAA+B,GAAG,iCAAxC;AACP,OAAO,MAAMC,gCAAgC,GAAG,kCAAzC;AACP,OAAO,MAAMC,+BAA+B,GAAG,iCAAxC;AACP,OAAO,MAAMC,6BAA6B,GAAG,+BAAtC;AACP,OAAO,MAAMC,6BAA6B,GAAG,+BAAtC;AAGP,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAO,GAAC,IAAT,EAAeC,KAAK,GAAC,IAArB,EAA2BC,UAAU,GAAC,IAAtC,EAA4CC,SAAS,GAAC,IAAtD,KAA+D;AACxF,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACC,oBAAoB,EAArB,CAAR;AACA,QAAIC,cAAJ;;AACA,QAAIf,QAAQ,CAACU,KAAD,CAAZ,EAAqB;AACjBK,MAAAA,cAAc,GAAGlB,mBAAmB,CAACY,OAAD,EAAUG,SAAV,CAApC;AACH,KAFD,MAEO;AACHG,MAAAA,cAAc,GAAGjB,sBAAsB,CAACY,KAAD,EAAQC,UAAR,EAAoBF,OAApB,EAA6BG,SAA7B,CAAvC;AACH;;AACD,WAAOG,cAAc,CAACC,IAAf,CAAoBC,QAAQ,IAAI;AACnCJ,MAAAA,QAAQ,CAACK,oBAAoB,CAAC;AAACC,QAAAA,IAAI,EAAEF,QAAQ,CAACE;AAAhB,OAAD,CAArB,CAAR;AACH,KAFM,EAEJC,KAFI,CAEE,UAAUC,KAAV,EAAiB;AACtBR,MAAAA,QAAQ,CAACS,iBAAiB,CAACD,KAAD,CAAlB,CAAR;AACH,KAJM,EAIJE,OAJI,CAII,MAAM;AACbV,MAAAA,QAAQ,CAACW,qBAAqB,EAAtB,CAAR;AACH,KANM,CAAP;AAOH,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAMC,kBAAkB,GAAIC,WAAD,IAAiB;AAC/C,SAAO;AACHC,IAAAA,IAAI,EAAEpB,6BADH;AAEHY,IAAAA,IAAI,EAAEO;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHD,IAAAA,IAAI,EAAE1B;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAM4B,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHF,IAAAA,IAAI,EAAEzB;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMY,oBAAoB,GAAG,MAAM;AACtC,SAAO;AACHa,IAAAA,IAAI,EAAExB;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMqB,qBAAqB,GAAG,MAAM;AACvC,SAAO;AACHG,IAAAA,IAAI,EAAEvB;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMc,oBAAoB,GAAIC,IAAD,IAAU;AAC1C,SAAO;AACHQ,IAAAA,IAAI,EAAEtB,+BADH;AAEHc,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,iBAAiB,GAAIQ,GAAD,IAAS;AACtC,SAAO;AACHH,IAAAA,IAAI,EAAErB,6BADH;AAEHwB,IAAAA;AAFG,GAAP;AAIH,CALM","sourcesContent":["import {getContentLocations, searchContentLocations} from \"data/api\";\nimport {isEmpty as _isEmpty} from \"lodash\";\n\nexport const LOCATION_RESET_LOCATION_DATA = 'LOCATION/RESET_LOCATION_DATA';\nexport const LOCATION_RESET_LOCATION_LIST = 'LOCATION/RESET_LOCATION_LIST';\nexport const LOCATION_FETCH_LOCATION_STARTED = 'LOCATION/FETCH_LOCATION_STARTED';\nexport const LOCATION_FETCH_LOCATION_FINISHED = 'LOCATION/FETCH_LOCATION_FINISHED';\nexport const LOCATION_FETCH_LOCATION_SUCCESS = 'LOCATION/FETCH_LOCATION_SUCCESS';\nexport const LOCATION_FETCH_LOCATION_ERROR = 'LOCATION/FETCH_LOCATION_ERROR';\nexport const LOCATION_SET_FOCUSED_LOCATION = 'LOCATION/SET_FOCUSED_LOCATION';\n\n\nexport const fetchLocation = (channel=null, query=null, searchType=null, mapBounds=null) => {\n    return (dispatch) => {\n        dispatch(fetchLocationStarted());\n        let getLocationApi;\n        if (_isEmpty(query)) {\n            getLocationApi = getContentLocations(channel, mapBounds);\n        } else {\n            getLocationApi = searchContentLocations(query, searchType, channel, mapBounds);\n        }\n        return getLocationApi.then(response => {\n            dispatch(fetchLocationSuccess({data: response.data}))\n        }).catch(function (error) {\n            dispatch(fetchLocationFail(error))\n        }).finally(() => {\n            dispatch(fetchLocationFinished())\n        });\n    }\n};\n\nexport const setFocusedLocation = (mapLocation) => {\n    return {\n        type: LOCATION_SET_FOCUSED_LOCATION,\n        data: mapLocation\n    }\n}\n\nexport const resetLocationData = () => {\n    return {\n        type: LOCATION_RESET_LOCATION_DATA\n    }\n}\n\nexport const resetLocationList = () => {\n    return {\n        type: LOCATION_RESET_LOCATION_LIST\n    }\n}\n\nexport const fetchLocationStarted = () => {\n    return {\n        type: LOCATION_FETCH_LOCATION_STARTED\n    }\n}\n\nexport const fetchLocationFinished = () => {\n    return {\n        type: LOCATION_FETCH_LOCATION_FINISHED\n    }\n}\n\nexport const fetchLocationSuccess = (data) => {\n    return {\n        type: LOCATION_FETCH_LOCATION_SUCCESS,\n        data: data\n    }\n}\n\nexport const fetchLocationFail = (err) => {\n    return {\n        type: LOCATION_FETCH_LOCATION_ERROR,\n        err\n    }\n}\n"]},"metadata":{},"sourceType":"module"}