{"ast":null,"code":"import axios from 'axios';\nexport const CONTENT_RESET_CONTENT_DATA = 'CONTENT/RESET_CONTENT_DATA';\nexport const CONTENT_SET_ACTIVE_CONTENT = 'CONTENT/SET_ACTIVE_CONTENT';\nexport const CONTENT_SET_ACTIVE_CONTENT_WITH_DIFF = 'CONTENT/SET_ACTIVE_CONTENT_WITH_DIFF';\nexport const CONTENT_SET_CONTENT_LOADING = 'CONTENT/SET_CONTENT_LOADING';\nexport const CONTENT_SHOW_OVERLAY_CONTENT = 'CONTENT/SHOW_OVERLAY_CONTENT';\nexport const CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF = 'CONTENT/SHOW_OVERLAY_CONTENT_WITH_DIFF';\nexport const CONTENT_FETCH_CONTENT = 'CONTENT/FETCH_CONTENT';\nexport const CONTENT_FETCH_CONTENT_SUCCESS = 'CONTENT/FETCH_CONTENT_SUCCESS';\nexport const CONTENT_FETCH_CONTENT_ERROR = 'CONTENT/FETCH_CONTENT_ERROR';\nexport const CONTENT_SET_PAGE_NUM = 'CONTENT/SET_PAGE_NUM';\nexport const fetchContent = (channelId, contentId, reset = false) => {\n  // console.log(\"fetch content \", channelId, contentId, reset)\n  return dispatch => {\n    if (reset) {\n      dispatch(resetContentData());\n    }\n\n    dispatch(fetchContentData()); //TODO set active channel to get content\n\n    return axios.get(process.env.REACT_APP_API_URL + \"/api/contents\").then(response => {\n      setTimeout(() => {\n        dispatch(fetchSuccessContentData({\n          data: response.data,\n          totalCount: response.data.length,\n          activeContentId: contentId\n        }));\n      }, 300);\n    }).catch(function (error) {\n      dispatch(fetchErrorContentData(error));\n    });\n  };\n};\nexport const resetContentData = () => {\n  return {\n    type: CONTENT_RESET_CONTENT_DATA\n  };\n};\nexport const setContentLoading = contentLoading => {\n  return {\n    type: CONTENT_SET_CONTENT_LOADING,\n    contentLoading\n  };\n};\nexport const fetchContentData = () => {\n  return {\n    type: CONTENT_FETCH_CONTENT\n  };\n};\nexport const fetchSuccessContentData = data => {\n  return {\n    type: CONTENT_FETCH_CONTENT_SUCCESS,\n    data\n  };\n};\nexport const fetchErrorContentData = err => {\n  return {\n    type: CONTENT_FETCH_CONTENT_ERROR,\n    err\n  };\n};\nexport const setActiveContent = content => {\n  return {\n    type: CONTENT_SET_ACTIVE_CONTENT,\n    content\n  };\n};\nexport const setActiveContentWithDiff = content => {\n  return {\n    type: CONTENT_SET_ACTIVE_CONTENT_WITH_DIFF,\n    content\n  };\n};\nexport const showOverlayContent = content => {\n  return {\n    type: CONTENT_SHOW_OVERLAY_CONTENT,\n    content\n  };\n};\nexport const showOverlayContentWithDiff = content => {\n  return {\n    type: CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF,\n    content\n  };\n};\nexport const setPageNum = pageNum => {\n  return {\n    type: CONTENT_SET_PAGE_NUM,\n    pageNum\n  };\n};","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/redux/action/content.js"],"names":["axios","CONTENT_RESET_CONTENT_DATA","CONTENT_SET_ACTIVE_CONTENT","CONTENT_SET_ACTIVE_CONTENT_WITH_DIFF","CONTENT_SET_CONTENT_LOADING","CONTENT_SHOW_OVERLAY_CONTENT","CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF","CONTENT_FETCH_CONTENT","CONTENT_FETCH_CONTENT_SUCCESS","CONTENT_FETCH_CONTENT_ERROR","CONTENT_SET_PAGE_NUM","fetchContent","channelId","contentId","reset","dispatch","resetContentData","fetchContentData","get","process","env","REACT_APP_API_URL","then","response","setTimeout","fetchSuccessContentData","data","totalCount","length","activeContentId","catch","error","fetchErrorContentData","type","setContentLoading","contentLoading","err","setActiveContent","content","setActiveContentWithDiff","showOverlayContent","showOverlayContentWithDiff","setPageNum","pageNum"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const CONTENT_RESET_CONTENT_DATA = 'CONTENT/RESET_CONTENT_DATA';\nexport const CONTENT_SET_ACTIVE_CONTENT = 'CONTENT/SET_ACTIVE_CONTENT';\nexport const CONTENT_SET_ACTIVE_CONTENT_WITH_DIFF = 'CONTENT/SET_ACTIVE_CONTENT_WITH_DIFF';\nexport const CONTENT_SET_CONTENT_LOADING = 'CONTENT/SET_CONTENT_LOADING';\nexport const CONTENT_SHOW_OVERLAY_CONTENT = 'CONTENT/SHOW_OVERLAY_CONTENT';\nexport const CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF = 'CONTENT/SHOW_OVERLAY_CONTENT_WITH_DIFF';\nexport const CONTENT_FETCH_CONTENT = 'CONTENT/FETCH_CONTENT';\nexport const CONTENT_FETCH_CONTENT_SUCCESS = 'CONTENT/FETCH_CONTENT_SUCCESS';\nexport const CONTENT_FETCH_CONTENT_ERROR = 'CONTENT/FETCH_CONTENT_ERROR';\nexport const CONTENT_SET_PAGE_NUM = 'CONTENT/SET_PAGE_NUM';\n\nexport const fetchContent = (channelId, contentId, reset=false) => {\n    // console.log(\"fetch content \", channelId, contentId, reset)\n    return (dispatch) => {\n        if (reset) {\n            dispatch(resetContentData());\n        }\n        dispatch(fetchContentData());\n        //TODO set active channel to get content\n        return axios.get(process.env.REACT_APP_API_URL + \"/api/contents\")\n            .then(response => {\n                setTimeout(() => {\n                    dispatch(fetchSuccessContentData({data: response.data, totalCount: response.data.length, activeContentId: contentId}))\n                }, 300)\n            }).catch(function (error) {\n                dispatch(fetchErrorContentData(error))\n            });\n    }\n};\n\nexport const resetContentData = () => {\n    return {\n        type: CONTENT_RESET_CONTENT_DATA\n    }\n};\n\nexport const setContentLoading = (contentLoading) => {\n    return {\n        type: CONTENT_SET_CONTENT_LOADING,\n        contentLoading\n    }\n};\n\nexport const fetchContentData = () => {\n    return {\n        type: CONTENT_FETCH_CONTENT\n    }\n};\n\nexport const fetchSuccessContentData = (data) => {\n    return {\n        type: CONTENT_FETCH_CONTENT_SUCCESS,\n        data\n    }\n};\n\nexport const fetchErrorContentData = (err) => {\n    return {\n        type: CONTENT_FETCH_CONTENT_ERROR,\n        err\n    }\n};\n\nexport const setActiveContent = (content) => {\n    return {\n        type: CONTENT_SET_ACTIVE_CONTENT,\n        content\n    }\n};\n\nexport const setActiveContentWithDiff = (content) => {\n    return {\n        type: CONTENT_SET_ACTIVE_CONTENT_WITH_DIFF,\n        content\n    }\n};\n\nexport const showOverlayContent = (content) => {\n    return {\n        type: CONTENT_SHOW_OVERLAY_CONTENT,\n        content\n    }\n};\n\nexport const showOverlayContentWithDiff = (content) => {\n    return {\n        type: CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF,\n        content\n    }\n};\n\nexport const setPageNum = (pageNum) => {\n    return {\n        type: CONTENT_SET_PAGE_NUM,\n        pageNum\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}