{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/KakaoMap.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loadingMapFinished, loadingMapSuccess } from \"data/redux/action/map\";\nimport { initVH } from \"components/common/layout/WindowDimensions\";\nexport const MapContext = React.createContext({});\n\nconst KakaoMap = props => {\n  const _useState = useState({\n    map: null,\n    kakao: props.kakao\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const addZoomControl = (map, kakao, zoom) => {\n    if (zoom) {\n      map.setZoomable(true);\n      map.addControl(new kakao.maps.ZoomControl(), kakao.maps.ControlPosition[zoom]);\n    }\n  };\n\n  const addMapTypeControl = (map, kakao, mapType) => {\n    if (mapType) {\n      map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition[mapType]);\n    }\n  };\n\n  const setLevel = (map, kakao, level) => {};\n\n  const setLatLngBounds = (map, kakao, bounds) => {\n    if (bounds) {\n      const latLngBounds = new kakao.maps.LatLngBounds();\n      bounds.forEach(b => {\n        latLngBounds.extend(new kakao.maps.LatLng(b.lat, b.lng));\n      });\n      map.setBounds(latLngBounds);\n    }\n  };\n\n  const dispatch = useDispatch();\n  const handleLoaded = useCallback(node => {\n    const kakao = props.kakao,\n          onZoomChange = props.onZoomChange,\n          onCenterChange = props.onCenterChange,\n          onBoundsChange = props.onBoundsChange;\n    const _props$options = props.options,\n          lat = _props$options.lat,\n          lng = _props$options.lng,\n          level = _props$options.level,\n          zoom = _props$options.zoom,\n          mapType = _props$options.mapType,\n          bounds = _props$options.bounds;\n\n    if (state.map || node === null) {\n      return;\n    }\n\n    const map = new kakao.maps.Map(node, {\n      level: level || 9,\n      center: new kakao.maps.LatLng(lat, lng)\n    });\n    addZoomControl(map, kakao, zoom);\n    addMapTypeControl(map, kakao, mapType);\n    setLatLngBounds(map, kakao, bounds);\n\n    const zoomChange = () => {\n      if (onZoomChange) onZoomChange(map);\n    };\n\n    const centerChange = () => {\n      if (onCenterChange) onCenterChange(map);\n    };\n\n    const boundsChange = () => {\n      if (onBoundsChange) onBoundsChange(map);\n    };\n\n    kakao.maps.event.addListener(map, \"zoom_changed\", zoomChange);\n    kakao.maps.event.addListener(map, \"center_changed\", centerChange);\n    kakao.maps.event.addListener(map, \"bounds_changed\", boundsChange);\n    initVH(); //initial viewport height\n\n    setState({\n      map,\n      kakao\n    });\n    dispatch(loadingMapSuccess(map, node, kakao));\n    dispatch(loadingMapFinished());\n    return () => {\n      kakao.maps.event.removeListener(map, \"zoom_changed\", zoomChange);\n      kakao.maps.event.removeListener(map, \"center_changed\", centerChange);\n      kakao.maps.event.removeListener(map, \"bounds_changed\", boundsChange);\n    };\n  }, []);\n  useEffect(() => {\n    const _props$options2 = props.options,\n          lat = _props$options2.lat,\n          lng = _props$options2.lng;\n\n    if (!state.map) {\n      return;\n    }\n\n    const map = state.map,\n          kakao = state.kakao;\n    map.setLevel(4, {\n      anchor: new kakao.maps.LatLng(lat, lng),\n      animate: true\n    });\n    setTimeout(() => {\n      map.panTo(new kakao.maps.LatLng(lat, lng));\n    }, 300);\n  }, [props.options.lat, props.options.lng, props.options.refreshCenter]);\n  useEffect(() => {\n    const bounds = props.options.bounds;\n\n    if (!state.map) {\n      return;\n    }\n\n    setLatLngBounds(state.map, state.kakao, bounds);\n  }, [props.options.bounds]);\n  return React.createElement(\"div\", {\n    className: props.className,\n    id: \"kakao-map\",\n    ref: handleLoaded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, state.map === null ? null : React.createElement(MapContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, props.children));\n};\n\nexport default KakaoMap;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/KakaoMap.jsx"],"names":["React","useCallback","useEffect","useState","useDispatch","loadingMapFinished","loadingMapSuccess","initVH","MapContext","createContext","KakaoMap","props","map","kakao","state","setState","addZoomControl","zoom","setZoomable","addControl","maps","ZoomControl","ControlPosition","addMapTypeControl","mapType","MapTypeControl","setLevel","level","setLatLngBounds","bounds","latLngBounds","LatLngBounds","forEach","b","extend","LatLng","lat","lng","setBounds","dispatch","handleLoaded","node","onZoomChange","onCenterChange","onBoundsChange","options","Map","center","zoomChange","centerChange","boundsChange","event","addListener","removeListener","anchor","animate","setTimeout","panTo","refreshCenter","className","children"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {loadingMapFinished, loadingMapSuccess} from \"data/redux/action/map\";\nimport {initVH} from \"components/common/layout/WindowDimensions\";\n\nexport const MapContext = React.createContext({});\n\nconst KakaoMap = props => {\n    const [state, setState] = useState({\n        map: null,\n        kakao: props.kakao\n    });\n\n    const addZoomControl = (map, kakao, zoom) => {\n        if (zoom) {\n            map.setZoomable(true);\n            map.addControl(\n                new kakao.maps.ZoomControl(),\n                kakao.maps.ControlPosition[zoom]\n            );\n        }\n    };\n\n    const addMapTypeControl = (map, kakao, mapType) => {\n        if (mapType) {\n            map.addControl(\n                new kakao.maps.MapTypeControl(),\n                kakao.maps.ControlPosition[mapType]\n            );\n        }\n    };\n\n    const setLevel = (map, kakao, level) => {\n\n    }\n\n    const setLatLngBounds = (map, kakao, bounds) => {\n        if (bounds) {\n            const latLngBounds = new kakao.maps.LatLngBounds();\n            bounds.forEach(b => {\n                latLngBounds.extend(new kakao.maps.LatLng(b.lat, b.lng));\n            });\n            map.setBounds(latLngBounds);\n        }\n    };\n\n    const dispatch = useDispatch();\n    const handleLoaded = useCallback(node => {\n        const { kakao, onZoomChange, onCenterChange, onBoundsChange } = props;\n        const { lat, lng, level, zoom, mapType, bounds } = props.options;\n        if (state.map || node === null) {\n            return;\n        }\n\n        const map = new kakao.maps.Map(node, {\n            level: level || 9,\n            center: new kakao.maps.LatLng(lat, lng)\n        });\n\n        addZoomControl(map, kakao, zoom);\n        addMapTypeControl(map, kakao, mapType);\n        setLatLngBounds(map, kakao, bounds);\n\n        const zoomChange = () => {\n            if (onZoomChange) onZoomChange(map);\n        };\n        const centerChange = () => {\n            if (onCenterChange) onCenterChange(map);\n        };\n        const boundsChange = () => {\n            if (onBoundsChange) onBoundsChange(map);\n        }\n\n        kakao.maps.event.addListener(map, \"zoom_changed\", zoomChange);\n        kakao.maps.event.addListener(map, \"center_changed\", centerChange);\n        kakao.maps.event.addListener(map, \"bounds_changed\", boundsChange);\n        initVH(); //initial viewport height\n        setState({map, kakao});\n        dispatch(loadingMapSuccess(map, node, kakao));\n        dispatch(loadingMapFinished());\n        return () => {\n            kakao.maps.event.removeListener(map, \"zoom_changed\", zoomChange);\n            kakao.maps.event.removeListener(map, \"center_changed\", centerChange);\n            kakao.maps.event.removeListener(map, \"bounds_changed\", boundsChange);\n        };\n    }, []);\n\n    useEffect(() => {\n        const { lat, lng } = props.options;\n        if (!state.map) {\n            return ;\n        }\n        const { map, kakao } = state;\n        map.setLevel(4, {anchor: new kakao.maps.LatLng(lat, lng), animate: true});\n        setTimeout(() => {\n            map.panTo(new kakao.maps.LatLng(lat, lng));\n        }, 300);\n    }, [props.options.lat, props.options.lng, props.options.refreshCenter]);\n\n    useEffect(() => {\n        const { bounds } = props.options;\n        if (!state.map) {\n            return ;\n        }\n        setLatLngBounds(state.map, state.kakao, bounds);\n    }, [props.options.bounds]);\n\n    return (\n        <div className={props.className} id=\"kakao-map\" ref={handleLoaded}>\n            {state.map === null ? null : (\n                <MapContext.Provider value={state}>\n                    {props.children}\n                </MapContext.Provider>\n            )}\n        </div>\n    );\n};\n\nexport default KakaoMap;"]},"metadata":{},"sourceType":"module"}