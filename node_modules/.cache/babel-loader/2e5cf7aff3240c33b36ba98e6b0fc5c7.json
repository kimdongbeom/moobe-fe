{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/notice/NoticeListTable.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport { fetchNoticeList } from \"data/redux/action/notice\";\nimport { MOMENT_DATE_FORMAT, MOMENT_DATETIME_FORMAT } from \"assets/styles/const\";\nimport MarkdownViewer from \"components/notice/MarkdownViewer\";\n\nconst NoticeListTable = () => {\n  const _useSelector = useSelector(state => state.notice),\n        noticeList = _useSelector.noticeList;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchNoticeList());\n  }, []);\n  return React.createElement(\"table\", {\n    className: \"table is-bordered is-striped is-fullwidth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(NoticeHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, noticeList.map(notice => React.createElement(Notice, {\n    key: notice.id,\n    notice: notice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))));\n};\n\nconst Notice = ({\n  notice\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showContents = _useState2[0],\n        setShowContents = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n    className: \"has-cursor-pointer\" + (showContents ? \" is-selected\" : \"\"),\n    onClick: () => setShowContents(!showContents),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"ID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, notice.id)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, notice.title)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Notice Start Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    format: MOMENT_DATETIME_FORMAT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, notice.noticeStartDate))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Notice End Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    format: MOMENT_DATETIME_FORMAT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, notice.noticeEndDate))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Update Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, notice.updateDate ? React.createElement(Moment, {\n    format: MOMENT_DATETIME_FORMAT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, notice.updateDate) : null)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Generate Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, notice.generateDate ? React.createElement(Moment, {\n    format: MOMENT_DATETIME_FORMAT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, notice.generateDate) : null))), showContents ? React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    colSpan: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(MarkdownViewer, {\n    markdown: notice.markdownContents,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))) : null);\n};\n\nconst NoticeHeader = () => {\n  return React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"ID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"ID\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Title\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Notice Start Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Notice Start Date\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Notice End Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Notice End Date\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Update Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Update Date\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Generate Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Generate Date\"))));\n};\n\nexport default NoticeListTable;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/notice/NoticeListTable.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Moment","fetchNoticeList","MOMENT_DATE_FORMAT","MOMENT_DATETIME_FORMAT","MarkdownViewer","NoticeListTable","state","notice","noticeList","dispatch","map","id","Notice","showContents","setShowContents","title","noticeStartDate","noticeEndDate","updateDate","generateDate","markdownContents","NoticeHeader"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Moment from \"react-moment\";\nimport {fetchNoticeList} from \"data/redux/action/notice\";\nimport {MOMENT_DATE_FORMAT, MOMENT_DATETIME_FORMAT} from \"assets/styles/const\";\nimport MarkdownViewer from \"components/notice/MarkdownViewer\";\n\nconst NoticeListTable = () => {\n    const {noticeList} = useSelector(state => state.notice);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchNoticeList());\n    }, [])\n\n    return (\n        <table className=\"table is-bordered is-striped is-fullwidth\">\n            <NoticeHeader />\n            <tbody>\n                {noticeList.map(notice => <Notice key={notice.id} notice={notice} />)}\n            </tbody>\n        </table>\n\n    )\n}\n\nconst Notice = ({notice}) => {\n    const [showContents, setShowContents] = useState(false);\n    return (\n        <>\n            <tr className={\"has-cursor-pointer\" + (showContents ? \" is-selected\" : \"\")} onClick={() => setShowContents(!showContents)}>\n                <td><span title=\"ID\">{notice.id}</span></td>\n                <td><span title=\"Title\">{notice.title}</span></td>\n                <td><span title=\"Notice Start Date\"><Moment format={MOMENT_DATETIME_FORMAT}>{notice.noticeStartDate}</Moment></span></td>\n                <td><span title=\"Notice End Date\"><Moment format={MOMENT_DATETIME_FORMAT}>{notice.noticeEndDate}</Moment></span></td>\n                <td><span title=\"Update Date\">{notice.updateDate ? <Moment format={MOMENT_DATETIME_FORMAT}>{notice.updateDate}</Moment> : null}</span></td>\n                <td><span title=\"Generate Date\">{notice.generateDate ? <Moment format={MOMENT_DATETIME_FORMAT}>{notice.generateDate}</Moment> : null}</span></td>\n            </tr>\n            {showContents\n                ? <tr><td></td><td colSpan={4}><MarkdownViewer markdown={notice.markdownContents} /></td></tr>\n                : null\n            }\n        </>\n\n    )\n}\n\nconst NoticeHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th><span title=\"ID\">ID</span></th>\n                <th><span title=\"Title\">Title</span></th>\n                <th><span title=\"Notice Start Date\">Notice Start Date</span></th>\n                <th><span title=\"Notice End Date\">Notice End Date</span></th>\n                <th><span title=\"Update Date\">Update Date</span></th>\n                <th><span title=\"Generate Date\">Generate Date</span></th>\n            </tr>\n        </thead>\n    )\n}\n\nexport default NoticeListTable;"]},"metadata":{},"sourceType":"module"}