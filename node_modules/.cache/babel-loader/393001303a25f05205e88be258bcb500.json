{"ast":null,"code":"import { updateObject } from './util';\nimport Content from \"../model/Content\";\nimport { drop as _drop, slice as _slice, find as _find, toString as _toString, concat as _concat, isNil as _isNil } from \"lodash\";\nimport { CONTENT_FETCH_CONTENT, CONTENT_FETCH_CONTENT_SUCCESS, CONTENT_RESET_CONTENT_DATA, CONTENT_SET_ACTIVE_CONTENT, CONTENT_SET_ACTIVE_CONTENT_WITH_DIFF, CONTENT_SET_CONTENT_LOADING, CONTENT_SET_PAGE_NUM, CONTENT_SHOW_OVERLAY_CONTENT, CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF } from \"../action/content\";\nconst initialStateContent = {\n  apiResult: null,\n  contentList: [],\n  appendedContentList: [],\n  contentLoading: false,\n  activeContent: null,\n  activeOverlayContent: null,\n  totalCount: 0,\n  pageNum: 1,\n  pageSize: 8,\n  maxPage: 0\n};\n\nfunction fetchSuccess(contentState, response) {\n  const data = response.data,\n        totalCount = response.totalCount,\n        activeContentId = response.activeContentId;\n  let contentList = renderResult(data, contentState.pageNum, contentState.pageSize);\n\n  let activeContent = _find(contentList, content => _toString(content.id) === activeContentId);\n\n  let maxPage = Math.ceil(totalCount / contentState.pageSize);\n  return updateObject(contentState, {\n    apiResult: data,\n    contentList: contentList,\n    appendedContentList: _concat(contentState.appendedContentList, contentList),\n    activeContent: activeContent,\n    activeOverlayContent: activeContent,\n    totalCount: data.totalCount,\n    pageNum: 1,\n    contentLoading: false,\n    maxPage: maxPage\n  });\n}\n\nfunction changePageNum(contentState, pageNum) {\n  let contentList = renderResult(contentState.apiResult, pageNum, contentState.pageSize);\n  return updateObject(contentState, {\n    contentList: contentList,\n    appendedContentList: _concat(contentState.appendedContentList, contentList),\n    pageNum: pageNum\n  });\n}\n\nfunction renderResult(results, pageNum, pageSize) {\n  if (results) {\n    const offset = (pageNum - 1) * pageSize;\n    return _slice(_drop(results, offset), 0, pageSize).map(result => new Content(result));\n  } else {\n    return [];\n  }\n}\n\nfunction isEqualsContent(content1, content2) {\n  if (_isNil(content1) || _isNil(content2)) {\n    return false;\n  }\n\n  return content1.id === content2.id;\n}\n/*\ndiff with current active content, if not equals, change active content\nfor kakao map marker onClick event.\nbecause onClick function is passed when marker is created and not changed anymore. so onClick function can not refer current active content\n */\n\n\nfunction updateActiveContentWithDiff(contentState, {\n  activeContent,\n  activeOverlayContent\n}) {\n  return updateObject(contentState, Object.assign({}, updateActiveContentIfNotEquals(contentState.activeContent, activeContent), updateActiveOverlayContentIfNotEquals(contentState.activeOverlayContent, activeOverlayContent)));\n}\n\nfunction updateActiveOverlayWithDiff(contentState, {\n  activeOverlayContent\n}) {\n  return updateObject(contentState, updateActiveOverlayContentIfNotEquals(contentState.activeOverlayContent, activeOverlayContent));\n}\n\nfunction updateActiveContentIfNotEquals(origin, activeContent) {\n  if (!isEqualsContent(origin, activeContent)) {\n    return {\n      activeContent\n    };\n  }\n\n  return {};\n}\n\nfunction updateActiveOverlayContentIfNotEquals(origin, activeOverlayContent) {\n  if (!isEqualsContent(origin, activeOverlayContent)) {\n    return {\n      activeOverlayContent\n    };\n  }\n\n  return {};\n}\n\nfunction updateIfNotEquals(origin, update) {\n  if (!isEqualsContent(origin, update)) {\n    return update;\n  }\n\n  return {};\n}\n\nexport default function (contentState = initialStateContent, action) {\n  switch (action.type) {\n    case CONTENT_RESET_CONTENT_DATA:\n      return initialStateContent;\n\n    case CONTENT_SET_ACTIVE_CONTENT:\n      return updateObject(contentState, {\n        activeContent: action.content\n      });\n\n    case CONTENT_SET_ACTIVE_CONTENT_WITH_DIFF:\n      return updateActiveContentWithDiff(contentState, {\n        activeContent: action.content,\n        activeOverlayContent: action.content\n      });\n\n    case CONTENT_SET_CONTENT_LOADING:\n      return updateObject(contentState, {\n        contentLoading: action.contentLoading\n      });\n\n    case CONTENT_SHOW_OVERLAY_CONTENT:\n      return updateObject(contentState, {\n        activeOverlayContent: action.content\n      });\n\n    case CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF:\n      return updateActiveOverlayWithDiff(contentState, {\n        activeOverlayContent: action.content\n      });\n\n    case CONTENT_SET_PAGE_NUM:\n      return changePageNum(contentState, action.pageNum);\n\n    case CONTENT_FETCH_CONTENT:\n      return updateObject(contentState, {\n        contentLoading: true\n      });\n\n    case CONTENT_FETCH_CONTENT_SUCCESS:\n      return fetchSuccess(contentState, action.data);\n\n    default:\n      return contentState;\n  }\n}","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/redux/reducers/contentReducer.js"],"names":["updateObject","Content","drop","_drop","slice","_slice","find","_find","toString","_toString","concat","_concat","isNil","_isNil","CONTENT_FETCH_CONTENT","CONTENT_FETCH_CONTENT_SUCCESS","CONTENT_RESET_CONTENT_DATA","CONTENT_SET_ACTIVE_CONTENT","CONTENT_SET_ACTIVE_CONTENT_WITH_DIFF","CONTENT_SET_CONTENT_LOADING","CONTENT_SET_PAGE_NUM","CONTENT_SHOW_OVERLAY_CONTENT","CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF","initialStateContent","apiResult","contentList","appendedContentList","contentLoading","activeContent","activeOverlayContent","totalCount","pageNum","pageSize","maxPage","fetchSuccess","contentState","response","data","activeContentId","renderResult","content","id","Math","ceil","changePageNum","results","offset","map","result","isEqualsContent","content1","content2","updateActiveContentWithDiff","Object","assign","updateActiveContentIfNotEquals","updateActiveOverlayContentIfNotEquals","updateActiveOverlayWithDiff","origin","updateIfNotEquals","update","action","type"],"mappings":"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","sourcesContent":["import { updateObject } from './util';\nimport Content from \"../model/Content\";\nimport {drop as _drop, slice as _slice, find as _find, toString as _toString, concat as _concat, isNil as _isNil} from \"lodash\";\nimport {\n    CONTENT_FETCH_CONTENT,\n    CONTENT_FETCH_CONTENT_SUCCESS, CONTENT_RESET_CONTENT_DATA,\n    CONTENT_SET_ACTIVE_CONTENT, CONTENT_SET_ACTIVE_CONTENT_WITH_DIFF, CONTENT_SET_CONTENT_LOADING,\n    CONTENT_SET_PAGE_NUM, CONTENT_SHOW_OVERLAY_CONTENT, CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF\n} from \"../action/content\";\n\nconst initialStateContent = {\n    apiResult: null,\n    contentList: [],\n    appendedContentList: [],\n    contentLoading: false,\n    activeContent: null,\n    activeOverlayContent: null,\n    totalCount: 0,\n    pageNum: 1,\n    pageSize: 8,\n    maxPage: 0,\n};\n\nfunction fetchSuccess(contentState, response) {\n    const {data, totalCount, activeContentId} = response;\n    let contentList = renderResult(data, contentState.pageNum, contentState.pageSize);\n    let activeContent = _find(contentList, (content) => _toString(content.id) === activeContentId);\n    let maxPage = Math.ceil(totalCount / contentState.pageSize);\n    return updateObject(contentState, {\n        apiResult: data,\n        contentList: contentList,\n        appendedContentList: _concat(contentState.appendedContentList, contentList),\n        activeContent: activeContent,\n        activeOverlayContent: activeContent,\n        totalCount: data.totalCount,\n        pageNum: 1,\n        contentLoading: false,\n        maxPage: maxPage})\n}\n\nfunction changePageNum(contentState, pageNum) {\n    let contentList = renderResult(contentState.apiResult, pageNum, contentState.pageSize);\n    return updateObject(contentState, {\n        contentList: contentList,\n        appendedContentList: _concat(contentState.appendedContentList, contentList),\n        pageNum: pageNum\n    })\n}\n\nfunction renderResult(results, pageNum, pageSize) {\n    if (results) {\n        const offset = (pageNum - 1) * pageSize;\n        return _slice(_drop(results, offset), 0, pageSize).map((result) => new Content(result));\n    } else {\n        return []\n    }\n}\n\nfunction isEqualsContent(content1, content2) {\n    if (_isNil(content1) || _isNil(content2)) {\n        return false;\n    }\n    return content1.id === content2.id;\n}\n\n/*\ndiff with current active content, if not equals, change active content\nfor kakao map marker onClick event.\nbecause onClick function is passed when marker is created and not changed anymore. so onClick function can not refer current active content\n */\nfunction updateActiveContentWithDiff(contentState, {activeContent, activeOverlayContent}) {\n    return updateObject(\n        contentState,\n        Object.assign(\n            {},\n            updateActiveContentIfNotEquals(contentState.activeContent, activeContent),\n            updateActiveOverlayContentIfNotEquals(contentState.activeOverlayContent, activeOverlayContent)));\n}\n\nfunction updateActiveOverlayWithDiff(contentState, {activeOverlayContent}) {\n    return updateObject(\n        contentState,\n        updateActiveOverlayContentIfNotEquals(contentState.activeOverlayContent, activeOverlayContent));\n}\n\nfunction updateActiveContentIfNotEquals(origin, activeContent) {\n    if (!isEqualsContent(origin, activeContent)) {\n        return {activeContent}\n    }\n    return {}\n}\n\nfunction updateActiveOverlayContentIfNotEquals(origin, activeOverlayContent) {\n    if (!isEqualsContent(origin, activeOverlayContent)) {\n        return {activeOverlayContent}\n    }\n    return {}\n}\n\nfunction updateIfNotEquals(origin, update) {\n    if (!isEqualsContent(origin, update)) {\n        return update;\n    }\n    return {}\n}\n\nexport default function(contentState = initialStateContent, action) {\n    switch(action.type) {\n        case CONTENT_RESET_CONTENT_DATA: return initialStateContent;\n        case CONTENT_SET_ACTIVE_CONTENT : return updateObject(contentState, {activeContent: action.content});\n        case CONTENT_SET_ACTIVE_CONTENT_WITH_DIFF : return updateActiveContentWithDiff(contentState, {activeContent: action.content, activeOverlayContent: action.content});\n        case CONTENT_SET_CONTENT_LOADING : return updateObject(contentState, {contentLoading: action.contentLoading});\n        case CONTENT_SHOW_OVERLAY_CONTENT : return updateObject(contentState, {activeOverlayContent: action.content});\n        case CONTENT_SHOW_OVERLAY_CONTENT_WITH_DIFF : return updateActiveOverlayWithDiff(contentState, {activeOverlayContent: action.content});\n        case CONTENT_SET_PAGE_NUM : return changePageNum(contentState, action.pageNum);\n        case CONTENT_FETCH_CONTENT : return updateObject(contentState, {contentLoading: true});\n        case CONTENT_FETCH_CONTENT_SUCCESS : return fetchSuccess(contentState, action.data);\n        default : return contentState;\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}