{"ast":null,"code":"import { MAP_LOADING_GEOLOCATION_FAIL, MAP_LOADING_GEOLOCATION_FINISHED, MAP_LOADING_GEOLOCATION_STARTED, MAP_LOADING_GEOLOCATION_SUCCESS, MAP_LOADING_MAP_FAIL, MAP_LOADING_MAP_FINISHED, MAP_LOADING_MAP_STARTED, MAP_LOADING_MAP_SUCCESS, MAP_RESET_MAP_CENTER_CHANGE, MAP_SET_GEOLOCATION_CENTER, MAP_SET_MAP_BOUNDS_CHANGE, MAP_SET_MAP_CENTER, MAP_SET_MAP_CENTER_CHANGE, MAP_SET_MAP_CENTER_FORCE } from \"data/redux/action/map\";\nimport { updateObject } from \"data/util\";\nconst initialStateMap = {\n  map: null,\n  mapRef: null,\n  mapLoading: false,\n  errorMapLoading: false,\n  centerLat: null,\n  centerLng: null,\n  refreshCenter: 0,\n  enableGeolocation: false,\n  geoLocationCenterLat: null,\n  geoLocationCenterLng: null,\n  geolocationLoading: false,\n  centerChanged: false,\n  changedCenterLat: null,\n  changedCenterLng: null,\n  mapBounds: {\n    sw: {\n      lat: null,\n      lng: null\n    },\n    ne: {\n      lat: null,\n      lng: null\n    }\n  }\n};\nexport default function (mapState = initialStateMap, action) {\n  switch (action.type) {\n    case MAP_SET_MAP_CENTER:\n      return updateObject(mapState, {\n        centerLat: action.latlng.lat,\n        centerLng: action.latlng.lng\n      });\n\n    case MAP_SET_MAP_CENTER_FORCE:\n      return updateObject(mapState, {\n        centerLat: action.latlng.lat,\n        centerLng: action.latlng.lng,\n        refreshCenter: mapState.refreshCenter + 1\n      });\n\n    case MAP_SET_MAP_CENTER_CHANGE:\n      return updateObject(mapState, {\n        centerChanged: true,\n        changedCenterLat: action.latlng.lat,\n        changedCenterLng: action.latlng.lng\n      });\n\n    case MAP_SET_MAP_BOUNDS_CHANGE:\n      return updateObject(mapState, {\n        mapBounds: action.mapBounds\n      });\n\n    case MAP_RESET_MAP_CENTER_CHANGE:\n      return updateObject(mapState, {\n        centerChanged: false,\n        changedCenterLat: null,\n        changedCenterLng: null\n      });\n\n    case MAP_LOADING_MAP_STARTED:\n      return updateObject(mapState, {\n        mapLoading: true\n      });\n\n    case MAP_LOADING_MAP_FINISHED:\n      return updateObject(mapState, {\n        mapLoading: false\n      });\n\n    case MAP_LOADING_MAP_SUCCESS:\n      return updateObject(mapState, {\n        map: action.map,\n        mapRef: action.mapRef,\n        kakao: action.kakao,\n        errorMapLoading: false\n      });\n\n    case MAP_LOADING_MAP_FAIL:\n      return updateObject(mapState, {\n        map: null,\n        errorMapLoading: true\n      });\n\n    case MAP_SET_GEOLOCATION_CENTER:\n      return updateObject(mapState, {\n        geoLocationCenterLat: action.latlng.lat,\n        geoLocationCenterLng: action.latlng.lng\n      });\n\n    case MAP_LOADING_GEOLOCATION_STARTED:\n      return updateObject(mapState, {\n        geolocationLoading: true\n      });\n\n    case MAP_LOADING_GEOLOCATION_FINISHED:\n      return updateObject(mapState, {\n        geolocationLoading: false\n      });\n\n    case MAP_LOADING_GEOLOCATION_SUCCESS:\n      return updateObject(mapState, {\n        enableGeolocation: true\n      });\n\n    case MAP_LOADING_GEOLOCATION_FAIL:\n      return updateObject(mapState, {\n        enableGeolocation: false\n      });\n\n    default:\n      return mapState;\n  }\n}","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/reducers/mapReducer.js"],"names":["MAP_LOADING_GEOLOCATION_FAIL","MAP_LOADING_GEOLOCATION_FINISHED","MAP_LOADING_GEOLOCATION_STARTED","MAP_LOADING_GEOLOCATION_SUCCESS","MAP_LOADING_MAP_FAIL","MAP_LOADING_MAP_FINISHED","MAP_LOADING_MAP_STARTED","MAP_LOADING_MAP_SUCCESS","MAP_RESET_MAP_CENTER_CHANGE","MAP_SET_GEOLOCATION_CENTER","MAP_SET_MAP_BOUNDS_CHANGE","MAP_SET_MAP_CENTER","MAP_SET_MAP_CENTER_CHANGE","MAP_SET_MAP_CENTER_FORCE","updateObject","initialStateMap","map","mapRef","mapLoading","errorMapLoading","centerLat","centerLng","refreshCenter","enableGeolocation","geoLocationCenterLat","geoLocationCenterLng","geolocationLoading","centerChanged","changedCenterLat","changedCenterLng","mapBounds","sw","lat","lng","ne","mapState","action","type","latlng","kakao"],"mappings":"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","sourcesContent":["import {\n    MAP_LOADING_GEOLOCATION_FAIL,\n    MAP_LOADING_GEOLOCATION_FINISHED,\n    MAP_LOADING_GEOLOCATION_STARTED,\n    MAP_LOADING_GEOLOCATION_SUCCESS,\n    MAP_LOADING_MAP_FAIL,\n    MAP_LOADING_MAP_FINISHED,\n    MAP_LOADING_MAP_STARTED,\n    MAP_LOADING_MAP_SUCCESS, MAP_RESET_MAP_CENTER_CHANGE, MAP_SET_GEOLOCATION_CENTER, MAP_SET_MAP_BOUNDS_CHANGE,\n    MAP_SET_MAP_CENTER, MAP_SET_MAP_CENTER_CHANGE,\n    MAP_SET_MAP_CENTER_FORCE\n} from \"data/redux/action/map\";\n\nimport {updateObject} from \"data/util\";\n\nconst initialStateMap = {\n    map: null,\n    mapRef: null,\n    mapLoading: false,\n    errorMapLoading: false,\n    centerLat: null,\n    centerLng: null,\n    refreshCenter: 0,\n    enableGeolocation: false,\n    geoLocationCenterLat: null,\n    geoLocationCenterLng: null,\n    geolocationLoading: false,\n    centerChanged: false,\n    changedCenterLat: null,\n    changedCenterLng: null,\n    mapBounds: {\n        sw: {\n            lat: null,\n            lng: null\n        },\n        ne: {\n            lat: null,\n            lng: null\n        }\n    }\n};\n\nexport default function(mapState = initialStateMap, action) {\n    switch(action.type) {\n        case MAP_SET_MAP_CENTER : return updateObject(mapState, {centerLat: action.latlng.lat, centerLng: action.latlng.lng});\n        case MAP_SET_MAP_CENTER_FORCE : return updateObject(mapState, {centerLat: action.latlng.lat, centerLng: action.latlng.lng, refreshCenter: mapState.refreshCenter + 1});\n        case MAP_SET_MAP_CENTER_CHANGE : return updateObject(mapState, {centerChanged: true, changedCenterLat: action.latlng.lat, changedCenterLng: action.latlng.lng});\n        case MAP_SET_MAP_BOUNDS_CHANGE : return updateObject(mapState, {mapBounds: action.mapBounds});\n        case MAP_RESET_MAP_CENTER_CHANGE : return updateObject(mapState, {centerChanged: false, changedCenterLat: null, changedCenterLng: null});\n        case MAP_LOADING_MAP_STARTED : return updateObject(mapState, {mapLoading: true});\n        case MAP_LOADING_MAP_FINISHED : return updateObject(mapState, {mapLoading: false});\n        case MAP_LOADING_MAP_SUCCESS : return updateObject(mapState, {map: action.map, mapRef: action.mapRef, kakao: action.kakao, errorMapLoading: false});\n        case MAP_LOADING_MAP_FAIL : return updateObject(mapState, {map: null, errorMapLoading: true});\n        case MAP_SET_GEOLOCATION_CENTER : return updateObject(mapState, {geoLocationCenterLat: action.latlng.lat, geoLocationCenterLng: action.latlng.lng});\n        case MAP_LOADING_GEOLOCATION_STARTED : return updateObject(mapState, {geolocationLoading: true});\n        case MAP_LOADING_GEOLOCATION_FINISHED : return updateObject(mapState, {geolocationLoading: false});\n        case MAP_LOADING_GEOLOCATION_SUCCESS : return updateObject(mapState, {enableGeolocation: true});\n        case MAP_LOADING_GEOLOCATION_FAIL : return updateObject(mapState, {enableGeolocation: false});\n        default : return mapState;\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}