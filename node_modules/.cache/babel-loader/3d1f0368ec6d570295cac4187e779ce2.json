{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _brighten = require('./brighten');\n\nvar _brighten2 = _interopRequireDefault(_brighten);\n\nvar _function = require('react-pure-render/function');\n\nvar _function2 = _interopRequireDefault(_function);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar styles = {\n  base: {\n    cursor: 'pointer',\n    fontWeight: 'bold',\n    borderRadius: 3,\n    padding: 4,\n    marginLeft: 3,\n    marginRight: 3,\n    marginTop: 5,\n    marginBottom: 5,\n    flexGrow: 1,\n    display: 'inline-block',\n    fontSize: '0.8em',\n    color: 'white',\n    textDecoration: 'none'\n  }\n};\n\nvar LogMonitorButton = function (_React$Component) {\n  _inherits(LogMonitorButton, _React$Component);\n\n  function LogMonitorButton(props) {\n    _classCallCheck(this, LogMonitorButton);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this.shouldComponentUpdate = _function2.default;\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.onClick = _this.onClick.bind(_this);\n    _this.state = {\n      hovered: false,\n      active: false\n    };\n    return _this;\n  }\n\n  LogMonitorButton.prototype.handleMouseEnter = function handleMouseEnter() {\n    this.setState({\n      hovered: true\n    });\n  };\n\n  LogMonitorButton.prototype.handleMouseLeave = function handleMouseLeave() {\n    this.setState({\n      hovered: false\n    });\n  };\n\n  LogMonitorButton.prototype.handleMouseDown = function handleMouseDown() {\n    this.setState({\n      active: true\n    });\n  };\n\n  LogMonitorButton.prototype.handleMouseUp = function handleMouseUp() {\n    this.setState({\n      active: false\n    });\n  };\n\n  LogMonitorButton.prototype.onClick = function onClick() {\n    if (!this.props.enabled) {\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  };\n\n  LogMonitorButton.prototype.render = function render() {\n    var style = _extends({}, styles.base, {\n      backgroundColor: this.props.theme.base02\n    });\n\n    if (this.props.enabled && this.state.hovered) {\n      style = _extends({}, style, {\n        backgroundColor: (0, _brighten2.default)(this.props.theme.base02, 0.2)\n      });\n    }\n\n    if (!this.props.enabled) {\n      style = _extends({}, style, {\n        opacity: 0.2,\n        cursor: 'text',\n        backgroundColor: 'transparent'\n      });\n    }\n\n    return _react2.default.createElement('a', {\n      onMouseEnter: this.handleMouseEnter,\n      onMouseLeave: this.handleMouseLeave,\n      onMouseDown: this.handleMouseDown,\n      onMouseUp: this.handleMouseUp,\n      onClick: this.onClick,\n      style: style\n    }, this.props.children);\n  };\n\n  return LogMonitorButton;\n}(_react2.default.Component);\n\nexports.default = LogMonitorButton;","map":null,"metadata":{},"sourceType":"script"}