{"ast":null,"code":"import { getFavoriteChannels, getFavoriteContents } from \"data/api\";\nexport const FAVORITE_CHANNEL_RESET_CHANNEL_DATA = 'FAVORITE_CHANNEL/RESET_CHANNEL_DATA';\nexport const FAVORITE_CHANNEL_SET_ACTIVE_CHANNEL = 'FAVORITE_CHANNEL/SET_ACTIVE_CHANNEL';\nexport const FAVORITE_CHANNEL_SET_CHANNEL_LOADING = 'FAVORITE_CHANNEL/SET_CHANNEL_LOADING';\nexport const FAVORITE_CHANNEL_FETCH_CHANNEL_STARTED = 'FAVORITE_CHANNEL/FETCH_CHANNEL_STARTED';\nexport const FAVORITE_CHANNEL_FETCH_CHANNEL_FINISHED = 'FAVORITE_CHANNEL/FETCH_CHANNEL_FINISHED';\nexport const FAVORITE_CHANNEL_FETCH_CHANNEL_SUCCESS = 'FAVORITE_CHANNEL/FETCH_CHANNEL_SUCCESS';\nexport const FAVORITE_CHANNEL_FETCH_CHANNEL_ERROR = 'FAVORITE_CHANNEL/FETCH_CHANNEL_ERROR';\nexport const FAVORITE_CONTENT_RESET_CONTENT_DATA = 'FAVORITE_CONTENT/RESET_CONTENT_DATA';\nexport const FAVORITE_CONTENT_SET_CONTENT_LOADING = 'FAVORITE_CONTENT/SET_CONTENT_LOADING';\nexport const FAVORITE_CONTENT_FETCH_CONTENT_STARTED = 'FAVORITE_CONTENT/FETCH_CONTENT_STARTED';\nexport const FAVORITE_CONTENT_FETCH_CONTENT_FINISHED = 'FAVORITE_CONTENT/FETCH_CONTENT_FINISHED';\nexport const FAVORITE_CONTENT_FETCH_CONTENT_SUCCESS = 'FAVORITE_CONTENT/FETCH_CONTENT_SUCCESS';\nexport const FAVORITE_CONTENT_FETCH_CONTENT_ERROR = 'FAVORITE_CONTENT/FETCH_CONTENT_ERROR';\nexport const fetchFavoriteContentList = () => {\n  return dispatch => {\n    dispatch(resetFavoriteContentData());\n    dispatch(fetchFavoriteContentStarted());\n    return getFavoriteContents().then(response => {\n      dispatch(fetchFavoriteContentSuccess({\n        data: response.data\n      }));\n    }).catch(error => {\n      dispatch(fetchFavoriteContentFail(error));\n    }).finally(() => {\n      dispatch(fetchFavoriteContentFinished());\n    });\n  };\n};\nexport const fetchFavoriteChannelList = () => {\n  return dispatch => {\n    dispatch(resetFavoriteChannelData());\n    dispatch(fetchFavoriteChannelStarted());\n    return getFavoriteChannels().then(response => {\n      dispatch(fetchFavoriteChannelSuccess({\n        data: response.data\n      }));\n    }).catch(error => {\n      dispatch(fetchFavoriteChannelFail(error));\n    }).finally(() => {\n      dispatch(fetchFavoriteChannelFinished());\n    });\n  };\n};\nexport const resetFavoriteContentData = () => {\n  return {\n    type: FAVORITE_CONTENT_RESET_CONTENT_DATA\n  };\n};\nexport const setFavoriteContentLoading = favoriteContentLoading => {\n  return {\n    type: FAVORITE_CONTENT_SET_CONTENT_LOADING,\n    favoriteContentLoading\n  };\n};\nexport const fetchFavoriteContentStarted = () => {\n  return {\n    type: FAVORITE_CONTENT_FETCH_CONTENT_STARTED\n  };\n};\nexport const fetchFavoriteContentFinished = () => {\n  return {\n    type: FAVORITE_CONTENT_FETCH_CONTENT_FINISHED\n  };\n};\nexport const fetchFavoriteContentSuccess = data => {\n  return {\n    type: FAVORITE_CONTENT_FETCH_CONTENT_SUCCESS,\n    data\n  };\n};\nexport const fetchFavoriteContentFail = err => {\n  return {\n    type: FAVORITE_CONTENT_FETCH_CONTENT_ERROR,\n    err\n  };\n};\nexport const resetFavoriteChannelData = () => {\n  return {\n    type: FAVORITE_CHANNEL_RESET_CHANNEL_DATA\n  };\n};\nexport const setFavoriteChannelLoading = favoriteChannelLoading => {\n  return {\n    type: FAVORITE_CHANNEL_SET_CHANNEL_LOADING,\n    favoriteChannelLoading\n  };\n};\nexport const fetchFavoriteChannelStarted = () => {\n  return {\n    type: FAVORITE_CHANNEL_FETCH_CHANNEL_STARTED\n  };\n};\nexport const fetchFavoriteChannelFinished = () => {\n  return {\n    type: FAVORITE_CHANNEL_FETCH_CHANNEL_FINISHED\n  };\n};\nexport const fetchFavoriteChannelSuccess = data => {\n  return {\n    type: FAVORITE_CHANNEL_FETCH_CHANNEL_SUCCESS,\n    data\n  };\n};\nexport const fetchFavoriteChannelFail = err => {\n  return {\n    type: FAVORITE_CHANNEL_FETCH_CHANNEL_ERROR,\n    err\n  };\n};","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/action/favorite.js"],"names":["getFavoriteChannels","getFavoriteContents","FAVORITE_CHANNEL_RESET_CHANNEL_DATA","FAVORITE_CHANNEL_SET_ACTIVE_CHANNEL","FAVORITE_CHANNEL_SET_CHANNEL_LOADING","FAVORITE_CHANNEL_FETCH_CHANNEL_STARTED","FAVORITE_CHANNEL_FETCH_CHANNEL_FINISHED","FAVORITE_CHANNEL_FETCH_CHANNEL_SUCCESS","FAVORITE_CHANNEL_FETCH_CHANNEL_ERROR","FAVORITE_CONTENT_RESET_CONTENT_DATA","FAVORITE_CONTENT_SET_CONTENT_LOADING","FAVORITE_CONTENT_FETCH_CONTENT_STARTED","FAVORITE_CONTENT_FETCH_CONTENT_FINISHED","FAVORITE_CONTENT_FETCH_CONTENT_SUCCESS","FAVORITE_CONTENT_FETCH_CONTENT_ERROR","fetchFavoriteContentList","dispatch","resetFavoriteContentData","fetchFavoriteContentStarted","then","response","fetchFavoriteContentSuccess","data","catch","error","fetchFavoriteContentFail","finally","fetchFavoriteContentFinished","fetchFavoriteChannelList","resetFavoriteChannelData","fetchFavoriteChannelStarted","fetchFavoriteChannelSuccess","fetchFavoriteChannelFail","fetchFavoriteChannelFinished","type","setFavoriteContentLoading","favoriteContentLoading","err","setFavoriteChannelLoading","favoriteChannelLoading"],"mappings":"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","sourcesContent":["import {getFavoriteChannels, getFavoriteContents} from \"data/api\";\n\nexport const FAVORITE_CHANNEL_RESET_CHANNEL_DATA = 'FAVORITE_CHANNEL/RESET_CHANNEL_DATA';\nexport const FAVORITE_CHANNEL_SET_ACTIVE_CHANNEL = 'FAVORITE_CHANNEL/SET_ACTIVE_CHANNEL';\nexport const FAVORITE_CHANNEL_SET_CHANNEL_LOADING = 'FAVORITE_CHANNEL/SET_CHANNEL_LOADING';\nexport const FAVORITE_CHANNEL_FETCH_CHANNEL_STARTED = 'FAVORITE_CHANNEL/FETCH_CHANNEL_STARTED';\nexport const FAVORITE_CHANNEL_FETCH_CHANNEL_FINISHED = 'FAVORITE_CHANNEL/FETCH_CHANNEL_FINISHED';\nexport const FAVORITE_CHANNEL_FETCH_CHANNEL_SUCCESS = 'FAVORITE_CHANNEL/FETCH_CHANNEL_SUCCESS';\nexport const FAVORITE_CHANNEL_FETCH_CHANNEL_ERROR = 'FAVORITE_CHANNEL/FETCH_CHANNEL_ERROR';\n\nexport const FAVORITE_CONTENT_RESET_CONTENT_DATA = 'FAVORITE_CONTENT/RESET_CONTENT_DATA';\nexport const FAVORITE_CONTENT_SET_CONTENT_LOADING = 'FAVORITE_CONTENT/SET_CONTENT_LOADING';\nexport const FAVORITE_CONTENT_FETCH_CONTENT_STARTED = 'FAVORITE_CONTENT/FETCH_CONTENT_STARTED';\nexport const FAVORITE_CONTENT_FETCH_CONTENT_FINISHED = 'FAVORITE_CONTENT/FETCH_CONTENT_FINISHED';\nexport const FAVORITE_CONTENT_FETCH_CONTENT_SUCCESS = 'FAVORITE_CONTENT/FETCH_CONTENT_SUCCESS';\nexport const FAVORITE_CONTENT_FETCH_CONTENT_ERROR = 'FAVORITE_CONTENT/FETCH_CONTENT_ERROR';\n\nexport const fetchFavoriteContentList = () => {\n    return (dispatch) => {\n        dispatch(resetFavoriteContentData());\n        dispatch(fetchFavoriteContentStarted());\n        return getFavoriteContents().then(response => {\n                dispatch(fetchFavoriteContentSuccess({data: response.data}))\n            }).catch((error)  => {\n                dispatch(fetchFavoriteContentFail(error))\n            }).finally(() => {\n                dispatch(fetchFavoriteContentFinished());\n        });\n    }\n};\n\nexport const fetchFavoriteChannelList = () => {\n    return (dispatch) => {\n        dispatch(resetFavoriteChannelData());\n        dispatch(fetchFavoriteChannelStarted());\n        return getFavoriteChannels().then(response => {\n            dispatch(fetchFavoriteChannelSuccess({data: response.data}));\n        }).catch((error)  => {\n            dispatch(fetchFavoriteChannelFail(error));\n        }).finally(() => {\n            dispatch(fetchFavoriteChannelFinished());\n        });\n    }\n}\n\nexport const resetFavoriteContentData = () => {\n    return {\n        type: FAVORITE_CONTENT_RESET_CONTENT_DATA\n    }\n};\n\nexport const setFavoriteContentLoading = (favoriteContentLoading) => {\n    return {\n        type: FAVORITE_CONTENT_SET_CONTENT_LOADING,\n        favoriteContentLoading\n    }\n};\n\nexport const fetchFavoriteContentStarted = () => {\n    return {\n        type: FAVORITE_CONTENT_FETCH_CONTENT_STARTED\n    }\n};\n\nexport const fetchFavoriteContentFinished = () => {\n    return {\n        type: FAVORITE_CONTENT_FETCH_CONTENT_FINISHED\n    }\n};\n\nexport const fetchFavoriteContentSuccess = (data) => {\n    return {\n        type: FAVORITE_CONTENT_FETCH_CONTENT_SUCCESS,\n        data\n    }\n};\n\nexport const fetchFavoriteContentFail = (err) => {\n    return {\n        type: FAVORITE_CONTENT_FETCH_CONTENT_ERROR,\n        err\n    }\n};\n\nexport const resetFavoriteChannelData = () => {\n    return {\n        type: FAVORITE_CHANNEL_RESET_CHANNEL_DATA\n    }\n};\n\nexport const setFavoriteChannelLoading = (favoriteChannelLoading) => {\n    return {\n        type: FAVORITE_CHANNEL_SET_CHANNEL_LOADING,\n        favoriteChannelLoading\n    }\n};\n\nexport const fetchFavoriteChannelStarted = () => {\n    return {\n        type: FAVORITE_CHANNEL_FETCH_CHANNEL_STARTED\n    }\n};\n\nexport const fetchFavoriteChannelFinished = () => {\n    return {\n        type: FAVORITE_CHANNEL_FETCH_CHANNEL_FINISHED\n    }\n};\n\nexport const fetchFavoriteChannelSuccess = (data) => {\n    return {\n        type: FAVORITE_CHANNEL_FETCH_CHANNEL_SUCCESS,\n        data\n    }\n};\n\nexport const fetchFavoriteChannelFail = (err) => {\n    return {\n        type: FAVORITE_CHANNEL_FETCH_CHANNEL_ERROR,\n        err\n    }\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}