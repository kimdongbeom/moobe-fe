{"ast":null,"code":"import _objectSpread from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/InfoWindowWithMarker.jsx\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { MapContext } from \"components/common/map/KakaoMap\";\nimport Marker from \"components/common/map/Marker\";\n\nconst InfoWindoWithMarker = props => {\n  const _useContext = useContext(MapContext),\n        kakao = _useContext.kakao,\n        map = _useContext.map;\n\n  const _useState = useState({\n    infoWindow: null,\n    kakao,\n    map\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const onMouseOver = marker => {\n    const infoWindow = state.infoWindow;\n    infoWindow.open(map, marker);\n  };\n\n  const onMouseOut = marker => {\n    const infoWindow = state.infoWindow;\n    infoWindow.close(map);\n  };\n\n  const onClick = marker => {\n    if (props.onClick) {\n      const infoWindow = state.infoWindow;\n      props.onClick(map, infoWindow, marker);\n    }\n  };\n\n  const overlayRef = useCallback(node => {\n    if (state.infoWindow !== null) return;\n    if (node == null) return;\n    return initInfoWindow(node.firstChild);\n  }, []);\n  useEffect(() => {\n    if (props.children) {} else {\n      const content = document.createElement(\"div\");\n      content.className = props.className;\n      content.innerHTML = props.options.content;\n      return initInfoWindow(content);\n    }\n  }, []);\n\n  const initInfoWindow = content => {\n    const _props$options = props.options,\n          lat = _props$options.lat,\n          lng = _props$options.lng;\n    const infoWindow = new kakao.maps.InfoWindow({\n      position: new kakao.maps.LatLng(lat, lng),\n      content: content\n    });\n    setState(_objectSpread({}, state, {\n      infoWindow\n    }));\n    return () => {\n      infoWindow.setMap(null);\n    };\n  };\n\n  return state.infoWindow === null ? null : React.createElement(Marker, {\n    delay: props.delay,\n    onMouseOver: onMouseOver,\n    onMouseOut: onMouseOut,\n    onClick: onClick,\n    options: props.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  });\n};\n\nexport default InfoWindoWithMarker;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/map/InfoWindowWithMarker.jsx"],"names":["React","useCallback","useContext","useEffect","useState","MapContext","Marker","InfoWindoWithMarker","props","kakao","map","infoWindow","state","setState","onMouseOver","marker","open","onMouseOut","close","onClick","overlayRef","node","initInfoWindow","firstChild","children","content","document","createElement","className","innerHTML","options","lat","lng","maps","InfoWindow","position","LatLng","setMap","delay"],"mappings":"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","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport {MapContext} from \"components/common/map/KakaoMap\";\nimport Marker from \"components/common/map/Marker\";\n\nconst InfoWindoWithMarker = props => {\n    const { kakao, map } = useContext(MapContext);\n    const [state, setState] = useState({\n        infoWindow: null,\n        kakao,\n        map\n    });\n\n    const onMouseOver = marker => {\n        const { infoWindow } = state;\n        infoWindow.open(map, marker);\n    };\n\n    const onMouseOut = marker => {\n        const { infoWindow } = state;\n        infoWindow.close(map);\n    };\n\n    const onClick = marker => {\n        if (props.onClick) {\n            const { infoWindow } = state;\n            props.onClick(map, infoWindow, marker)\n        }\n    };\n\n    const overlayRef = useCallback(node => {\n        if (state.infoWindow !== null) return;\n        if (node == null) return;\n        return initInfoWindow(node.firstChild);\n    }, []);\n\n    useEffect(() => {\n        if (props.children) {\n\n        } else {\n            const content = document.createElement(\"div\");\n            content.className = props.className;\n            content.innerHTML = props.options.content;\n            return initInfoWindow(content);\n        }\n\n    }, []);\n\n    const initInfoWindow = (content) => {\n        const { lat, lng } = props.options;\n        const infoWindow = new kakao.maps.InfoWindow({\n            position: new kakao.maps.LatLng(lat, lng),\n            content: content\n        });\n        setState({ ...state, infoWindow });\n        return () => {\n            infoWindow.setMap(null);\n        };\n    };\n\n    return state.infoWindow === null ? null : (\n        <Marker\n            delay={props.delay}\n            onMouseOver={onMouseOver}\n            onMouseOut={onMouseOut}\n            onClick={onClick}\n            options={props.options}\n        />\n    );\n};\n\nexport default InfoWindoWithMarker;"]},"metadata":{},"sourceType":"module"}