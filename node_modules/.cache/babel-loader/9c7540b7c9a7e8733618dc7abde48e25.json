{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/comment/CommentInput.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { requireUser } from \"data/redux/action/user\";\nimport { isEmpty as _isEmpty } from \"lodash\";\n\nconst CommentInput = () => {\n  const dispatch = useDispatch();\n\n  const onFocusComment = e => {\n    let target = e.target;\n    dispatch(requireUser(() => {\n      target.focus();\n    }, () => {\n      target.blur();\n    }, () => {\n      target.blur();\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card is-shadowless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-content is-paddingless has-padding-15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"image is-48x48\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"is-rounded\",\n    src: \"https://bulma.io/images/placeholders/96x96.png\",\n    alt: \"Placeholder image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"media-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(CommentTextArea, {\n    className: \"textarea has-fixed-size overflow-hidden is-top-borderless is-left-borderless is-right-borderless is-shadowless is-radiusless has-padding-5\",\n    onFocus: onFocusComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })))));\n};\n\nexport const CommentTextArea = ({\n  initialValue = \"\",\n  onFocus = null,\n  onSubmit = null,\n  onCancel = null,\n  className = \"\"\n}) => {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        textAreaRow = _useState2[0],\n        setTextAreaRow = _useState2[1];\n\n  const _useState3 = useState(initialValue),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputValue = _useState4[0],\n        setInputValue = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        inputValueNewLine = _useState6[0],\n        setInputValueNewLine = _useState6[1]; //input value의 new line만큼 textarea의 row를 조절\n\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        textAreaRowHeight = _useState8[0],\n        setTextAreaRowHeight = _useState8[1]; // textarea의 초기 height를 기록.\n\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        textAreaOverflowRow = _useState10[0],\n        setTextAreaOverflowRow = _useState10[1]; //textarea의 scroll이 발생할때 row를 조절\n\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        showButton = _useState12[0],\n        setShowButton = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        disableButton = _useState14[0],\n        setDisableButton = _useState14[1]; //input value가 비어있을때 댓글 submit을 할 수 없도록 disable\n\n\n  const textAreaRef = useRef(null);\n  useEffect(() => {\n    // textarea가 로드될때 초기 clientheight를 저장\n    if (textAreaRef.current) {\n      setTextAreaRowHeight(textAreaRef.current.clientHeight);\n    }\n  }, [textAreaRef]);\n  useEffect(() => {\n    //input value가 변경되거나 textAreaRowHeight가 변경될 때 row를 변경.\n    setDisableButton(inputValue === \"\");\n\n    if (inputValue === \"\") {\n      setTextAreaOverflowRow(0);\n    }\n\n    if (textAreaRef && textAreaRowHeight && textAreaRef.current.scrollHeight > textAreaRef.current.clientHeight) {\n      setTextAreaOverflowRow(textAreaOverflowRow + Math.ceil((textAreaRef.current.scrollHeight - textAreaRef.current.clientHeight) / textAreaRowHeight));\n    }\n\n    setInputValueNewLine(inputValue.split(\"\\n\").length);\n  }, [inputValue, textAreaRowHeight]);\n  useEffect(() => {\n    //inputValueNewLine와 textAreaOverflowRow가 변경 될 때마다 실제로 textarea의 row를 변경\n    setTextAreaRow(inputValueNewLine + textAreaOverflowRow);\n  }, [inputValueNewLine, textAreaOverflowRow]);\n\n  const cancelComment = () => {\n    setInputValue(\"\");\n    setShowButton(false);\n    if (onCancel) onCancel();\n  };\n\n  const submitComment = () => {\n    //TODO call api\n    console.log(\"submit comment \", inputValue);\n    if (onSubmit) onSubmit(inputValue);\n  };\n\n  const CommentActionButton = () => React.createElement(\"div\", {\n    className: \"field is-grouped is-pulled-right has-padding-top-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button is-light\",\n    onClick: cancelComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"\\uCDE8\\uC18C\")), React.createElement(\"div\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button is-link\",\n    disabled: disableButton,\n    onClick: submitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\uB313\\uAE00\")));\n\n  const handleOnFocus = e => {\n    setShowButton(true);\n    if (onFocus) onFocus(e);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"textarea\", {\n    className: className,\n    ref: textAreaRef,\n    value: inputValue,\n    rows: textAreaRow,\n    onFocus: handleOnFocus,\n    wrap: \"virtual\",\n    onChange: e => setInputValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), showButton ? React.createElement(CommentActionButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }) : null);\n};\nexport default CommentInput;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/comment/CommentInput.jsx"],"names":["React","useEffect","useRef","useState","useDispatch","requireUser","isEmpty","_isEmpty","CommentInput","dispatch","onFocusComment","e","target","focus","blur","CommentTextArea","initialValue","onFocus","onSubmit","onCancel","className","textAreaRow","setTextAreaRow","inputValue","setInputValue","inputValueNewLine","setInputValueNewLine","textAreaRowHeight","setTextAreaRowHeight","textAreaOverflowRow","setTextAreaOverflowRow","showButton","setShowButton","disableButton","setDisableButton","textAreaRef","current","clientHeight","scrollHeight","Math","ceil","split","length","cancelComment","submitComment","console","log","CommentActionButton","handleOnFocus","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {requireUser} from \"data/redux/action/user\";\nimport {isEmpty as _isEmpty} from \"lodash\";\n\nconst CommentInput = () => {\n    const dispatch = useDispatch();\n\n    const onFocusComment = (e) => {\n        let target = e.target\n        dispatch(requireUser(() => {\n            target.focus();\n        }, () => {\n            target.blur();\n        }, () => {\n            target.blur();\n        }))\n    };\n\n    return (\n        <div className=\"card is-shadowless\">\n            <div className=\"card-content is-paddingless has-padding-15\">\n                <div className=\"media\">\n                    <div className=\"media-left\">\n                        <figure className=\"image is-48x48\">\n                            <img className=\"is-rounded\" src=\"https://bulma.io/images/placeholders/96x96.png\" alt=\"Placeholder image\" />\n                        </figure>\n                    </div>\n                    <div className=\"media-content\">\n                        <CommentTextArea className=\"textarea has-fixed-size overflow-hidden is-top-borderless is-left-borderless is-right-borderless is-shadowless is-radiusless has-padding-5\"\n                                         onFocus={onFocusComment} />\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport const CommentTextArea = ({initialValue=\"\", onFocus=null, onSubmit=null, onCancel=null, className=\"\"}) => {\n    const [textAreaRow, setTextAreaRow] = useState(1);\n    const [inputValue, setInputValue] = useState(initialValue);\n\n    const [inputValueNewLine, setInputValueNewLine] = useState(0); //input value의 new line만큼 textarea의 row를 조절\n    const [textAreaRowHeight, setTextAreaRowHeight] = useState(0); // textarea의 초기 height를 기록.\n    const [textAreaOverflowRow, setTextAreaOverflowRow] = useState(0); //textarea의 scroll이 발생할때 row를 조절\n    const [showButton, setShowButton] = useState(false);\n    const [disableButton, setDisableButton] = useState(true); //input value가 비어있을때 댓글 submit을 할 수 없도록 disable\n\n    const textAreaRef = useRef(null);\n    useEffect( () => {\n        // textarea가 로드될때 초기 clientheight를 저장\n        if (textAreaRef.current) {\n            setTextAreaRowHeight(textAreaRef.current.clientHeight);\n        }\n    }, [textAreaRef]);\n\n    useEffect(() => {\n        //input value가 변경되거나 textAreaRowHeight가 변경될 때 row를 변경.\n        setDisableButton(inputValue === \"\");\n        if (inputValue === \"\") {\n            setTextAreaOverflowRow(0);\n        }\n        if (textAreaRef && textAreaRowHeight && textAreaRef.current.scrollHeight > textAreaRef.current.clientHeight) {\n            setTextAreaOverflowRow(textAreaOverflowRow + Math.ceil((textAreaRef.current.scrollHeight - textAreaRef.current.clientHeight) / textAreaRowHeight));\n        }\n        setInputValueNewLine(inputValue.split(\"\\n\").length);\n    }, [inputValue, textAreaRowHeight]);\n\n    useEffect(() => {\n        //inputValueNewLine와 textAreaOverflowRow가 변경 될 때마다 실제로 textarea의 row를 변경\n        setTextAreaRow(inputValueNewLine + textAreaOverflowRow);\n    }, [inputValueNewLine, textAreaOverflowRow])\n\n    const cancelComment = () => {\n        setInputValue(\"\");\n        setShowButton(false);\n        if (onCancel) onCancel();\n    };\n\n    const submitComment = () => {\n        //TODO call api\n        console.log(\"submit comment \", inputValue);\n        if (onSubmit) onSubmit(inputValue);\n    };\n\n    const CommentActionButton = () => (\n        <div className=\"field is-grouped is-pulled-right has-padding-top-10\">\n            <div className=\"control\">\n                <button className=\"button is-light\" onClick={cancelComment}>취소</button>\n            </div>\n            <div className=\"control\">\n                <button className=\"button is-link\" disabled={disableButton} onClick={submitComment}>댓글</button>\n            </div>\n        </div>\n    );\n\n    const handleOnFocus = (e) => {\n        setShowButton(true)\n        if (onFocus) onFocus(e);\n    }\n\n    return (\n        <>\n            <textarea className={className}\n                      ref={textAreaRef}\n                      value={inputValue}\n                      rows={textAreaRow}\n                      onFocus={handleOnFocus}\n                      wrap=\"virtual\"\n                      onChange={(e) => setInputValue(e.target.value)}  />\n            {showButton ? <CommentActionButton /> : null}\n        </>\n    )\n}\n\nexport default CommentInput;"]},"metadata":{},"sourceType":"module"}