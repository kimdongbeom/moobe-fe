{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/comment/CommentList.jsx\";\nimport React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport uuid from \"react-uuid\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport { isEmpty as _isEmpty, isNil as _isNil } from \"lodash\";\nimport { fetchMoobeComment, fetchYoutubeComment, resetComment } from \"data/redux/action/comment\";\nimport Comment from \"components/common/comment/Comment\";\nimport { LoadingSpinner } from \"components/common/layout/PresentUtil\";\nimport CommentInput from \"components/common/comment/CommentInput\";\nimport { COMMENT_LOADING } from \"assets/styles/colors\";\nimport { ScrollContext } from \"components/common/scroll/ScrollManager\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGrinTears } from \"@fortawesome/free-regular-svg-icons\";\n\nconst CommentList = ({\n  stickyInfo\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isVisibleTab = _useState2[0],\n        setIsVisibleTab = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeMoobeComment = _useState4[0],\n        setActiveMoobeComment = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        prevScroll = _useState6[0],\n        setPrevScroll = _useState6[1];\n\n  const _useSelector = useSelector(state => state.comment),\n        moobeCommentList = _useSelector.moobeCommentList,\n        moobeCommentPage = _useSelector.moobeCommentPage,\n        moobeCommentMaxPage = _useSelector.moobeCommentMaxPage,\n        moobeCommentLoading = _useSelector.moobeCommentLoading,\n        youtubeCommentList = _useSelector.youtubeCommentList,\n        youtubeCommentPage = _useSelector.youtubeCommentPage,\n        youtubeCommentMaxPage = _useSelector.youtubeCommentMaxPage,\n        youtubeCommentLoading = _useSelector.youtubeCommentLoading;\n\n  const _useSelector2 = useSelector(state => state.content),\n        activeContent = _useSelector2.activeContent;\n\n  const getComment = () => activeMoobeComment ? moobeCommentList : youtubeCommentList;\n\n  const getCommentLoading = () => activeMoobeComment ? moobeCommentLoading : youtubeCommentLoading;\n\n  const dispatch = useDispatch();\n\n  const _useContext = useContext(ScrollContext),\n        scrollTarget = _useContext.scrollTarget,\n        isWindow = _useContext.isWindow;\n\n  useEffect(() => {\n    if (_isNil(activeContent)) {\n      dispatch(resetComment());\n    }\n  }, [activeContent]);\n  useEffect(() => {\n    if (_isEmpty(getComment())) {\n      fetchComment();\n    }\n  }, [activeMoobeComment]);\n\n  const fetchComment = () => {\n    if (!getCommentLoading()) {\n      dispatch(activeMoobeComment ? fetchMoobeComment(moobeCommentPage, moobeCommentMaxPage) : fetchYoutubeComment(youtubeCommentPage, youtubeCommentMaxPage));\n    }\n  };\n\n  const savePosition = () => {\n    if (scrollTarget) {\n      if (isWindow) {\n        setPrevScroll(scrollTarget.scrollY);\n      } else {\n        setPrevScroll(scrollTarget.scrollTop);\n      }\n    }\n  };\n\n  const scrollTo = to => {\n    if (scrollTarget) {\n      scrollTarget.scrollTo(0, to);\n    }\n  };\n\n  const handleVisibleTab = visible => {\n    setIsVisibleTab(visible);\n\n    if (!visible && prevScroll === 0) {\n      savePosition();\n    }\n  };\n\n  const loadComment = visible => visible ? fetchComment() : null;\n\n  const renderComments = () => {\n    let comments = getComment();\n\n    if (_isEmpty(comments)) {\n      return activeMoobeComment ? React.createElement(MoobeCommentEmpty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }) : React.createElement(YoutubeCommentEmpty, {\n        videoId: activeContent.videoLinkId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    } else {\n      return comments.map(comment => React.createElement(Comment, {\n        key: comment.uuid,\n        comment: comment,\n        isMoobe: activeMoobeComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n  };\n\n  const renderStaticTab = () => React.createElement(\"div\", {\n    className: \"column tabs is-toggle is-fullwidth is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    className: \"is-size-5 has-padding-left-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"\\uB313\\uAE00\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: activeMoobeComment ? \"\" : \"is-active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    onClick: () => setActiveMoobeComment(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Youtube\"))), React.createElement(\"li\", {\n    className: activeMoobeComment ? \"is-active\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    onClick: () => setActiveMoobeComment(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Moobe\")))));\n\n  const renderFloatingTab = () => React.createElement(\"div\", {\n    className: \"row floating-comment-tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button is-48x48 is-rounded is-paddingless \" + (activeMoobeComment ? \"\" : \"is-link is-active\"),\n    onClick: () => {\n      if (activeMoobeComment) {\n        let originPrevScroll = prevScroll;\n        savePosition();\n        setActiveMoobeComment(false);\n        scrollTo(originPrevScroll);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Y\"))), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button is-48x48 is-rounded is-paddingless \" + (activeMoobeComment ? \"is-link is-active\" : \"\"),\n    onClick: () => {\n      if (!activeMoobeComment) {\n        let originPrevScroll = prevScroll;\n        savePosition();\n        setActiveMoobeComment(true);\n        scrollTo(originPrevScroll);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"M\"))));\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"column is-full has-border-top-width-1 is-paddingless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(VisibilitySensor, {\n    scrollCheck: true,\n    offset: {\n      top: stickyInfo.calculatedHeight\n    },\n    partialVisibility: true,\n    onChange: handleVisibleTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, renderStaticTab()), !isVisibleTab && stickyInfo.isSticky ? renderFloatingTab() : null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, activeMoobeComment ? React.createElement(CommentInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }) : null, renderComments())), React.createElement(VisibilitySensor, {\n    onChange: loadComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"has-min-height-100 has-margin-bottom-25 has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(LoadingSpinner, {\n    color: COMMENT_LOADING,\n    loading: getCommentLoading(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))));\n};\n\nconst MoobeCommentEmpty = () => React.createElement(\"div\", {\n  className: \"has-text-centered has-text-grey-light has-text-weight-semibold\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142\n  },\n  __self: this\n}, React.createElement(FontAwesomeIcon, {\n  icon: faGrinTears,\n  size: \"2x\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142\n  },\n  __self: this\n})), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143\n  },\n  __self: this\n}, \"\\uB4F1\\uB85D\\uB41C \\uB313\\uAE00\\uC774 \\uC5C6\\uC5B4\\uC694...\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144\n  },\n  __self: this\n}, \"\\uCCAB\\uBC88\\uC9F8 \\uB313\\uAE00\\uC758 \\uC8FC\\uC778\\uACF5\\uC774 \\uB418\\uC5B4 \\uBCF4\\uC138\\uC694!\"));\n\nconst YoutubeCommentEmpty = ({\n  videoId\n}) => React.createElement(\"div\", {\n  className: \"has-text-centered has-text-grey-light has-text-weight-semibold\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n}, React.createElement(FontAwesomeIcon, {\n  icon: faGrinTears,\n  size: \"2x\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n})), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}, \"\\uB313\\uAE00\\uC744 \\uBABB\\uAC00\\uC838 \\uC654\\uB098\\uBD10\\uC694... \\uBBF8\\uC548\\uD574\\uC694...\"), React.createElement(\"p\", {\n  className: \"has-padding-top-15\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  className: \"button is-primary\",\n  href: \"https://www.youtube.com/watch?v=\" + videoId,\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}, \"Youtube\\uC5D0\\uC11C \\uBCF4\\uAE30\")));\n\nexport default React.memo(CommentList);","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/comment/CommentList.jsx"],"names":["React","useEffect","useState","useRef","useContext","useDispatch","useSelector","uuid","VisibilitySensor","isEmpty","_isEmpty","isNil","_isNil","fetchMoobeComment","fetchYoutubeComment","resetComment","Comment","LoadingSpinner","CommentInput","COMMENT_LOADING","ScrollContext","faTrashAlt","FontAwesomeIcon","faGrinTears","CommentList","stickyInfo","isVisibleTab","setIsVisibleTab","activeMoobeComment","setActiveMoobeComment","prevScroll","setPrevScroll","state","comment","moobeCommentList","moobeCommentPage","moobeCommentMaxPage","moobeCommentLoading","youtubeCommentList","youtubeCommentPage","youtubeCommentMaxPage","youtubeCommentLoading","content","activeContent","getComment","getCommentLoading","dispatch","scrollTarget","isWindow","fetchComment","savePosition","scrollY","scrollTop","scrollTo","to","handleVisibleTab","visible","loadComment","renderComments","comments","videoLinkId","map","renderStaticTab","renderFloatingTab","originPrevScroll","top","calculatedHeight","isSticky","MoobeCommentEmpty","YoutubeCommentEmpty","videoId","memo"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef, useContext} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport uuid from \"react-uuid\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport {isEmpty as _isEmpty, isNil as _isNil} from \"lodash\";\nimport {fetchMoobeComment, fetchYoutubeComment, resetComment} from \"data/redux/action/comment\";\nimport Comment from \"components/common/comment/Comment\";\nimport {LoadingSpinner} from \"components/common/layout/PresentUtil\";\nimport CommentInput from \"components/common/comment/CommentInput\";\nimport {COMMENT_LOADING} from \"assets/styles/colors\";\nimport {ScrollContext} from \"components/common/scroll/ScrollManager\";\nimport {faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faGrinTears} from \"@fortawesome/free-regular-svg-icons\";\n\nconst CommentList = ({stickyInfo}) => {\n    const [isVisibleTab, setIsVisibleTab] = useState(true)\n    const [activeMoobeComment, setActiveMoobeComment] = useState(false);\n    const [prevScroll, setPrevScroll] = useState(0);\n    const {moobeCommentList, moobeCommentPage, moobeCommentMaxPage, moobeCommentLoading,\n        youtubeCommentList, youtubeCommentPage, youtubeCommentMaxPage, youtubeCommentLoading} = useSelector(state => state.comment);\n    const {activeContent} = useSelector(state => state.content);\n    const getComment = () => activeMoobeComment ? moobeCommentList : youtubeCommentList;\n    const getCommentLoading = () => activeMoobeComment ? moobeCommentLoading : youtubeCommentLoading;\n    const dispatch = useDispatch();\n    const {scrollTarget, isWindow} = useContext(ScrollContext);\n\n    useEffect(() => {\n        if (_isNil(activeContent)) {\n            dispatch(resetComment());\n        }\n    }, [activeContent]);\n\n    useEffect(() => {\n        if (_isEmpty(getComment())) {\n            fetchComment();\n        }\n    }, [activeMoobeComment]);\n\n    const fetchComment = () => {\n        if (!getCommentLoading()) {\n            dispatch(activeMoobeComment ? fetchMoobeComment(moobeCommentPage, moobeCommentMaxPage): fetchYoutubeComment(youtubeCommentPage, youtubeCommentMaxPage))\n        }\n    };\n\n    const savePosition = () => {\n        if(scrollTarget) {\n            if (isWindow) {\n                setPrevScroll(scrollTarget.scrollY)\n            } else {\n                setPrevScroll(scrollTarget.scrollTop)\n            }\n        }\n    };\n\n    const scrollTo = (to) => {\n        if(scrollTarget) {\n            scrollTarget.scrollTo(0, to);\n        }\n    };\n\n    const handleVisibleTab = (visible) => {\n        setIsVisibleTab(visible);\n        if (!visible && prevScroll === 0) {\n            savePosition();\n        }\n    };\n\n    const loadComment = (visible) => visible ? fetchComment() : null;\n\n    const renderComments = () => {\n        let comments = getComment();\n        if (_isEmpty(comments)) {\n            return activeMoobeComment ? <MoobeCommentEmpty /> : <YoutubeCommentEmpty videoId={activeContent.videoLinkId} />\n        } else {\n            return comments.map(comment => <Comment key={comment.uuid} comment={comment} isMoobe={activeMoobeComment}/>)\n        }\n\n    }\n    const renderStaticTab = () => (\n        <div className=\"column tabs is-toggle is-fullwidth is-marginless\">\n            <strong className=\"is-size-5 has-padding-left-5\">댓글</strong>\n            <ul>\n                <li className={activeMoobeComment? \"\": \"is-active\"}><a onClick={() => setActiveMoobeComment(false)}><strong>Youtube</strong></a></li>\n                <li className={activeMoobeComment? \"is-active\" : \"\"}><a onClick={() => setActiveMoobeComment(true)}><strong>Moobe</strong></a></li>\n            </ul>\n        </div>\n    );\n\n    const renderFloatingTab = () => (\n        <div className=\"row floating-comment-tab\">\n            <div className=\"column\">\n                <button className={\"button is-48x48 is-rounded is-paddingless \" + (activeMoobeComment ? \"\" : \"is-link is-active\")} onClick={() => {\n                    if (activeMoobeComment) {\n                        let originPrevScroll = prevScroll;\n                        savePosition();\n                        setActiveMoobeComment(false);\n                        scrollTo(originPrevScroll);\n                    }\n                }}>\n                    <strong>Y</strong>\n                </button>\n            </div>\n            <div className=\"column\">\n                <button className={\"button is-48x48 is-rounded is-paddingless \" + (activeMoobeComment? \"is-link is-active\": \"\")} onClick={() => {\n                    if (!activeMoobeComment) {\n                        let originPrevScroll = prevScroll;\n                        savePosition();\n                        setActiveMoobeComment(true);\n                        scrollTo(originPrevScroll);\n                    }\n                }}>\n                    <strong>M</strong>\n                </button>\n            </div>\n        </div>\n    );\n\n    return (\n        <>\n            <div className=\"column is-full has-border-top-width-1 is-paddingless\">\n                <VisibilitySensor scrollCheck={true} offset={{top: stickyInfo.calculatedHeight}} partialVisibility={true} onChange={handleVisibleTab}>\n                    {renderStaticTab()}\n                </VisibilitySensor>\n                {!isVisibleTab && stickyInfo.isSticky ? renderFloatingTab() :null}\n                <div>\n                    {activeMoobeComment ? <CommentInput /> : null}\n                    {renderComments()}\n                </div>\n            </div>\n            <VisibilitySensor onChange={loadComment}>\n                <div className=\"has-min-height-100 has-margin-bottom-25 has-text-centered\">\n                    <LoadingSpinner color={COMMENT_LOADING} loading={getCommentLoading()} />\n                </div>\n            </VisibilitySensor>\n        </>\n    )\n};\n\nconst MoobeCommentEmpty = () => (\n    <div className=\"has-text-centered has-text-grey-light has-text-weight-semibold\">\n        <p><FontAwesomeIcon icon={faGrinTears} size={\"2x\"}/></p>\n        <p>등록된 댓글이 없어요...</p>\n        <p>첫번째 댓글의 주인공이 되어 보세요!</p>\n    </div>\n)\n\nconst YoutubeCommentEmpty = ({videoId}) => (\n    <div className=\"has-text-centered has-text-grey-light has-text-weight-semibold\">\n        <p><FontAwesomeIcon icon={faGrinTears} size={\"2x\"}/></p>\n        <p>댓글을 못가져 왔나봐요... 미안해요...</p>\n        <p className=\"has-padding-top-15\"><a className=\"button is-primary\" href={\"https://www.youtube.com/watch?v=\" + videoId} target=\"_blank\">Youtube에서 보기</a></p>\n    </div>\n)\n\n\nexport default React.memo(CommentList);"]},"metadata":{},"sourceType":"module"}