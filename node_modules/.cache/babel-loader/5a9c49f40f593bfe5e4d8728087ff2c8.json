{"ast":null,"code":"import axios from 'axios';\nexport const COMMENT_RESET_COMMENT = 'COMMENT/RESET_COMMENT';\nexport const COMMENT_FETCH_MOOBE = 'COMMENT/FETCH_MOOBE';\nexport const COMMENT_FETCH_MOOBE_SUCCESS = 'COMMENT/FETCH_MOOBE_SUCCESS';\nexport const COMMENT_FETCH_MOOBE_ERROR = 'COMMENT/FETCH_MOOBE_ERROR';\nexport const COMMENT_FETCH_YOUTUBE = 'COMMENT/FETCH_YOUTUBE';\nexport const COMMENT_FETCH_YOUTUBE_SUCCESS = 'COMMENT/FETCH_YOUTUBE_SUCCESS';\nexport const COMMENT_FETCH_YOUTUBE_ERROR = 'COMMENT/FETCH_YOUTUBE_ERROR';\nexport const fetchYoutubeComment = (commentPage, commentMaxPage = 5) => {\n  if (commentPage >= commentMaxPage) {\n    return dispatch => {\n      /*do Nothing*/\n    };\n  }\n\n  return dispatch => {\n    dispatch(fetchYoutubeCommentData()); //TODO get comment from api\n\n    return axios.get(process.env.REACT_APP_API_URL + \"/api/contents\").then(response => {\n      setTimeout(() => {\n        dispatch(fetchSuccessYoutubeCommentData({\n          data: response.data,\n          page: commentPage + 1\n        }));\n      }, 300);\n    }).catch(function (error) {\n      dispatch(fetchErrorYoutubeCommentData(error));\n    });\n  };\n};\nexport const fetchMoobeComment = (commentPage, commentMaxPage = 0) => {\n  if (commentPage >= commentMaxPage) {\n    return dispatch => {\n      /*do Nothing*/\n    };\n  }\n\n  return dispatch => {\n    dispatch(fetchMoobeCommentData()); //TODO get comment from api\n\n    return axios.get(process.env.REACT_APP_API_URL + \"/api/contents\").then(response => {\n      setTimeout(() => {\n        dispatch(fetchSuccessMoobeCommentData({\n          data: response.data,\n          page: commentPage + 1\n        }));\n      }, 1000);\n    }).catch(function (error) {\n      dispatch(fetchErrorMoobeCommentData(error));\n    });\n  };\n};\nexport const resetComment = () => {\n  return {\n    type: COMMENT_RESET_COMMENT\n  };\n};\nexport const fetchMoobeCommentData = () => {\n  return {\n    type: COMMENT_FETCH_MOOBE\n  };\n};\nexport const fetchSuccessMoobeCommentData = data => {\n  return {\n    type: COMMENT_FETCH_MOOBE_SUCCESS,\n    data\n  };\n};\nexport const fetchErrorMoobeCommentData = err => {\n  return {\n    type: COMMENT_FETCH_MOOBE_ERROR,\n    err\n  };\n};\nexport const fetchYoutubeCommentData = () => {\n  return {\n    type: COMMENT_FETCH_YOUTUBE\n  };\n};\nexport const fetchSuccessYoutubeCommentData = data => {\n  return {\n    type: COMMENT_FETCH_YOUTUBE_SUCCESS,\n    data\n  };\n};\nexport const fetchErrorYoutubeCommentData = err => {\n  return {\n    type: COMMENT_FETCH_YOUTUBE_ERROR,\n    err\n  };\n};","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/redux/action/comment.js"],"names":["axios","COMMENT_RESET_COMMENT","COMMENT_FETCH_MOOBE","COMMENT_FETCH_MOOBE_SUCCESS","COMMENT_FETCH_MOOBE_ERROR","COMMENT_FETCH_YOUTUBE","COMMENT_FETCH_YOUTUBE_SUCCESS","COMMENT_FETCH_YOUTUBE_ERROR","fetchYoutubeComment","commentPage","commentMaxPage","dispatch","fetchYoutubeCommentData","get","process","env","REACT_APP_API_URL","then","response","setTimeout","fetchSuccessYoutubeCommentData","data","page","catch","error","fetchErrorYoutubeCommentData","fetchMoobeComment","fetchMoobeCommentData","fetchSuccessMoobeCommentData","fetchErrorMoobeCommentData","resetComment","type","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n\nexport const COMMENT_RESET_COMMENT = 'COMMENT/RESET_COMMENT';\nexport const COMMENT_FETCH_MOOBE = 'COMMENT/FETCH_MOOBE';\nexport const COMMENT_FETCH_MOOBE_SUCCESS = 'COMMENT/FETCH_MOOBE_SUCCESS';\nexport const COMMENT_FETCH_MOOBE_ERROR = 'COMMENT/FETCH_MOOBE_ERROR';\nexport const COMMENT_FETCH_YOUTUBE = 'COMMENT/FETCH_YOUTUBE';\nexport const COMMENT_FETCH_YOUTUBE_SUCCESS = 'COMMENT/FETCH_YOUTUBE_SUCCESS';\nexport const COMMENT_FETCH_YOUTUBE_ERROR = 'COMMENT/FETCH_YOUTUBE_ERROR';\n\nexport const fetchYoutubeComment = (commentPage, commentMaxPage=5) => {\n    if (commentPage >= commentMaxPage) {\n        return (dispatch) => {/*do Nothing*/};\n    }\n    return (dispatch) => {\n        dispatch(fetchYoutubeCommentData())\n        //TODO get comment from api\n        return axios.get(process.env.REACT_APP_API_URL + \"/api/contents\")\n            .then(response => {\n                setTimeout(() => {\n                    dispatch(fetchSuccessYoutubeCommentData({data: response.data, page: commentPage + 1}))\n                }, 300)\n            }).catch(function (error) {\n                dispatch(fetchErrorYoutubeCommentData(error))\n            })\n    }\n};\n\nexport const fetchMoobeComment = (commentPage, commentMaxPage=0) => {\n    if (commentPage >= commentMaxPage) {\n        return (dispatch) => {/*do Nothing*/};\n    }\n    return (dispatch) => {\n        dispatch(fetchMoobeCommentData());\n        //TODO get comment from api\n        return axios.get(process.env.REACT_APP_API_URL + \"/api/contents\")\n            .then(response => {\n                setTimeout(() => {\n                    dispatch(fetchSuccessMoobeCommentData({data: response.data, page: commentPage + 1}))\n                }, 1000)\n            }).catch(function (error) {\n                dispatch(fetchErrorMoobeCommentData(error))\n            })\n    }\n};\n\nexport const resetComment = () => {\n    return {\n        type: COMMENT_RESET_COMMENT\n    }\n};\n\nexport const fetchMoobeCommentData = () => {\n    return {\n        type: COMMENT_FETCH_MOOBE\n    }\n};\n\nexport const fetchSuccessMoobeCommentData = (data) => {\n    return {\n        type: COMMENT_FETCH_MOOBE_SUCCESS,\n        data\n    }\n};\n\nexport const fetchErrorMoobeCommentData = (err) => {\n    return {\n        type: COMMENT_FETCH_MOOBE_ERROR,\n        err\n    }\n};\n\nexport const fetchYoutubeCommentData = () => {\n    return {\n        type: COMMENT_FETCH_YOUTUBE\n    }\n};\n\nexport const fetchSuccessYoutubeCommentData = (data) => {\n    return {\n        type: COMMENT_FETCH_YOUTUBE_SUCCESS,\n        data\n    }\n};\n\nexport const fetchErrorYoutubeCommentData = (err) => {\n    return {\n        type: COMMENT_FETCH_YOUTUBE_ERROR,\n        err\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}