{"ast":null,"code":"import { COMMENT_FETCH_MOOBE_FINISHED, COMMENT_FETCH_MOOBE_STARTED, COMMENT_FETCH_MOOBE_SUCCESS, COMMENT_FETCH_YOUTUBE_FINISHED, COMMENT_FETCH_YOUTUBE_STARTED, COMMENT_FETCH_YOUTUBE_SUCCESS, COMMENT_RESET_COMMENT } from \"data/redux/action/comment\";\nimport { updateObject } from \"data/util\";\nimport Comment, { exampleData } from \"data/redux/model/Comment\";\nconst initialStateComment = {\n  videoId: null,\n  moobeCommentList: [],\n  moobeCommentPage: 0,\n  moobeCommentMaxPage: 5,\n  moobeCommentLoading: false,\n  youtubeCommentList: [],\n  youtubeCommentPage: 0,\n  youtubeCommentMaxPage: 5,\n  youtubeCommentLoading: false\n};\n\nconst fetchSuccessYoutubeComment = (commentState, response) => {\n  const data = response.data,\n        page = response.page; //TODO change result from api\n\n  let results = exampleData;\n  let commentList = results.map(result => new Comment(result));\n  return updateObject(commentState, {\n    youtubeCommentLoading: false,\n    youtubeCommentList: commentState.youtubeCommentList.concat(commentList),\n    youtubeCommentPage: page\n  });\n};\n\nconst fetchSuccessMoobeComment = (commentState, response) => {\n  const data = response.data,\n        page = response.page; //TODO change result from api\n\n  let results = exampleData;\n  let commentList = results.map(result => new Comment(result));\n  return updateObject(commentState, {\n    moobeCommentLoading: false,\n    moobeCommentList: commentState.moobeCommentList.concat(commentList),\n    moobeCommentPage: page\n  });\n};\n\nexport default function (commentState = initialStateComment, action) {\n  switch (action.type) {\n    case COMMENT_RESET_COMMENT:\n      return updateObject(commentState, initialStateComment);\n\n    case COMMENT_FETCH_YOUTUBE_STARTED:\n      return updateObject(commentState, {\n        youtubeCommentLoading: true\n      });\n\n    case COMMENT_FETCH_YOUTUBE_SUCCESS:\n      return fetchSuccessYoutubeComment(commentState, action.data);\n\n    case COMMENT_FETCH_YOUTUBE_FINISHED:\n      return updateObject(commentState, {\n        youtubeCommentLoading: false\n      });\n\n    case COMMENT_FETCH_MOOBE_STARTED:\n      return updateObject(commentState, {\n        moobeCommentLoading: true\n      });\n\n    case COMMENT_FETCH_MOOBE_SUCCESS:\n      return fetchSuccessMoobeComment(commentState, action.data);\n\n    case COMMENT_FETCH_MOOBE_FINISHED:\n      return updateObject(commentState, {\n        moobeCommentLoading: false\n      });\n\n    default:\n      return commentState;\n  }\n}","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/reducers/commentReducer.js"],"names":["COMMENT_FETCH_MOOBE_FINISHED","COMMENT_FETCH_MOOBE_STARTED","COMMENT_FETCH_MOOBE_SUCCESS","COMMENT_FETCH_YOUTUBE_FINISHED","COMMENT_FETCH_YOUTUBE_STARTED","COMMENT_FETCH_YOUTUBE_SUCCESS","COMMENT_RESET_COMMENT","updateObject","Comment","exampleData","initialStateComment","videoId","moobeCommentList","moobeCommentPage","moobeCommentMaxPage","moobeCommentLoading","youtubeCommentList","youtubeCommentPage","youtubeCommentMaxPage","youtubeCommentLoading","fetchSuccessYoutubeComment","commentState","response","data","page","results","commentList","map","result","concat","fetchSuccessMoobeComment","action","type"],"mappings":"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","sourcesContent":["import {\n    COMMENT_FETCH_MOOBE_FINISHED,\n    COMMENT_FETCH_MOOBE_STARTED,\n    COMMENT_FETCH_MOOBE_SUCCESS,\n    COMMENT_FETCH_YOUTUBE_FINISHED,\n    COMMENT_FETCH_YOUTUBE_STARTED,\n    COMMENT_FETCH_YOUTUBE_SUCCESS,\n    COMMENT_RESET_COMMENT\n} from \"data/redux/action/comment\";\nimport {updateObject} from \"data/util\";\nimport Comment, {exampleData} from \"data/redux/model/Comment\";\n\nconst initialStateComment = {\n    videoId: null,\n    moobeCommentList: [],\n    moobeCommentPage: 0,\n    moobeCommentMaxPage: 5,\n    moobeCommentLoading: false,\n    youtubeCommentList: [],\n    youtubeCommentPage: 0,\n    youtubeCommentMaxPage: 5,\n    youtubeCommentLoading: false\n};\n\nconst fetchSuccessYoutubeComment = (commentState, response) => {\n    const {data, page} = response;\n    //TODO change result from api\n    let results = exampleData;\n    let commentList = results.map(result => new Comment(result))\n    return updateObject(commentState, {\n        youtubeCommentLoading: false,\n        youtubeCommentList: commentState.youtubeCommentList.concat(commentList),\n        youtubeCommentPage: page\n    })\n};\n\nconst fetchSuccessMoobeComment = (commentState, response) => {\n    const {data, page} = response;\n    //TODO change result from api\n    let results = exampleData;\n    let commentList = results.map(result => new Comment(result));\n    return updateObject(commentState, {\n        moobeCommentLoading: false,\n        moobeCommentList: commentState.moobeCommentList.concat(commentList),\n        moobeCommentPage: page\n    })\n};\n\nexport default function(commentState = initialStateComment, action) {\n    switch (action.type) {\n        case COMMENT_RESET_COMMENT: return updateObject(commentState, initialStateComment);\n        case COMMENT_FETCH_YOUTUBE_STARTED: return updateObject(commentState, {youtubeCommentLoading: true});\n        case COMMENT_FETCH_YOUTUBE_SUCCESS: return fetchSuccessYoutubeComment(commentState, action.data);\n        case COMMENT_FETCH_YOUTUBE_FINISHED: return updateObject(commentState, {youtubeCommentLoading: false});\n        case COMMENT_FETCH_MOOBE_STARTED: return updateObject(commentState, {moobeCommentLoading: true});\n        case COMMENT_FETCH_MOOBE_SUCCESS: return fetchSuccessMoobeComment(commentState, action.data);\n        case COMMENT_FETCH_MOOBE_FINISHED: return updateObject(commentState, {moobeCommentLoading: false});\n        default : return commentState;\n    }\n}"]},"metadata":{},"sourceType":"module"}