{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/map/DesktopKakaoMap.jsx\";\nimport React, { useState } from 'react';\nimport MoobeKakaoMap from \"components/common/map/MoobeKakaoMap\";\nimport MarkerClusterer from \"components/common/map/MarkerClusterer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { showOverlayContentWithDiff } from \"data/redux/action/content\";\nimport InfoWindoWithMarker from \"components/common/map/InfoWindowWithMarker\";\nimport MarkerImage from 'assets/images/marker_gra_42x50.png';\nimport CustomOverlay from \"components/common/map/CustomOverlay\";\nimport DesktopOverlay from \"components/desktop/map/DesktopOverlay\";\nimport { isNil as _isNil } from 'lodash';\nimport { buildContentPath } from \"data/util\";\nimport { useHistory } from \"react-router\";\nimport Marker from \"components/common/map/Marker\";\nimport MarkerArrow from \"assets/images/marker_arrow.png\";\n\nconst DesktopKakaoMap = () => {\n  const contentList = useSelector(state => state.content.contentList);\n  return React.createElement(React.Fragment, null, React.createElement(MoobeKakaoMap, {\n    className: \"column box is-paddingless kakao-map is-fullheight-with-navbar-fixed-height is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(MarkerClusterer, {\n    options: {\n      averageCenter: true,\n      minLevel: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, contentList.map(content => React.createElement(MarkerWithCustomOverlay, {\n    key: content.id,\n    content: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })))));\n};\n\nconst MarkerWithCustomOverlay = ({\n  content\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        focusedMarker = _useState2[0],\n        setFocusedMarker = _useState2[1];\n\n  const _useSelector = useSelector(state => state.channel),\n        activeChannel = _useSelector.activeChannel;\n\n  const _useSelector2 = useSelector(state => state.content),\n        activeOverlayContent = _useSelector2.activeOverlayContent,\n        focusedContent = _useSelector2.focusedContent;\n\n  let visible = !_isNil(activeOverlayContent) && content.id === activeOverlayContent.id;\n  let focused = !_isNil(focusedContent) && content.id === focusedContent.id || focusedMarker;\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const updateActiveContent = content => {\n    dispatch(showOverlayContentWithDiff(content));\n    history.push({\n      pathname: buildContentPath(activeChannel, content),\n      search: location.search\n    });\n  }; //TODO seperate overlay div.\n\n\n  return React.createElement(React.Fragment, null, React.createElement(Marker, {\n    onMouseOver: e => setFocusedMarker(true),\n    onMouseOut: e => setFocusedMarker(false),\n    onClick: marker => updateActiveContent(content),\n    options: {\n      lat: content.store.latitude,\n      lng: content.store.longitude,\n      content: content.store.name,\n      image: {\n        url: MarkerImage,\n        width: 34,\n        height: 42\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(CustomOverlay, {\n    lat: content.store.latitude,\n    lng: content.store.longitude,\n    visible: focused && !visible,\n    options: {\n      offsetY: 44\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card has-min-width-200 has-max-width-200 has-border-radius-6 white-space-normal has-cursor-default has-text-centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-content has-padding-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, content.store.name)))), React.createElement(CustomOverlay, {\n    lat: content.store.latitude,\n    lng: content.store.longitude,\n    visible: visible,\n    options: {\n      offsetY: 54\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(DesktopOverlay, {\n    content: content,\n    visible: visible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n};\n\nexport default DesktopKakaoMap;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/map/DesktopKakaoMap.jsx"],"names":["React","useState","MoobeKakaoMap","MarkerClusterer","useDispatch","useSelector","showOverlayContentWithDiff","InfoWindoWithMarker","MarkerImage","CustomOverlay","DesktopOverlay","isNil","_isNil","buildContentPath","useHistory","Marker","MarkerArrow","DesktopKakaoMap","contentList","state","content","averageCenter","minLevel","map","id","MarkerWithCustomOverlay","focusedMarker","setFocusedMarker","channel","activeChannel","activeOverlayContent","focusedContent","visible","focused","dispatch","history","updateActiveContent","push","pathname","search","location","e","marker","lat","store","latitude","lng","longitude","name","image","url","width","height","offsetY"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport MoobeKakaoMap from \"components/common/map/MoobeKakaoMap\";\nimport MarkerClusterer from \"components/common/map/MarkerClusterer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {showOverlayContentWithDiff} from \"data/redux/action/content\";\nimport InfoWindoWithMarker from \"components/common/map/InfoWindowWithMarker\";\nimport MarkerImage from 'assets/images/marker_gra_42x50.png';\nimport CustomOverlay from \"components/common/map/CustomOverlay\";\nimport DesktopOverlay from \"components/desktop/map/DesktopOverlay\";\nimport {isNil as _isNil} from 'lodash';\nimport {buildContentPath} from \"data/util\";\nimport {useHistory} from \"react-router\";\nimport Marker from \"components/common/map/Marker\";\nimport MarkerArrow from \"assets/images/marker_arrow.png\";\n\nconst DesktopKakaoMap = () => {\n    const contentList = useSelector(state => state.content.contentList);\n    return (\n        <>\n            <MoobeKakaoMap className=\"column box is-paddingless kakao-map is-fullheight-with-navbar-fixed-height is-marginless\">\n                <MarkerClusterer options={{averageCenter: true, minLevel: 8}}>\n                    {contentList.map(content => <MarkerWithCustomOverlay key={content.id} content={content} />)}\n                </MarkerClusterer>\n            </MoobeKakaoMap>\n        </>\n    )\n};\n\nconst MarkerWithCustomOverlay = ({content}) => {\n    const [focusedMarker, setFocusedMarker] = useState(false);\n    const {activeChannel} = useSelector(state => state.channel);\n    const {activeOverlayContent, focusedContent} = useSelector(state => state.content);\n    let visible = (!_isNil(activeOverlayContent) && content.id === activeOverlayContent.id);\n    let focused = (!_isNil(focusedContent) && content.id === focusedContent.id) || focusedMarker;\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const updateActiveContent = (content) => {\n        dispatch(showOverlayContentWithDiff(content));\n        history.push({\n            pathname: buildContentPath(activeChannel, content),\n            search: location.search\n        });\n    };\n    //TODO seperate overlay div.\n    return (\n        <>\n            <Marker\n                onMouseOver={(e) => setFocusedMarker(true)}\n                onMouseOut={(e) => setFocusedMarker(false)}\n                onClick={(marker) => updateActiveContent(content)}\n                options={{lat: content.store.latitude, lng: content.store.longitude, content: content.store.name,\n                    image: {url: MarkerImage, width: 34, height: 42}}}\n            />\n            <CustomOverlay lat={content.store.latitude} lng={content.store.longitude} visible={focused && !visible} options={{offsetY: 44}}>\n                <div>\n                    <div className=\"card has-min-width-200 has-max-width-200 has-border-radius-6 white-space-normal has-cursor-default has-text-centered\" >\n                        <div className=\"card-content has-padding-5\">\n                            {content.store.name}\n                        </div>\n                    </div>\n                </div>\n            </CustomOverlay>\n            <CustomOverlay lat={content.store.latitude} lng={content.store.longitude} visible={visible} options={{offsetY: 54}}>\n                <DesktopOverlay content={content} visible={visible}/>\n            </CustomOverlay>\n        </>\n    )\n};\n\n\nexport default DesktopKakaoMap;"]},"metadata":{},"sourceType":"module"}