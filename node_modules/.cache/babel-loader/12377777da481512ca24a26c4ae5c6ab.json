{"ast":null,"code":"var _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/video/DesktopChannelNav.jsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MarkerArrowSm from \"assets/images/marker_arrow_sm.svg\";\nimport OverlayFontAwesomeIcon from \"components/common/icon/OverlayFontAwesomeIcon\";\nimport { faArrowRight, faMinus } from \"@fortawesome/free-solid-svg-icons\";\nimport { SIDEBAR_EXPAND } from \"assets/styles/colors\";\nimport { buildChannelPath } from \"data/util\";\nimport { useHistory, useParams } from \"react-router\";\nimport { resetMapBounds, setMapLevel } from \"data/redux/action/map\";\nimport { isNil as _isNil } from 'lodash';\nimport { initMapLevel } from \"data/redux/reducers/mapReducer\";\n\nconst DesktopChannelNav = ({\n  onClickExpand,\n  expanded\n}) => {\n  const _useSelector = useSelector(state => state.channel),\n        channelList = _useSelector.channelList;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"is-flex has-margin-bottom-15 \" + (expanded ? \"  justify-space-between\" : \"\"),\n    onClick: onClickExpand,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, expanded ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"align-self-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"\\uCC44\\uB110 \\uBAA9\\uB85D\"), React.createElement(\"figure\", {\n    className: \"has-padding-5 clickable clickable-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(OverlayFontAwesomeIcon, {\n    active: true,\n    reverse: true,\n    icon: faArrowRight,\n    transform: \"grow-8 right-5 rotate-180\",\n    className: \"\",\n    color: SIDEBAR_EXPAND,\n    overlayIcon: faMinus,\n    overlayTransform: \"rotate-90 grow-8 left-10\",\n    overlayClassName: \"\",\n    overlayColor: SIDEBAR_EXPAND,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))) : React.createElement(\"figure\", {\n    className: \"has-padding-5 clickable clickable-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(OverlayFontAwesomeIcon, {\n    active: true,\n    reverse: true,\n    icon: faArrowRight,\n    transform: \"grow-8 right-5\",\n    className: \"\",\n    color: SIDEBAR_EXPAND,\n    overlayIcon: faMinus,\n    overlayTransform: \"rotate-90 grow-8 left-10\",\n    overlayClassName: \"\",\n    overlayColor: SIDEBAR_EXPAND,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))), React.createElement(SideBarChannel, {\n    channel: null,\n    expanded: expanded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), channelList.map(channel => React.createElement(SideBarChannel, {\n    key: channel.id,\n    channel: channel,\n    expanded: expanded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n};\n\nconst SideBarChannel = ({\n  channel,\n  expanded\n}) => {\n  const _useParams = useParams(),\n        channelId = _useParams.channelId;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const _useSelector2 = useSelector(state => state.channel),\n        channelLoading = _useSelector2.channelLoading;\n\n  const onClickChannel = () => {\n    if (channelLoading) {\n      return;\n    }\n\n    if (!_isNil(channel) && channelId == channel.id) {\n      return;\n    }\n\n    dispatch(resetMapBounds());\n    dispatch(setMapLevel(initMapLevel));\n    history.push(buildChannelPath(channel));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"has-margin-bottom-10\",\n    onClick: onClickChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, expanded ? React.createElement(\"div\", {\n    className: \"is-flex has-padding-5 clickable clickable-background justify-flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"image has-margin-right-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"image box is-paddingless has-margin-auto has-min-height-32 has-min-width-32 is-32x32 is-rounded\",\n    src: channel ? channel.profileImg : MarkerArrowSm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"align-self-center text-overflow-ellipsis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, channel ? channel.youtubeName : \"전체 채널\")) : React.createElement(\"figure\", {\n    className: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"image box is-paddingless clickable has-margin-auto has-min-height-32 has-min-width-32 is-32x32 is-rounded\",\n    src: channel ? channel.profileImg : MarkerArrowSm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n};\n\nexport default DesktopChannelNav;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/video/DesktopChannelNav.jsx"],"names":["React","useDispatch","useSelector","OverlayFontAwesomeIcon","faArrowRight","faMinus","SIDEBAR_EXPAND","buildChannelPath","useHistory","useParams","resetMapBounds","setMapLevel","isNil","_isNil","initMapLevel","DesktopChannelNav","onClickExpand","expanded","state","channel","channelList","map","id","SideBarChannel","channelId","dispatch","history","channelLoading","onClickChannel","push","profileImg","MarkerArrowSm","youtubeName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport MarkerArrowSm from \"assets/images/marker_arrow_sm.svg\";\nimport OverlayFontAwesomeIcon from \"components/common/icon/OverlayFontAwesomeIcon\";\nimport {faArrowRight, faMinus} from \"@fortawesome/free-solid-svg-icons\";\nimport {SIDEBAR_EXPAND} from \"assets/styles/colors\";\nimport {buildChannelPath} from \"data/util\";\nimport {useHistory, useParams} from \"react-router\";\nimport {resetMapBounds, setMapLevel} from \"data/redux/action/map\";\nimport {isNil as _isNil} from 'lodash';\nimport {initMapLevel} from \"data/redux/reducers/mapReducer\";\n\nconst DesktopChannelNav = ({onClickExpand, expanded}) => {\n    const {channelList} = useSelector(state => state.channel)\n    return (\n        <div>\n            <div className={\"is-flex has-margin-bottom-15 \" + (expanded ? \"  justify-space-between\" : \"\")} onClick={onClickExpand}>\n            {expanded\n                ? <>\n                    <span className=\"align-self-center\">채널 목록</span>\n                    <figure className=\"has-padding-5 clickable clickable-background\">\n                        <OverlayFontAwesomeIcon active={true} reverse={true} icon={faArrowRight} transform={\"grow-8 right-5 rotate-180\"} className={\"\"} color={SIDEBAR_EXPAND}\n                                                 overlayIcon={faMinus} overlayTransform={\"rotate-90 grow-8 left-10\"} overlayClassName={\"\"} overlayColor={SIDEBAR_EXPAND}/>\n                    </figure>\n                 </>\n                : <figure className=\"has-padding-5 clickable clickable-background\">\n                    <OverlayFontAwesomeIcon active={true} reverse={true} icon={faArrowRight} transform={\"grow-8 right-5\"} className={\"\"} color={SIDEBAR_EXPAND}\n                                         overlayIcon={faMinus} overlayTransform={\"rotate-90 grow-8 left-10\"} overlayClassName={\"\"} overlayColor={SIDEBAR_EXPAND}/>\n                </figure>\n            }\n            </div>\n            <SideBarChannel channel={null} expanded={expanded} />\n            {channelList.map(channel => <SideBarChannel key={channel.id} channel={channel} expanded={expanded} />)}\n        </div>\n    )\n}\n\nconst SideBarChannel = ({channel, expanded}) => {\n    const {channelId} = useParams();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const {channelLoading} = useSelector(state => state.channel)\n    const onClickChannel = () => {\n        if (channelLoading) {\n            return ;\n        }\n        if (!_isNil(channel) && channelId == channel.id) {\n            return ;\n        }\n\n        dispatch(resetMapBounds());\n        dispatch(setMapLevel(initMapLevel));\n        history.push(buildChannelPath(channel))\n\n    }\n    return (\n        <div className=\"has-margin-bottom-10\" onClick={onClickChannel}>\n            {expanded\n                ? <div className=\"is-flex has-padding-5 clickable clickable-background justify-flex-start\">\n                    <figure className=\"image has-margin-right-10\">\n                        <img className=\"image box is-paddingless has-margin-auto has-min-height-32 has-min-width-32 is-32x32 is-rounded\" src={channel ? channel.profileImg : MarkerArrowSm }/>\n                    </figure>\n                    <span className=\"align-self-center text-overflow-ellipsis\">{channel ? channel.youtubeName : \"전체 채널\"}</span>\n                </div>\n                :\n                <figure className=\"image\">\n                    <img className=\"image box is-paddingless clickable has-margin-auto has-min-height-32 has-min-width-32 is-32x32 is-rounded\" src={channel ? channel.profileImg : MarkerArrowSm}/>\n                </figure>\n            }\n        </div>\n    )\n}\n\n\nexport default DesktopChannelNav;"]},"metadata":{},"sourceType":"module"}