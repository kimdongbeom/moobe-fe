{"ast":null,"code":"var _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/notice/MarkdownViewer.jsx\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport Viewer from '@toast-ui/editor/dist/toastui-editor-viewer';\nexport const MarkdownViewer = ({\n  markdown\n}) => {\n  const callback = useCallback(node => {\n    if (!node) {\n      return;\n    }\n\n    new Viewer({\n      el: node,\n      height: '300px',\n      initialValue: markdown\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: callback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\nexport default MarkdownViewer;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/notice/MarkdownViewer.jsx"],"names":["React","useCallback","useEffect","useState","Viewer","MarkdownViewer","markdown","callback","node","el","height","initialValue"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAO,+BAAP;AACA,OAAO,0CAAP;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC1C,QAAMC,QAAQ,GAAGN,WAAW,CAAEO,IAAD,IAAU;AACnC,QAAI,CAACA,IAAL,EAAW;AACP;AACH;;AACD,QAAIJ,MAAJ,CAAW;AACPK,MAAAA,EAAE,EAAED,IADG;AAEPE,MAAAA,MAAM,EAAE,OAFD;AAGPC,MAAAA,YAAY,EAAEL;AAHP,KAAX;AAKH,GAT2B,EASzB,EATyB,CAA5B;AAWA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAjBM;AAmBP,eAAeF,cAAf","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport Viewer from '@toast-ui/editor/dist/toastui-editor-viewer';\n\nexport const MarkdownViewer = ({markdown}) => {\n    const callback = useCallback((node) => {\n        if (!node) {\n            return ;\n        }\n        new Viewer({\n            el: node,\n            height: '300px',\n            initialValue: markdown,\n        });\n    }, []);\n\n    return (\n        <div>\n            <div ref={callback} />\n        </div>\n    )\n}\n\nexport default MarkdownViewer;"]},"metadata":{},"sourceType":"module"}