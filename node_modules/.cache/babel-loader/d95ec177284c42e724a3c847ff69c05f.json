{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/video/Video.jsx\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { buildContentPath } from \"data/util\";\nimport { toString as _toString } from 'lodash';\nimport { fetchUpdateContentLike, setFocusedContent } from \"data/redux/action/content\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as fasStar } from \"@fortawesome/free-regular-svg-icons\";\nimport { STORE_LIKED } from \"assets/styles/colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { requireUser } from \"data/redux/action/user\";\n\nconst Video = ({\n  content\n}) => {\n  const _useSelector = useSelector(state => state.channel),\n        activeChannel = _useSelector.activeChannel;\n\n  const _useState = useState(content.liked),\n        _useState2 = _slicedToArray(_useState, 2),\n        liked = _useState2[0],\n        setLiked = _useState2[1];\n\n  const history = useHistory();\n\n  const _useParams = useParams(),\n        contentId = _useParams.contentId;\n\n  const dispatch = useDispatch();\n\n  const updateActiveContent = content => {\n    if (contentId !== _toString(content.id)) {\n      history.push({\n        pathname: buildContentPath(activeChannel, content),\n        search: location.search\n      });\n    }\n  };\n\n  const updateLike = e => {\n    let origin = liked;\n    let updated = !liked;\n    dispatch(requireUser(user => {\n      setLiked(updated);\n      dispatch(fetchUpdateContentLike(user.email, content.id, updated, () => setLiked(updated), () => setLiked(origin)));\n    }));\n    e.preventDefault();\n  };\n\n  const updateFocusedContent = content => {\n    dispatch(setFocusedContent(content));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"video media has-padding-top-20 has-padding-bottom-20 is-marginless \",\n    onMouseEnter: () => updateFocusedContent(content),\n    onMouseLeave: () => updateFocusedContent(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"media-left has-margin-right-10\",\n    onClick: () => updateActiveContent(content),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"image is-120x68\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"image thumbnail\",\n    src: content.thumbnailUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"media-content overflow-hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: liked ? faStar : fasStar,\n    className: \"video-like-btn clickable\",\n    color: liked ? STORE_LIKED : \"\",\n    size: '1x',\n    onClick: updateLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content\",\n    onClick: () => updateActiveContent(content),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"is-marginless text-overflow-ellipsis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    className: \"video-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, content.title)), React.createElement(\"p\", {\n    className: \"has-text-right has-text-grey-light is-marginless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    className: \"has-text-weight-semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"2019. 8. 21.\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, content.tagList.map(tag => {\n    return React.createElement(\"span\", {\n      key: tag,\n      className: \"is-size-7 has-text-link has-cursor-pointer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, tag);\n  })))));\n};\n\nexport default Video;","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/desktop/video/Video.jsx"],"names":["React","useState","useDispatch","useSelector","useHistory","useParams","buildContentPath","toString","_toString","fetchUpdateContentLike","setFocusedContent","faStar","fasStar","STORE_LIKED","FontAwesomeIcon","requireUser","Video","content","state","channel","activeChannel","liked","setLiked","history","contentId","dispatch","updateActiveContent","id","push","pathname","search","location","updateLike","e","origin","updated","user","email","preventDefault","updateFocusedContent","thumbnailUrl","title","tagList","map","tag"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHistory, useParams} from \"react-router\";\nimport {buildContentPath} from \"data/util\";\nimport {toString as _toString} from 'lodash';\nimport {fetchUpdateContentLike, setFocusedContent} from \"data/redux/action/content\";\nimport {faStar} from \"@fortawesome/free-solid-svg-icons\";\nimport {faStar as fasStar} from \"@fortawesome/free-regular-svg-icons\";\nimport {STORE_LIKED} from \"assets/styles/colors\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {requireUser} from \"data/redux/action/user\";\n\nconst Video = ({content}) => {\n    const {activeChannel} = useSelector(state => state.channel);\n    const [liked, setLiked] = useState(content.liked);\n    const history = useHistory();\n    const {contentId} = useParams();\n    const dispatch = useDispatch();\n    const updateActiveContent = (content) => {\n        if (contentId !== _toString(content.id)) {\n            history.push({\n                pathname: buildContentPath(activeChannel, content),\n                search: location.search\n            });\n        }\n    };\n\n    const updateLike = (e) => {\n        let origin = liked;\n        let updated = !liked;\n        dispatch(requireUser((user) => {\n            setLiked(updated);\n            dispatch(fetchUpdateContentLike(user.email, content.id, updated,() => setLiked(updated),() => setLiked(origin)));\n        }));\n        e.preventDefault();\n    }\n\n    const updateFocusedContent = (content) => {\n        dispatch(setFocusedContent(content));\n    };\n\n    return (\n        <div className={\"video media has-padding-top-20 has-padding-bottom-20 is-marginless \"}\n             onMouseEnter={() => updateFocusedContent(content)}\n             onMouseLeave={() => updateFocusedContent(null)}>\n            <figure className=\"media-left has-margin-right-10\" onClick={() => updateActiveContent(content)}>\n                <p className=\"image is-120x68\">\n                    <img className=\"image thumbnail\" src={content.thumbnailUrl} />\n                </p>\n            </figure>\n            <div className=\"media-content overflow-hidden\">\n                <FontAwesomeIcon\n                    icon={liked ? faStar : fasStar}\n                    className=\"video-like-btn clickable\"\n                    color={liked ? STORE_LIKED : \"\"}\n                    size={'1x'}\n                    onClick={updateLike} />\n                <div className=\"content\" onClick={() => updateActiveContent(content)}>\n                    <p className=\"is-marginless text-overflow-ellipsis\">\n                        <strong className=\"video-title\">{content.title}</strong>\n                    </p>\n                    <p className=\"has-text-right has-text-grey-light is-marginless\">\n                        <small className=\"has-text-weight-semibold\">2019. 8. 21.</small>\n                    </p>\n                    <p>\n                        {content.tagList.map(tag => {\n                            return <span key={tag} className=\"is-size-7 has-text-link has-cursor-pointer\">{tag}</span>\n                        })}\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n};\nexport default Video;"]},"metadata":{},"sourceType":"module"}