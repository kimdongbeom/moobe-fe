{"ast":null,"code":"import _slicedToArray from \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/comment/Comment.jsx\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen, faThumbsUp as fasTumbsUp, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { COMMENT_LIKED, COMMENT_UNLIKED } from \"assets/styles/colors\";\nimport { useDispatch } from \"react-redux\";\nimport { requireUser } from \"data/redux/action/user\";\nimport { deleteMoobeCommentDeleted, fetchDeleteMoobeComment, fetchUpdateCommentLike, fetchUpdateMoobeComment, updateMoobeCommentUpdated } from \"data/redux/action/comment\";\nimport { CommentTextArea } from \"components/common/comment/CommentInput\";\nimport { isNil as _isNil } from 'lodash';\nimport Moment from \"react-moment\";\nimport { DEFAULT_IMAGE } from \"assets/styles/const\";\n\nconst Comment = ({\n  comment,\n  user,\n  isMoobe,\n  isRawHtml\n}) => {\n  const _useState = useState(_isNil(user) ? false : comment.email === user.email),\n        _useState2 = _slicedToArray(_useState, 2),\n        isEditable = _useState2[0],\n        setIsEditable = _useState2[1];\n\n  const _useState3 = useState(isMoobe ? comment.liked : false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        liked = _useState4[0],\n        setLiked = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        edit = _useState6[0],\n        setEdit = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        showMore = _useState8[0],\n        setShowMore = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        isOverflow = _useState10[0],\n        setIsOverflow = _useState10[1];\n\n  const _useState11 = useState(comment.likeCount),\n        _useState12 = _slicedToArray(_useState11, 2),\n        likeCount = _useState12[0],\n        setLikeCount = _useState12[1];\n\n  const _useState13 = useState(comment.comment),\n        _useState14 = _slicedToArray(_useState13, 2),\n        commentValue = _useState14[0],\n        setCommentValue = _useState14[1];\n\n  const dispatch = useDispatch();\n  const updateOverflow = useCallback(node => {\n    if (node) {\n      let commentContent = node.getElementsByClassName(\"comment\"); //TODO fix ios safari client height is 0\n\n      setIsOverflow(commentContent[0].clientHeight > 100);\n    }\n  }, []);\n\n  const updateLike = () => {\n    let originLike = liked;\n    let updateLike = !liked;\n    let originLikeCount = likeCount;\n    let updateLikeCount = updateLike ? likeCount + 1 : likeCount - 1;\n    dispatch(requireUser(user => {\n      setLiked(updateLike);\n      setLikeCount(updateLikeCount);\n      dispatch(fetchUpdateCommentLike(user.email, comment.id, comment.contentsId, updateLike, () => {\n        dispatch(updateMoobeCommentUpdated(comment, {\n          liked: updateLike,\n          likeCount: updateLikeCount\n        }));\n      }, () => {\n        setLiked(originLike);\n        setLikeCount(originLikeCount);\n      }));\n    }));\n  };\n\n  const updateComment = value => {\n    if (isEditable) {\n      dispatch(requireUser(user => {\n        dispatch(fetchUpdateMoobeComment(user.email, comment.id, value, () => {\n          dispatch(updateMoobeCommentUpdated(comment, {\n            comment: value\n          }));\n          setEdit(false);\n        }, () => {\n          alert(\"댓글 수정에 실패했습니다. 잠시 후 다시 시도해 주세요.\");\n          setEdit(false);\n        }));\n      }));\n    }\n  };\n\n  const deleteComment = () => {\n    if (isEditable && confirm(\"댓글을 삭제 하시겠습니까?\")) {\n      dispatch(requireUser(user => {\n        dispatch(fetchDeleteMoobeComment(user.email, comment.id, () => {\n          dispatch(deleteMoobeCommentDeleted(comment));\n        }, () => {\n          alert(\"댓글 삭제에 실패했습니다. 잠시 후 다시 시도해 주세요.\");\n        }));\n      }));\n    }\n  };\n\n  const onChangeCommentInput = e => {\n    if (edit) {\n      setCommentValue(e.target.value);\n    }\n  };\n\n  const onCancelCommentInput = e => {\n    setEdit(false);\n    setCommentValue(comment.comment);\n  };\n\n  const renderEditableComment = () => {\n    return edit ? React.createElement(CommentTextArea, {\n      className: \"textarea has-fixed-size overflow-hidden is-top-borderless is-left-borderless is-right-borderless is-shadowless is-radiusless has-padding-5\",\n      inputValue: commentValue,\n      onSubmit: updateComment,\n      onChange: onChangeCommentInput,\n      onCancel: onCancelCommentInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, comment.comment.split('\\n').map((line, idx) => {\n      return React.createElement(\"span\", {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, line, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }));\n  };\n\n  const renderComment = () => {\n    return isRawHtml ? React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: comment.comment\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, comment.comment.split('\\n').map((line, idx) => {\n      return React.createElement(\"span\", {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, line, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }));\n    }));\n  };\n\n  const renderActionButton = () => {\n    return React.createElement(React.Fragment, null, React.createElement(FontAwesomeIcon, {\n      className: \"clickable is-marginless has-text-weight-semibold \" + (edit ? \" has-text-info\" : \"has-text-grey-light \"),\n      icon: faPen,\n      size: \"2x\",\n      transform: \"shrink-9\",\n      onClick: e => setEdit(!edit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      className: \"clickable is-marginless has-text-grey-light has-text-weight-semibold\",\n      icon: faTrashAlt,\n      size: \"2x\",\n      transform: \"shrink-9\",\n      onClick: deleteComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  };\n\n  const getCommentContainerClassName = () => {\n    return !isOverflow ? \"is-block\" : showMore ? \"is-block\" : \"is-block has-height-96 overflow-hidden\";\n  };\n\n  const renderShowMoreButton = () => {\n    return showMore ? React.createElement(\"span\", {\n      className: \"comment-show-more-btn has-margin-top-5 has-cursor-pointer\",\n      onClick: e => setShowMore(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"\\uAC04\\uB7B5\\uD788\") : React.createElement(\"span\", {\n      className: \"has-margin-top-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"...\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"comment-show-more-btn has-cursor-pointer\",\n      onClick: e => setShowMore(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"\\uC790\\uC138\\uD788 \\uBCF4\\uAE30\"));\n  };\n\n  return React.createElement(\"div\", {\n    ref: updateOverflow,\n    className: \"card is-shadowless\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-content is-paddingless has-padding-15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"media-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"image is-48x48\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"is-rounded\",\n    src: comment.profileImage ? comment.profileImage : DEFAULT_IMAGE,\n    alt: \"Placeholder image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"media-content overflow-visible\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row has-margin-bottom-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, comment.user), React.createElement(\"small\", {\n    className: \"has-padding-left-5 has-text-grey-light has-tooltip-arrow has-tooltip-info has-cursor-default has-text-weight-semibold\",\n    \"data-tooltip\": comment.registerDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    fromNow: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, comment.registerDate)), React.createElement(\"span\", {\n    className: \"is-pulled-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, isEditable ? renderActionButton() : null)), React.createElement(\"div\", {\n    className: getCommentContainerClassName(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, isEditable ? renderEditableComment() : renderComment())), isOverflow ? renderShowMoreButton() : null, React.createElement(\"div\", {\n    className: \"row has-margin-top-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: fasTumbsUp,\n    className: isMoobe ? \"has-cursor-pointer\" : \"\",\n    color: liked ? COMMENT_LIKED : COMMENT_UNLIKED,\n    onClick: isMoobe ? updateLike : () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), \" \", React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, likeCount))))));\n};\n\nexport default React.memo(Comment);","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/components/common/comment/Comment.jsx"],"names":["FontAwesomeIcon","faPen","faThumbsUp","fasTumbsUp","faTrashAlt","React","useCallback","useEffect","useState","COMMENT_LIKED","COMMENT_UNLIKED","useDispatch","requireUser","deleteMoobeCommentDeleted","fetchDeleteMoobeComment","fetchUpdateCommentLike","fetchUpdateMoobeComment","updateMoobeCommentUpdated","CommentTextArea","isNil","_isNil","Moment","DEFAULT_IMAGE","Comment","comment","user","isMoobe","isRawHtml","email","isEditable","setIsEditable","liked","setLiked","edit","setEdit","showMore","setShowMore","isOverflow","setIsOverflow","likeCount","setLikeCount","commentValue","setCommentValue","dispatch","updateOverflow","node","commentContent","getElementsByClassName","clientHeight","updateLike","originLike","originLikeCount","updateLikeCount","id","contentsId","updateComment","value","alert","deleteComment","confirm","onChangeCommentInput","e","target","onCancelCommentInput","renderEditableComment","split","map","line","idx","renderComment","__html","renderActionButton","getCommentContainerClassName","renderShowMoreButton","profileImage","registerDate","memo"],"mappings":"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","sourcesContent":["import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPen, faThumbsUp as fasTumbsUp, faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {COMMENT_LIKED, COMMENT_UNLIKED} from \"assets/styles/colors\";\nimport {useDispatch} from \"react-redux\";\nimport {requireUser} from \"data/redux/action/user\";\nimport {\n    deleteMoobeCommentDeleted,\n    fetchDeleteMoobeComment,\n    fetchUpdateCommentLike,\n    fetchUpdateMoobeComment,\n    updateMoobeCommentUpdated\n} from \"data/redux/action/comment\";\nimport {CommentTextArea} from \"components/common/comment/CommentInput\";\nimport {isNil as _isNil} from 'lodash'\nimport Moment from \"react-moment\";\nimport {DEFAULT_IMAGE} from \"assets/styles/const\";\n\n\nconst Comment = ({comment, user, isMoobe, isRawHtml}) => {\n    const [isEditable, setIsEditable] = useState(_isNil(user) ? false : comment.email === user.email);\n    const [liked, setLiked] = useState(isMoobe ? comment.liked : false);\n    const [edit, setEdit] = useState(false);\n    const [showMore, setShowMore] = useState(false);\n    const [isOverflow, setIsOverflow] = useState(false);\n    const [likeCount, setLikeCount] = useState(comment.likeCount);\n    const [commentValue, setCommentValue] = useState(comment.comment);\n    const dispatch = useDispatch();\n\n    const updateOverflow = useCallback(node => {\n        if (node) {\n            let commentContent = node.getElementsByClassName(\"comment\");\n            //TODO fix ios safari client height is 0\n            setIsOverflow(commentContent[0].clientHeight > 100);\n        }\n    }, []);\n\n    const updateLike = () => {\n        let originLike = liked;\n        let updateLike = !liked;\n        let originLikeCount = likeCount;\n        let updateLikeCount = updateLike ? likeCount + 1 : likeCount - 1;\n        dispatch(requireUser((user) => {\n            setLiked(updateLike);\n            setLikeCount(updateLikeCount);\n            dispatch(fetchUpdateCommentLike(user.email, comment.id, comment.contentsId, updateLike, () => {\n                dispatch(updateMoobeCommentUpdated(comment, {liked: updateLike, likeCount: updateLikeCount}))\n            }, () => {\n                setLiked(originLike);\n                setLikeCount(originLikeCount);\n            }))\n        }))\n    }\n\n    const updateComment = (value) => {\n        if (isEditable) {\n            dispatch(requireUser((user) => {\n                dispatch(fetchUpdateMoobeComment(user.email, comment.id, value, () => {\n                    dispatch(updateMoobeCommentUpdated(comment, {comment: value}))\n                    setEdit(false);\n                }, () => {\n                    alert(\"댓글 수정에 실패했습니다. 잠시 후 다시 시도해 주세요.\");\n                    setEdit(false);\n                }))\n            }))\n        }\n    }\n\n    const deleteComment = () => {\n        if (isEditable && confirm(\"댓글을 삭제 하시겠습니까?\")) {\n            dispatch(requireUser((user) => {\n                dispatch(fetchDeleteMoobeComment(user.email, comment.id, () => {\n                    dispatch(deleteMoobeCommentDeleted(comment))\n                }, () => {\n                    alert(\"댓글 삭제에 실패했습니다. 잠시 후 다시 시도해 주세요.\");\n                }))\n            }))\n        }\n    }\n\n    const onChangeCommentInput = (e) => {\n        if (edit) {\n            setCommentValue(e.target.value);\n        }\n    }\n\n    const onCancelCommentInput = (e) => {\n        setEdit(false);\n        setCommentValue(comment.comment);\n    }\n\n    const renderEditableComment = () => {\n        return edit\n        ? <CommentTextArea className=\"textarea has-fixed-size overflow-hidden is-top-borderless is-left-borderless is-right-borderless is-shadowless is-radiusless has-padding-5\"\n                           inputValue={commentValue}\n                           onSubmit={updateComment}\n                           onChange={onChangeCommentInput}\n                           onCancel={onCancelCommentInput}/>\n        : <div className=\"row\">{comment.comment.split('\\n').map( (line, idx) => {\n                return (<span key={idx}>{line}<br/></span>)\n            })}</div>\n    }\n\n    const renderComment = () => {\n        return isRawHtml\n        ? <div dangerouslySetInnerHTML={{__html: comment.comment}}/>\n        : <div className=\"row\">{comment.comment.split('\\n').map( (line, idx) => {\n                return (<span key={idx}>{line}<br/></span>)\n            })}</div>\n    }\n\n    const renderActionButton = () => {\n        return (\n            <>\n                <FontAwesomeIcon className={\"clickable is-marginless has-text-weight-semibold \" + (edit ? \" has-text-info\" : \"has-text-grey-light \")}\n                                 icon={faPen}\n                                 size={\"2x\"}\n                                 transform={\"shrink-9\"}\n                                 onClick={(e) => setEdit(!edit)} />\n                <FontAwesomeIcon className=\"clickable is-marginless has-text-grey-light has-text-weight-semibold\"\n                                 icon={faTrashAlt}\n                                 size={\"2x\"}\n                                 transform={\"shrink-9\"}\n                                 onClick={deleteComment}/>\n\n            </>\n        )\n    }\n\n    const getCommentContainerClassName = () => {\n        return !isOverflow\n        ? \"is-block\"\n        : showMore\n            ? \"is-block\"\n            : \"is-block has-height-96 overflow-hidden\"\n\n    }\n    const renderShowMoreButton = () => {\n        return showMore\n        ? <span className=\"comment-show-more-btn has-margin-top-5 has-cursor-pointer\" onClick={(e) => setShowMore(false)}>간략히</span>\n        : <span className=\"has-margin-top-5\">\n                ...<br/>\n                <span className=\"comment-show-more-btn has-cursor-pointer\" onClick={(e) => setShowMore(true)}>자세히 보기</span>\n        </span>\n    }\n\n\n    return (\n        <div ref={updateOverflow} className=\"card is-shadowless\">\n            <div className=\"card-content is-paddingless has-padding-15\">\n                <div className=\"media\">\n                    <div className=\"media-left\">\n                        <figure className=\"image is-48x48\">\n                            <img className=\"is-rounded\" src={comment.profileImage ? comment.profileImage : DEFAULT_IMAGE} alt=\"Placeholder image\" />\n                        </figure>\n                    </div>\n                    <div className=\"media-content overflow-visible\">\n                        <div className=\"row has-margin-bottom-5\">\n                            <span>{comment.user}</span>\n                            <small className=\"has-padding-left-5 has-text-grey-light has-tooltip-arrow has-tooltip-info has-cursor-default has-text-weight-semibold\" data-tooltip={comment.registerDate}>\n                                <Moment fromNow>{comment.registerDate}</Moment>\n                            </small>\n                            <span className=\"is-pulled-right\">\n                                {isEditable ? renderActionButton() : null}\n                            </span>\n\n                        </div>\n                        <div className={getCommentContainerClassName()}>\n                            <div className=\"comment\">\n                                {isEditable ? renderEditableComment() : renderComment()}\n                            </div>\n                        </div>\n                        {isOverflow ? renderShowMoreButton() : null}\n                        <div className=\"row has-margin-top-5\">\n                                <FontAwesomeIcon icon={fasTumbsUp}\n                                                 className={isMoobe ? \"has-cursor-pointer\" : \"\"}\n                                                 color={liked ? COMMENT_LIKED : COMMENT_UNLIKED}\n                                                 onClick={isMoobe ? updateLike : () => {}}\n                                /> <small>{likeCount}</small>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(Comment);"]},"metadata":{},"sourceType":"module"}