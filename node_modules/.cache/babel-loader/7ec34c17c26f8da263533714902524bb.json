{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash.debounce');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _autoprefix = require('./autoprefix');\n\nvar _autoprefix2 = _interopRequireDefault(_autoprefix);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction autoprefixes(styles) {\n  return Object.keys(styles).reduce(function (obj, key) {\n    return obj[key] = (0, _autoprefix2.default)(styles[key]), obj;\n  }, {});\n}\n\nvar styles = autoprefixes({\n  wrapper: {\n    position: 'fixed',\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0\n  },\n  dim: {\n    position: 'fixed',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    zIndex: 0,\n    background: 'rgba(0, 0, 0, 0.2)',\n    opacity: 1\n  },\n  dimAppear: {\n    opacity: 0\n  },\n  dimTransparent: {\n    pointerEvents: 'none'\n  },\n  dimHidden: {\n    opacity: 0\n  },\n  dock: {\n    position: 'fixed',\n    zIndex: 1,\n    boxShadow: '0 0 4px rgba(0, 0, 0, 0.3)',\n    background: 'white',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%'\n  },\n  dockHidden: {\n    opacity: 0\n  },\n  dockResizing: {\n    transition: 'none'\n  },\n  dockContent: {\n    width: '100%',\n    height: '100%',\n    overflow: 'auto'\n  },\n  resizer: {\n    position: 'absolute',\n    zIndex: 2,\n    opacity: 0\n  }\n});\n\nfunction getTransitions(duration) {\n  return ['left', 'top', 'width', 'height'].map(function (p) {\n    return p + ' ' + duration / 1000 + 's ease-out';\n  });\n}\n\nfunction getDockStyles(_ref, _ref2) {\n  var fluid = _ref.fluid;\n  var dockStyle = _ref.dockStyle;\n  var dockHiddenStyle = _ref.dockHiddenStyle;\n  var duration = _ref.duration;\n  var position = _ref.position;\n  var isVisible = _ref.isVisible;\n  var size = _ref2.size;\n  var isResizing = _ref2.isResizing;\n  var fullWidth = _ref2.fullWidth;\n  var fullHeight = _ref2.fullHeight;\n  var posStyle = void 0;\n  var absSize = fluid ? size * 100 + '%' : size + 'px';\n\n  function getRestSize(fullSize) {\n    return fluid ? 100 - size * 100 + '%' : fullSize - size + 'px';\n  }\n\n  switch (position) {\n    case 'left':\n      posStyle = {\n        width: absSize,\n        left: isVisible ? 0 : '-' + absSize\n      };\n      break;\n\n    case 'right':\n      posStyle = {\n        left: isVisible ? getRestSize(fullWidth) : fullWidth,\n        width: absSize\n      };\n      break;\n\n    case 'top':\n      posStyle = {\n        top: isVisible ? 0 : '-' + absSize,\n        height: absSize\n      };\n      break;\n\n    case 'bottom':\n      posStyle = {\n        top: isVisible ? getRestSize(fullHeight) : fullHeight,\n        height: absSize\n      };\n      break;\n  }\n\n  var transitions = getTransitions(duration);\n  return [styles.dock, (0, _autoprefix2.default)({\n    transition: [].concat(_toConsumableArray(transitions), [!isVisible && 'opacity 0.01s linear ' + duration / 1000 + 's']).filter(function (t) {\n      return t;\n    }).join(',')\n  }), dockStyle, (0, _autoprefix2.default)(posStyle), isResizing && styles.dockResizing, !isVisible && styles.dockHidden, !isVisible && dockHiddenStyle];\n}\n\nfunction getDimStyles(_ref3, _ref4) {\n  var dimMode = _ref3.dimMode;\n  var dimStyle = _ref3.dimStyle;\n  var duration = _ref3.duration;\n  var isVisible = _ref3.isVisible;\n  var isTransitionStarted = _ref4.isTransitionStarted;\n  return [styles.dim, (0, _autoprefix2.default)({\n    transition: 'opacity ' + duration / 1000 + 's ease-out'\n  }), dimStyle, dimMode === 'transparent' && styles.dimTransparent, !isVisible && styles.dimHidden, isTransitionStarted && isVisible && styles.dimAppear, isTransitionStarted && !isVisible && styles.dimDisappear];\n}\n\nfunction getResizerStyles(position) {\n  var resizerStyle = void 0;\n  var size = 10;\n\n  switch (position) {\n    case 'left':\n      resizerStyle = {\n        right: -size / 2,\n        width: size,\n        top: 0,\n        height: '100%',\n        cursor: 'col-resize'\n      };\n      break;\n\n    case 'right':\n      resizerStyle = {\n        left: -size / 2,\n        width: size,\n        top: 0,\n        height: '100%',\n        cursor: 'col-resize'\n      };\n      break;\n\n    case 'top':\n      resizerStyle = {\n        bottom: -size / 2,\n        height: size,\n        left: 0,\n        width: '100%',\n        cursor: 'row-resize'\n      };\n      break;\n\n    case 'bottom':\n      resizerStyle = {\n        top: -size / 2,\n        height: size,\n        left: 0,\n        width: '100%',\n        cursor: 'row-resize'\n      };\n      break;\n  }\n\n  return [styles.resizer, (0, _autoprefix2.default)(resizerStyle)];\n}\n\nfunction getFullSize(position, fullWidth, fullHeight) {\n  return position === 'left' || position === 'right' ? fullWidth : fullHeight;\n}\n\nvar Dock = (_temp = _class = function (_Component) {\n  _inherits(Dock, _Component);\n\n  function Dock(props) {\n    _classCallCheck(this, Dock);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Dock).call(this, props));\n\n    _this.transitionEnd = function () {\n      _this.setState({\n        isTransitionStarted: false\n      });\n    };\n\n    _this.hideDim = function () {\n      if (!_this.props.isVisible) {\n        _this.setState({\n          isDimHidden: true\n        });\n      }\n    };\n\n    _this.handleDimClick = function () {\n      if (_this.props.dimMode === 'opaque') {\n        _this.props.onVisibleChange && _this.props.onVisibleChange(false);\n      }\n    };\n\n    _this.handleResize = function () {\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(_this.updateWindowSize.bind(_this, true));\n      } else {\n        _this.updateWindowSize(true);\n      }\n    };\n\n    _this.updateWindowSize = function (windowResize) {\n      var sizeState = {\n        fullWidth: window.innerWidth,\n        fullHeight: window.innerHeight\n      };\n\n      if (windowResize) {\n        _this.setState(_extends({}, sizeState, {\n          isResizing: true,\n          isWindowResizing: windowResize\n        }));\n\n        _this.debouncedUpdateWindowSizeEnd();\n      } else {\n        _this.setState(sizeState);\n      }\n    };\n\n    _this.updateWindowSizeEnd = function () {\n      _this.setState({\n        isResizing: false,\n        isWindowResizing: false\n      });\n    };\n\n    _this.debouncedUpdateWindowSizeEnd = (0, _lodash2.default)(_this.updateWindowSizeEnd, 30);\n\n    _this.handleWrapperLeave = function () {\n      _this.setState({\n        isResizing: false\n      });\n    };\n\n    _this.handleMouseDown = function () {\n      _this.setState({\n        isResizing: true\n      });\n    };\n\n    _this.handleMouseUp = function () {\n      _this.setState({\n        isResizing: false\n      });\n    };\n\n    _this.handleMouseMove = function (e) {\n      if (!_this.state.isResizing || _this.state.isWindowResizing) return;\n      e.preventDefault();\n      var _this$props = _this.props;\n      var position = _this$props.position;\n      var fluid = _this$props.fluid;\n      var _this$state = _this.state;\n      var fullWidth = _this$state.fullWidth;\n      var fullHeight = _this$state.fullHeight;\n      var isControlled = _this$state.isControlled;\n      var x = e.clientX;\n      var y = e.clientY;\n      var size = void 0;\n\n      switch (position) {\n        case 'left':\n          size = fluid ? x / fullWidth : x;\n          break;\n\n        case 'right':\n          size = fluid ? (fullWidth - x) / fullWidth : fullWidth - x;\n          break;\n\n        case 'top':\n          size = fluid ? y / fullHeight : y;\n          break;\n\n        case 'bottom':\n          size = fluid ? (fullHeight - y) / fullHeight : fullHeight - y;\n          break;\n      }\n\n      _this.props.onSizeChange && _this.props.onSizeChange(size);\n\n      if (!isControlled) {\n        _this.setState({\n          size: size\n        });\n      }\n    };\n\n    _this.state = {\n      isControlled: typeof props.size !== 'undefined',\n      size: props.size || props.defaultSize,\n      isDimHidden: !props.isVisible,\n      fullWidth: typeof window !== 'undefined' && window.innerWidth,\n      fullHeight: typeof window !== 'undefined' && window.innerHeight,\n      isTransitionStarted: false,\n      isWindowResizing: false\n    };\n    return _this;\n  }\n\n  _createClass(Dock, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      window.addEventListener('mouseup', this.handleMouseUp);\n      window.addEventListener('mousemove', this.handleMouseMove);\n      window.addEventListener('resize', this.handleResize);\n\n      if (!window.fullWidth) {\n        this.updateWindowSize();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('mouseup', this.handleMouseUp);\n      window.removeEventListener('mousemove', this.handleMouseMove);\n      window.removeEventListener('resize', this.handleResize);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var isControlled = typeof nextProps.size !== 'undefined';\n      this.setState({\n        isControlled: isControlled\n      });\n\n      if (isControlled && this.props.size !== nextProps.size) {\n        this.setState({\n          size: nextProps.size\n        });\n      } else if (this.props.fluid !== nextProps.fluid) {\n        this.updateSize(nextProps);\n      }\n\n      if (this.props.isVisible !== nextProps.isVisible) {\n        this.setState({\n          isTransitionStarted: true\n        });\n      }\n    }\n  }, {\n    key: 'updateSize',\n    value: function updateSize(props) {\n      var _state = this.state;\n      var fullWidth = _state.fullWidth;\n      var fullHeight = _state.fullHeight;\n      this.setState({\n        size: props.fluid ? this.state.size / getFullSize(props.position, fullWidth, fullHeight) : getFullSize(props.position, fullWidth, fullHeight) * this.state.size\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (this.props.isVisible !== prevProps.isVisible) {\n        if (!this.props.isVisible) {\n          window.setTimeout(function () {\n            return _this2.hideDim();\n          }, this.props.duration);\n        } else {\n          this.setState({\n            isDimHidden: false\n          });\n        }\n\n        window.setTimeout(function () {\n          return _this2.setState({\n            isTransitionStarted: false\n          });\n        }, 0);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props;\n      var children = _props.children;\n      var zIndex = _props.zIndex;\n      var dimMode = _props.dimMode;\n      var position = _props.position;\n      var isVisible = _props.isVisible;\n      var _state2 = this.state;\n      var isResizing = _state2.isResizing;\n      var size = _state2.size;\n      var isDimHidden = _state2.isDimHidden;\n      var dimStyles = Object.assign.apply(Object, [{}].concat(_toConsumableArray(getDimStyles(this.props, this.state))));\n      var dockStyles = Object.assign.apply(Object, [{}].concat(_toConsumableArray(getDockStyles(this.props, this.state))));\n      var resizerStyles = Object.assign.apply(Object, [{}].concat(_toConsumableArray(getResizerStyles(position))));\n      return _react2.default.createElement('div', {\n        style: Object.assign({}, styles.wrapper, {\n          zIndex: zIndex\n        })\n      }, dimMode !== 'none' && !isDimHidden && _react2.default.createElement('div', {\n        style: dimStyles,\n        onClick: this.handleDimClick\n      }), _react2.default.createElement('div', {\n        style: dockStyles\n      }, _react2.default.createElement('div', {\n        style: resizerStyles,\n        onMouseDown: this.handleMouseDown\n      }), _react2.default.createElement('div', {\n        style: styles.dockContent\n      }, typeof children === 'function' ? children({\n        position: position,\n        isResizing: isResizing,\n        size: size,\n        isVisible: isVisible\n      }) : children)));\n    }\n  }]);\n\n  return Dock;\n}(_react.Component), _class.propTypes = {\n  position: _propTypes2.default.oneOf(['left', 'right', 'top', 'bottom']),\n  zIndex: _propTypes2.default.number,\n  fluid: _propTypes2.default.bool,\n  size: _propTypes2.default.number,\n  defaultSize: _propTypes2.default.number,\n  dimMode: _propTypes2.default.oneOf(['none', 'transparent', 'opaque']),\n  isVisible: _propTypes2.default.bool,\n  onVisibleChange: _propTypes2.default.func,\n  onSizeChange: _propTypes2.default.func,\n  dimStyle: _propTypes2.default.object,\n  dockStyle: _propTypes2.default.object,\n  duration: _propTypes2.default.number\n}, _class.defaultProps = {\n  position: 'left',\n  zIndex: 99999999,\n  fluid: true,\n  defaultSize: 0.3,\n  dimMode: 'opaque',\n  duration: 200\n}, _temp);\nexports.default = Dock;","map":null,"metadata":{},"sourceType":"script"}