{"ast":null,"code":"import { deleteComment, getContents, getMoobeComment, getYoutubeComment, insertComment, updateComment, updateCommentLike } from \"data/api\";\nimport ApiResponse from \"data/redux/model/ApiResponse\";\nimport Comment from \"data/redux/model/Comment\";\nexport const COMMENT_RESET_COMMENT = 'COMMENT/RESET_COMMENT';\nexport const COMMENT_ADD_MOOBE_COMMENT_FIRST = 'COMMENT/ADD_MOOBE_COMMENT_FIRST';\nexport const COMMENT_UPDATE_MOOBE_COMMENT_UPDATED = 'COMMENT/UPDATE_MOOBE_COMMENT_UPDATED';\nexport const COMMENT_DELETE_MOOBE_COMMENT_DELETED = 'COMMENT/DELETE_MOOBE_COMMENT_DELETED';\nexport const COMMENT_FETCH_MOOBE_STARTED = 'COMMENT/FETCH_MOOBE_STARTED';\nexport const COMMENT_FETCH_MOOBE_FINISHED = 'COMMENT/FETCH_MOOBE_FINISHED';\nexport const COMMENT_FETCH_MOOBE_SUCCESS = 'COMMENT/FETCH_MOOBE_SUCCESS';\nexport const COMMENT_FETCH_MOOBE_FAIL = 'COMMENT/FETCH_MOOBE_FAIL';\nexport const COMMENT_FETCH_YOUTUBE_STARTED = 'COMMENT/FETCH_YOUTUBE_STARTED';\nexport const COMMENT_FETCH_YOUTUBE_FINISHED = 'COMMENT/FETCH_YOUTUBE_FINISHED';\nexport const COMMENT_FETCH_YOUTUBE_SUCCESS = 'COMMENT/FETCH_YOUTUBE_SUCCESS';\nexport const COMMENT_FETCH_YOUTUBE_FAIL = 'COMMENT/FETCH_YOUTUBE_FAIL';\nexport const COMMENT_FETCH_COMMENT_LIKE_STARTED = 'COMMENT/FETCH_COMMENT_LIKE_STARTED';\nexport const COMMENT_FETCH_COMMENT_LIKE_FINISHED = 'COMMENT/FETCH_COMMENT_LIKE_FINISHED';\nexport const COMMENT_FETCH_COMMENT_LIKE_SUCCESS = 'COMMENT/FETCH_COMMENT_LIKE_SUCCESS';\nexport const COMMENT_FETCH_COMMENT_LIKE_FAIL = 'COMMENT/FETCH_COMMENT_LIKE_FAIL';\nexport const COMMENT_FETCH_COMMENT_INSERT_STARTED = 'COMMENT/FETCH_COMMENT_INSERT_STARTED';\nexport const COMMENT_FETCH_COMMENT_INSERT_FINISHED = 'COMMENT/FETCH_COMMENT_INSERT_FINISHED';\nexport const COMMENT_FETCH_COMMENT_INSERT_SUCCESS = 'COMMENT/FETCH_COMMENT_INSERT_SUCCESS';\nexport const COMMENT_FETCH_COMMENT_INSERT_FAIL = 'COMMENT/FETCH_COMMENT_INSERT_FAIL';\nexport const COMMENT_FETCH_COMMENT_UPDATE_STARTED = 'COMMENT/FETCH_COMMENT_UPDATE_STARTED';\nexport const COMMENT_FETCH_COMMENT_UPDATE_FINISHED = 'COMMENT/FETCH_COMMENT_UPDATE_FINISHED';\nexport const COMMENT_FETCH_COMMENT_UPDATE_SUCCESS = 'COMMENT/FETCH_COMMENT_UPDATE_SUCCESS';\nexport const COMMENT_FETCH_COMMENT_UPDATE_FAIL = 'COMMENT/FETCH_COMMENT_UPDATE_FAIL';\nexport const COMMENT_FETCH_COMMENT_DELETE_STARTED = 'COMMENT/FETCH_COMMENT_DELETE_STARTED';\nexport const COMMENT_FETCH_COMMENT_DELETE_FINISHED = 'COMMENT/FETCH_COMMENT_DELETE_FINISHED';\nexport const COMMENT_FETCH_COMMENT_DELETE_SUCCESS = 'COMMENT/FETCH_COMMENT_DELETE_SUCCESS';\nexport const COMMENT_FETCH_COMMENT_DELETE_FAIL = 'COMMENT/FETCH_COMMENT_DELETE_FAIL';\nexport const fetchYoutubeComment = (contentId, commentPage, commentMaxPage = 0, init = false) => {\n  if (!init && commentPage > commentMaxPage) {\n    return dispatch => {\n      /*do Nothing*/\n    };\n  }\n\n  return dispatch => {\n    dispatch(fetchYoutubeCommentStarted()); //TODO get comment from api\n\n    return getYoutubeComment(contentId, commentPage).then(response => {\n      dispatch(fetchYoutubeCommentSuccess({\n        apiResponse: new ApiResponse(response.data),\n        page: commentPage\n      }));\n    }).catch(function (error) {\n      dispatch(fetchYoutubeCommentFail(error));\n    }).finally(() => {\n      dispatch(fetchYoutubeCommentFinished());\n    });\n  };\n};\nexport const fetchMoobeComment = (contentId, commentPage, commentMaxPage = 0, init = false) => {\n  if (!init && commentPage > commentMaxPage) {\n    return dispatch => {\n      /*do Nothing*/\n    };\n  }\n\n  return dispatch => {\n    dispatch(fetchMoobeCommentStarted()); //TODO get comment from api\n\n    return getMoobeComment(contentId, commentPage).then(response => {\n      dispatch(fetchMoobeCommentSuccess({\n        apiResponse: new ApiResponse(response.data),\n        page: commentPage\n      }));\n    }).catch(function (error) {\n      dispatch(fetchMoobeCommentDataFail(error));\n    }).finally(() => {\n      dispatch(fetchMoobeCommentFinished());\n    });\n  };\n};\nexport const fetchUpdateCommentLike = (email, commentId, contentsId, like, successCallback, failedCallback) => {\n  return dispatch => {\n    dispatch(fetchCommentLikeStarted());\n    return updateCommentLike(email, commentId, contentsId, like).then(response => {\n      let apiResponse = new ApiResponse(response.data);\n\n      if (apiResponse.isSuccess) {\n        dispatch(fetchCommentLikeSuccess());\n        if (successCallback) successCallback();\n      } else {\n        dispatch(fetchCommentLikeFail());\n        if (failedCallback) failedCallback();\n      }\n    }).catch(error => {\n      dispatch(fetchCommentLikeFail());\n      if (failedCallback) failedCallback();\n    }).finally(() => {\n      dispatch(fetchCommentLikeFinished());\n    });\n  };\n};\nexport const fetchInsertMoobeComment = (email, contentId, value, successCallback = null, failedCallback = null) => {\n  return dispatch => {\n    dispatch(fetchCommentInsertStarted());\n    return insertComment(email, contentId, value).then(response => {\n      let apiResponse = new ApiResponse(response.data);\n\n      if (apiResponse.isSuccess) {\n        dispatch(fetchCommentInsertSuccess());\n        if (successCallback) successCallback(apiResponse.renderContent(Comment));\n      } else {\n        dispatch(fetchCommentInsertFail());\n        if (failedCallback) failedCallback();\n      }\n    }).catch(error => {\n      dispatch(fetchCommentInsertFail());\n      if (failedCallback) failedCallback();\n    }).finally(() => {\n      dispatch(fetchCommentInsertFinished());\n    });\n  };\n};\nexport const fetchUpdateMoobeComment = (email, commentId, value, successCallback = null, failedCallback = null) => {\n  return dispatch => {\n    dispatch(fetchCommentUpdateStarted());\n    return updateComment(email, commentId, value).then(response => {\n      let apiResponse = new ApiResponse(response.data);\n\n      if (apiResponse.isSuccess) {\n        dispatch(fetchCommentUpdateSuccess());\n        if (successCallback) successCallback();\n      } else {\n        dispatch(fetchCommentUpdateFail());\n        if (failedCallback) failedCallback();\n      }\n    }).catch(error => {\n      dispatch(fetchCommentUpdateFail());\n      if (failedCallback) failedCallback();\n    }).finally(() => {\n      dispatch(fetchCommentUpdateFinished());\n    });\n  };\n};\nexport const fetchDeleteMoobeComment = (email, commentId, successCallback = null, failedCallback = null) => {\n  return dispatch => {\n    dispatch(fetchCommentDeleteStarted());\n    return deleteComment(email, commentId).then(response => {\n      let apiResponse = new ApiResponse(response.data);\n\n      if (apiResponse.isSuccess) {\n        dispatch(fetchCommentDeleteSuccess());\n        if (successCallback) successCallback();\n      } else {\n        dispatch(fetchCommentDeleteFail());\n        if (failedCallback) failedCallback();\n      }\n    }).catch(error => {\n      dispatch(fetchCommentDeleteFail());\n      if (failedCallback) failedCallback();\n    }).finally(() => {\n      dispatch(fetchCommentDeleteFinished());\n    });\n  };\n};\nexport const resetComment = () => {\n  return {\n    type: COMMENT_RESET_COMMENT\n  };\n};\nexport const addMoobeCommentFirst = comment => {\n  return {\n    type: COMMENT_ADD_MOOBE_COMMENT_FIRST,\n    data: comment\n  };\n};\nexport const updateMoobeCommentUpdated = (comment, updatedValue) => {\n  return {\n    type: COMMENT_UPDATE_MOOBE_COMMENT_UPDATED,\n    data: {\n      id: comment.id,\n      updatedValue: updatedValue\n    }\n  };\n};\nexport const deleteMoobeCommentDeleted = comment => {\n  return {\n    type: COMMENT_DELETE_MOOBE_COMMENT_DELETED,\n    data: comment\n  };\n};\nexport const fetchMoobeCommentStarted = () => {\n  return {\n    type: COMMENT_FETCH_MOOBE_STARTED\n  };\n};\nexport const fetchMoobeCommentFinished = () => {\n  return {\n    type: COMMENT_FETCH_MOOBE_FINISHED\n  };\n};\nexport const fetchMoobeCommentSuccess = data => {\n  return {\n    type: COMMENT_FETCH_MOOBE_SUCCESS,\n    data\n  };\n};\nexport const fetchMoobeCommentDataFail = err => {\n  return {\n    type: COMMENT_FETCH_MOOBE_FAIL,\n    err\n  };\n};\nexport const fetchYoutubeCommentStarted = () => {\n  return {\n    type: COMMENT_FETCH_YOUTUBE_STARTED\n  };\n};\nexport const fetchYoutubeCommentFinished = () => {\n  return {\n    type: COMMENT_FETCH_YOUTUBE_FINISHED\n  };\n};\nexport const fetchYoutubeCommentSuccess = data => {\n  return {\n    type: COMMENT_FETCH_YOUTUBE_SUCCESS,\n    data\n  };\n};\nexport const fetchYoutubeCommentFail = err => {\n  return {\n    type: COMMENT_FETCH_YOUTUBE_FAIL,\n    err\n  };\n};\nexport const fetchCommentLikeStarted = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_LIKE_STARTED\n  };\n};\nexport const fetchCommentLikeFinished = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_LIKE_FINISHED\n  };\n};\nexport const fetchCommentLikeSuccess = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_LIKE_SUCCESS\n  };\n};\nexport const fetchCommentLikeFail = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_LIKE_FAIL\n  };\n};\nexport const fetchCommentInsertStarted = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_INSERT_STARTED\n  };\n};\nexport const fetchCommentInsertFinished = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_INSERT_FINISHED\n  };\n};\nexport const fetchCommentInsertSuccess = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_INSERT_SUCCESS\n  };\n};\nexport const fetchCommentInsertFail = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_INSERT_FAIL\n  };\n};\nexport const fetchCommentUpdateStarted = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_UPDATE_STARTED\n  };\n};\nexport const fetchCommentUpdateFinished = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_UPDATE_FINISHED\n  };\n};\nexport const fetchCommentUpdateSuccess = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_UPDATE_SUCCESS\n  };\n};\nexport const fetchCommentUpdateFail = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_UPDATE_FAIL\n  };\n};\nexport const fetchCommentDeleteStarted = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_DELETE_STARTED\n  };\n};\nexport const fetchCommentDeleteFinished = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_DELETE_FINISHED\n  };\n};\nexport const fetchCommentDeleteSuccess = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_DELETE_SUCCESS\n  };\n};\nexport const fetchCommentDeleteFail = () => {\n  return {\n    type: COMMENT_FETCH_COMMENT_DELETE_FAIL\n  };\n};","map":{"version":3,"sources":["/Users/nhnent/IdeaProjects/moobe/src/main/webapps/moobe-fe/src/data/redux/action/comment.js"],"names":["deleteComment","getContents","getMoobeComment","getYoutubeComment","insertComment","updateComment","updateCommentLike","ApiResponse","Comment","COMMENT_RESET_COMMENT","COMMENT_ADD_MOOBE_COMMENT_FIRST","COMMENT_UPDATE_MOOBE_COMMENT_UPDATED","COMMENT_DELETE_MOOBE_COMMENT_DELETED","COMMENT_FETCH_MOOBE_STARTED","COMMENT_FETCH_MOOBE_FINISHED","COMMENT_FETCH_MOOBE_SUCCESS","COMMENT_FETCH_MOOBE_FAIL","COMMENT_FETCH_YOUTUBE_STARTED","COMMENT_FETCH_YOUTUBE_FINISHED","COMMENT_FETCH_YOUTUBE_SUCCESS","COMMENT_FETCH_YOUTUBE_FAIL","COMMENT_FETCH_COMMENT_LIKE_STARTED","COMMENT_FETCH_COMMENT_LIKE_FINISHED","COMMENT_FETCH_COMMENT_LIKE_SUCCESS","COMMENT_FETCH_COMMENT_LIKE_FAIL","COMMENT_FETCH_COMMENT_INSERT_STARTED","COMMENT_FETCH_COMMENT_INSERT_FINISHED","COMMENT_FETCH_COMMENT_INSERT_SUCCESS","COMMENT_FETCH_COMMENT_INSERT_FAIL","COMMENT_FETCH_COMMENT_UPDATE_STARTED","COMMENT_FETCH_COMMENT_UPDATE_FINISHED","COMMENT_FETCH_COMMENT_UPDATE_SUCCESS","COMMENT_FETCH_COMMENT_UPDATE_FAIL","COMMENT_FETCH_COMMENT_DELETE_STARTED","COMMENT_FETCH_COMMENT_DELETE_FINISHED","COMMENT_FETCH_COMMENT_DELETE_SUCCESS","COMMENT_FETCH_COMMENT_DELETE_FAIL","fetchYoutubeComment","contentId","commentPage","commentMaxPage","init","dispatch","fetchYoutubeCommentStarted","then","response","fetchYoutubeCommentSuccess","apiResponse","data","page","catch","error","fetchYoutubeCommentFail","finally","fetchYoutubeCommentFinished","fetchMoobeComment","fetchMoobeCommentStarted","fetchMoobeCommentSuccess","fetchMoobeCommentDataFail","fetchMoobeCommentFinished","fetchUpdateCommentLike","email","commentId","contentsId","like","successCallback","failedCallback","fetchCommentLikeStarted","isSuccess","fetchCommentLikeSuccess","fetchCommentLikeFail","fetchCommentLikeFinished","fetchInsertMoobeComment","value","fetchCommentInsertStarted","fetchCommentInsertSuccess","renderContent","fetchCommentInsertFail","fetchCommentInsertFinished","fetchUpdateMoobeComment","fetchCommentUpdateStarted","fetchCommentUpdateSuccess","fetchCommentUpdateFail","fetchCommentUpdateFinished","fetchDeleteMoobeComment","fetchCommentDeleteStarted","fetchCommentDeleteSuccess","fetchCommentDeleteFail","fetchCommentDeleteFinished","resetComment","type","addMoobeCommentFirst","comment","updateMoobeCommentUpdated","updatedValue","id","deleteMoobeCommentDeleted","err"],"mappings":"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","sourcesContent":["import {\n    deleteComment,\n    getContents,\n    getMoobeComment,\n    getYoutubeComment,\n    insertComment,\n    updateComment,\n    updateCommentLike\n} from \"data/api\";\nimport ApiResponse from \"data/redux/model/ApiResponse\";\nimport Comment from \"data/redux/model/Comment\";\n\n\nexport const COMMENT_RESET_COMMENT = 'COMMENT/RESET_COMMENT';\nexport const COMMENT_ADD_MOOBE_COMMENT_FIRST = 'COMMENT/ADD_MOOBE_COMMENT_FIRST';\nexport const COMMENT_UPDATE_MOOBE_COMMENT_UPDATED = 'COMMENT/UPDATE_MOOBE_COMMENT_UPDATED';\nexport const COMMENT_DELETE_MOOBE_COMMENT_DELETED = 'COMMENT/DELETE_MOOBE_COMMENT_DELETED';\n\nexport const COMMENT_FETCH_MOOBE_STARTED = 'COMMENT/FETCH_MOOBE_STARTED';\nexport const COMMENT_FETCH_MOOBE_FINISHED = 'COMMENT/FETCH_MOOBE_FINISHED';\nexport const COMMENT_FETCH_MOOBE_SUCCESS = 'COMMENT/FETCH_MOOBE_SUCCESS';\nexport const COMMENT_FETCH_MOOBE_FAIL = 'COMMENT/FETCH_MOOBE_FAIL';\n\nexport const COMMENT_FETCH_YOUTUBE_STARTED = 'COMMENT/FETCH_YOUTUBE_STARTED';\nexport const COMMENT_FETCH_YOUTUBE_FINISHED = 'COMMENT/FETCH_YOUTUBE_FINISHED';\nexport const COMMENT_FETCH_YOUTUBE_SUCCESS = 'COMMENT/FETCH_YOUTUBE_SUCCESS';\nexport const COMMENT_FETCH_YOUTUBE_FAIL = 'COMMENT/FETCH_YOUTUBE_FAIL';\n\nexport const COMMENT_FETCH_COMMENT_LIKE_STARTED = 'COMMENT/FETCH_COMMENT_LIKE_STARTED';\nexport const COMMENT_FETCH_COMMENT_LIKE_FINISHED = 'COMMENT/FETCH_COMMENT_LIKE_FINISHED';\nexport const COMMENT_FETCH_COMMENT_LIKE_SUCCESS = 'COMMENT/FETCH_COMMENT_LIKE_SUCCESS';\nexport const COMMENT_FETCH_COMMENT_LIKE_FAIL = 'COMMENT/FETCH_COMMENT_LIKE_FAIL';\n\nexport const COMMENT_FETCH_COMMENT_INSERT_STARTED = 'COMMENT/FETCH_COMMENT_INSERT_STARTED';\nexport const COMMENT_FETCH_COMMENT_INSERT_FINISHED = 'COMMENT/FETCH_COMMENT_INSERT_FINISHED';\nexport const COMMENT_FETCH_COMMENT_INSERT_SUCCESS = 'COMMENT/FETCH_COMMENT_INSERT_SUCCESS';\nexport const COMMENT_FETCH_COMMENT_INSERT_FAIL = 'COMMENT/FETCH_COMMENT_INSERT_FAIL';\n\nexport const COMMENT_FETCH_COMMENT_UPDATE_STARTED = 'COMMENT/FETCH_COMMENT_UPDATE_STARTED';\nexport const COMMENT_FETCH_COMMENT_UPDATE_FINISHED = 'COMMENT/FETCH_COMMENT_UPDATE_FINISHED';\nexport const COMMENT_FETCH_COMMENT_UPDATE_SUCCESS = 'COMMENT/FETCH_COMMENT_UPDATE_SUCCESS';\nexport const COMMENT_FETCH_COMMENT_UPDATE_FAIL = 'COMMENT/FETCH_COMMENT_UPDATE_FAIL';\n\nexport const COMMENT_FETCH_COMMENT_DELETE_STARTED = 'COMMENT/FETCH_COMMENT_DELETE_STARTED';\nexport const COMMENT_FETCH_COMMENT_DELETE_FINISHED = 'COMMENT/FETCH_COMMENT_DELETE_FINISHED';\nexport const COMMENT_FETCH_COMMENT_DELETE_SUCCESS = 'COMMENT/FETCH_COMMENT_DELETE_SUCCESS';\nexport const COMMENT_FETCH_COMMENT_DELETE_FAIL = 'COMMENT/FETCH_COMMENT_DELETE_FAIL';\n\nexport const fetchYoutubeComment = (contentId, commentPage, commentMaxPage = 0, init = false) => {\n    if (!init && commentPage > commentMaxPage) {\n        return (dispatch) => {/*do Nothing*/};\n    }\n    return (dispatch) => {\n        dispatch(fetchYoutubeCommentStarted())\n        //TODO get comment from api\n        return getYoutubeComment(contentId, commentPage).then(response => {\n            dispatch(fetchYoutubeCommentSuccess({apiResponse: new ApiResponse(response.data), page: commentPage}))\n        }).catch(function (error) {\n            dispatch(fetchYoutubeCommentFail(error))\n        }).finally(() => {\n            dispatch(fetchYoutubeCommentFinished())\n        })\n    }\n};\n\nexport const fetchMoobeComment = (contentId, commentPage, commentMaxPage = 0, init = false) => {\n    if (!init && commentPage > commentMaxPage) {\n        return (dispatch) => {/*do Nothing*/\n        };\n    }\n    return (dispatch) => {\n        dispatch(fetchMoobeCommentStarted());\n        //TODO get comment from api\n        return getMoobeComment(contentId, commentPage).then(response => {\n            dispatch(fetchMoobeCommentSuccess({apiResponse: new ApiResponse(response.data), page: commentPage}))\n        }).catch(function (error) {\n            dispatch(fetchMoobeCommentDataFail(error))\n        }).finally(() => {\n            dispatch(fetchMoobeCommentFinished())\n        })\n    }\n};\n\nexport const fetchUpdateCommentLike = (email, commentId, contentsId, like, successCallback, failedCallback) => {\n    return (dispatch) => {\n        dispatch(fetchCommentLikeStarted());\n        return updateCommentLike(email, commentId, contentsId, like).then(response => {\n            let apiResponse = new ApiResponse(response.data)\n            if (apiResponse.isSuccess) {\n                dispatch(fetchCommentLikeSuccess());\n                if (successCallback) successCallback();\n            } else {\n                dispatch(fetchCommentLikeFail());\n                if (failedCallback) failedCallback();\n            }\n        }).catch((error) => {\n            dispatch(fetchCommentLikeFail());\n            if (failedCallback) failedCallback();\n        }).finally(() => {\n            dispatch(fetchCommentLikeFinished());\n        })\n    }\n};\n\nexport const fetchInsertMoobeComment = (email, contentId, value, successCallback=null, failedCallback=null) => {\n    return (dispatch) => {\n        dispatch(fetchCommentInsertStarted());\n        return insertComment(email, contentId, value).then(response => {\n            let apiResponse = new ApiResponse(response.data)\n            if (apiResponse.isSuccess) {\n                dispatch(fetchCommentInsertSuccess());\n                if (successCallback) successCallback(apiResponse.renderContent(Comment));\n            } else {\n                dispatch(fetchCommentInsertFail());\n                if (failedCallback) failedCallback();\n            }\n        }).catch((error) => {\n            dispatch(fetchCommentInsertFail());\n            if (failedCallback) failedCallback();\n        }).finally(() => {\n            dispatch(fetchCommentInsertFinished());\n        })\n    }\n}\n\n\nexport const fetchUpdateMoobeComment = (email, commentId, value, successCallback=null, failedCallback=null) => {\n    return (dispatch) => {\n        dispatch(fetchCommentUpdateStarted());\n        return updateComment(email, commentId, value).then(response => {\n            let apiResponse = new ApiResponse(response.data)\n            if (apiResponse.isSuccess) {\n                dispatch(fetchCommentUpdateSuccess());\n                if (successCallback) successCallback();\n            } else {\n                dispatch(fetchCommentUpdateFail());\n                if (failedCallback) failedCallback();\n            }\n        }).catch((error) => {\n            dispatch(fetchCommentUpdateFail());\n            if (failedCallback) failedCallback();\n        }).finally(() => {\n            dispatch(fetchCommentUpdateFinished());\n        })\n    }\n}\n\nexport const fetchDeleteMoobeComment = (email, commentId, successCallback=null, failedCallback=null) => {\n    return (dispatch) => {\n        dispatch(fetchCommentDeleteStarted());\n        return deleteComment(email, commentId).then(response => {\n            let apiResponse = new ApiResponse(response.data)\n            if (apiResponse.isSuccess) {\n                dispatch(fetchCommentDeleteSuccess());\n                if (successCallback) successCallback();\n            } else {\n                dispatch(fetchCommentDeleteFail());\n                if (failedCallback) failedCallback();\n            }\n        }).catch((error) => {\n            dispatch(fetchCommentDeleteFail());\n            if (failedCallback) failedCallback();\n        }).finally(() => {\n            dispatch(fetchCommentDeleteFinished());\n        })\n    }\n}\n\nexport const resetComment = () => {\n    return {\n        type: COMMENT_RESET_COMMENT\n    }\n};\n\nexport const addMoobeCommentFirst = (comment) => {\n    return {\n        type: COMMENT_ADD_MOOBE_COMMENT_FIRST,\n        data: comment\n    }\n}\n\nexport const updateMoobeCommentUpdated = (comment, updatedValue) => {\n    return {\n        type: COMMENT_UPDATE_MOOBE_COMMENT_UPDATED,\n        data: {\n            id: comment.id,\n            updatedValue: updatedValue\n        }\n    }\n}\n\nexport const deleteMoobeCommentDeleted = (comment) => {\n    return {\n        type: COMMENT_DELETE_MOOBE_COMMENT_DELETED,\n        data: comment\n    }\n}\n\nexport const fetchMoobeCommentStarted = () => {\n    return {\n        type: COMMENT_FETCH_MOOBE_STARTED\n    }\n};\n\nexport const fetchMoobeCommentFinished = () => {\n    return {\n        type: COMMENT_FETCH_MOOBE_FINISHED\n    }\n};\n\nexport const fetchMoobeCommentSuccess = (data) => {\n    return {\n        type: COMMENT_FETCH_MOOBE_SUCCESS,\n        data\n    }\n};\n\nexport const fetchMoobeCommentDataFail = (err) => {\n    return {\n        type: COMMENT_FETCH_MOOBE_FAIL,\n        err\n    }\n};\n\nexport const fetchYoutubeCommentStarted = () => {\n    return {\n        type: COMMENT_FETCH_YOUTUBE_STARTED\n    }\n};\n\nexport const fetchYoutubeCommentFinished = () => {\n    return {\n        type: COMMENT_FETCH_YOUTUBE_FINISHED\n    }\n};\n\nexport const fetchYoutubeCommentSuccess = (data) => {\n    return {\n        type: COMMENT_FETCH_YOUTUBE_SUCCESS,\n        data\n    }\n};\n\nexport const fetchYoutubeCommentFail = (err) => {\n    return {\n        type: COMMENT_FETCH_YOUTUBE_FAIL,\n        err\n    }\n};\n\nexport const fetchCommentLikeStarted = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_LIKE_STARTED\n    }\n};\n\nexport const fetchCommentLikeFinished = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_LIKE_FINISHED\n    }\n};\nexport const fetchCommentLikeSuccess = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_LIKE_SUCCESS\n    }\n};\nexport const fetchCommentLikeFail = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_LIKE_FAIL\n    }\n};\n\nexport const fetchCommentInsertStarted = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_INSERT_STARTED\n    }\n};\n\nexport const fetchCommentInsertFinished = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_INSERT_FINISHED\n    }\n};\nexport const fetchCommentInsertSuccess = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_INSERT_SUCCESS\n    }\n};\nexport const fetchCommentInsertFail = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_INSERT_FAIL\n    }\n};\n\nexport const fetchCommentUpdateStarted = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_UPDATE_STARTED\n    }\n};\n\nexport const fetchCommentUpdateFinished = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_UPDATE_FINISHED\n    }\n};\nexport const fetchCommentUpdateSuccess = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_UPDATE_SUCCESS\n    }\n};\nexport const fetchCommentUpdateFail = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_UPDATE_FAIL\n    }\n};\n\nexport const fetchCommentDeleteStarted = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_DELETE_STARTED\n    }\n};\n\nexport const fetchCommentDeleteFinished = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_DELETE_FINISHED\n    }\n};\nexport const fetchCommentDeleteSuccess = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_DELETE_SUCCESS\n    }\n};\nexport const fetchCommentDeleteFail = () => {\n    return {\n        type: COMMENT_FETCH_COMMENT_DELETE_FAIL\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}